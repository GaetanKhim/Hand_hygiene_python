#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Feb  7 08:34:38 2022

@author: gaetan
"""


import pandas as pd
import streamlit as st
import plotly.graph_objects as go 
from plotly.subplots import make_subplots 

st.set_page_config(layout="wide")
st.set_option("deprecation.showPyplotGlobalUse", False)

hand_hygiene_SR = pd.read_csv("Hand_hygiene_SR.csv", error_bad_lines=False) 
Ward = hand_hygiene_SR["Ward_audited"]
Date = hand_hygiene_SR["end"]

hand_hygiene_SR.insert(6, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(7, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(10, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(11, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(14, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(15, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(18, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(19, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(22, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(23, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(26, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(27, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(30, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(31, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(34, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(35, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(38, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(39, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(42, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(43, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(46, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(47, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(50, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(51, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(54, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(55, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(58, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(59, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(62, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(63, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(66, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(67, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(70, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(71, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(74, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(75, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(78, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(79, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(82, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(83, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(86, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(87, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(90, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(91, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(94, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(95, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(98, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(99, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(102, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(103, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(107, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(108, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(111, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(112, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(115, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(116, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(119, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(120, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(123, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(124, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(127, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(128, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(131, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(132, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(135, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(136, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(139, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(140, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(143, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(144, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(147, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(148, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(151, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(152, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(155, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(156, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(159, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(160, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(163, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(164, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(167, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(168, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(171, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(172, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(175, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(176, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(179, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(180, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(183, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(184, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(187, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(188, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(191, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(192, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(195, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(196, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(199, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(200, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(203, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(204, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(208, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(209, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(212, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(213, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(216, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(217, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(220, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(221, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(224, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(225, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(228, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(229, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(232, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(233, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(236, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(237, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(240, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(241, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(244, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(245, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(248, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(249, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(252, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(253, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(256, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(257, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(260, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(261, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(264, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(265, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(268, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(269, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(272, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(273, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(276, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(277, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(280, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(281, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(284, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(285, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(288, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(289, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(292, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(293, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(296, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(297, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(300, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(301, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(304, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(305, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(309, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(310, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(313, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(314, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(317, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(318, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(321, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(322, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(325, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(326, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(329, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(330, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(333, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(334, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(337, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(338, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(341, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(342, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(345, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(346, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(349, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(350, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(353, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(354, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(357, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(358, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(361, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(362, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(365, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(366, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(369, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(370, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(373, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(374, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(377, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(378, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(381, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(382, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(385, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(386, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(389, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(390, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(393, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(394, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(397, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(398, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(401, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(402, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(405, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(406, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(410, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(411, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(414, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(415, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(418, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(419, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(422, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(423, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(426, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(427, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(430, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(431, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(434, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(435, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(438, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(439, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(442, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(443, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(446, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(447, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(450, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(451, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(454, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(455, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(458, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(459, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(462, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(463, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(466, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(467, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(470, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(471, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(474, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(475, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(478, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(479, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(482, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(483, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(486, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(487, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(490, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(491, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(494, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(495, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(498, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(499, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(502, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(503, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(506, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(507, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(511, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(512, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(515, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(516, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(519, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(520, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(523, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(524, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(527, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(528, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(531, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(532, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(535, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(536, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(539, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(540, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(543, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(544, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(547, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(548, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(551, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(552, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(555, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(556, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(559, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(560, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(563, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(564, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(567, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(568, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(571, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(572, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(575, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(576, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(579, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(580, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(583, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(584, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(587, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(588, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(591, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(592, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(595, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(596, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(599, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(600, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(603, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(604, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(607, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(608, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(612, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(613, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(616, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(617, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(620, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(621, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(624, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(625, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(628, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(629, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(632, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(633, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(636, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(637, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(640, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(641, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(644, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(645, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(648, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(649, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(652, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(653, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(656, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(657, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(660, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(661, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(664, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(665, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(668, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(669, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(672, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(673, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(676, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(677, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(680, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(681, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(684, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(685, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(688, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(689, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(692, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(693, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(696, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(697, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(700, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(701, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(704, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(705, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(708, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(709, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(713, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(714, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(717, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(718, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(721, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(722, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(725, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(726, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(729, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(730, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(733, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(734, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(737, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(738, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(741, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(742, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(745, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(746, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(749, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(750, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(753, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(754, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(757, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(758, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(761, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(762, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(765, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(766, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(769, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(770, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(773, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(774, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(777, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(778, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(781, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(782, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(785, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(786, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(789, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(790, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(793, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(794, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(797, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(798, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(801, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(802, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(805, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(806, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(809, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(810, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(814, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(815, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(818, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(819, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(822, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(823, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(826, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(827, "Date", Date, allow_duplicates=True)
hand_hygiene_SR.insert(830, "Ward", Ward, allow_duplicates=True)
hand_hygiene_SR.insert(831, "Date", Date, allow_duplicates=True)

#Regex table + melt

filtered_HH_table1 = hand_hygiene_SR.filter(regex="Staff") 
melted_table_1 = pd.melt(filtered_HH_table1)
melted_table_1.rename(columns={"variable": "Staff audited ###", "value": "Staff audited"}, inplace=True)

filtered_HH_table2 = hand_hygiene_SR.filter(regex="Moment")
melted_table_2 = pd.melt(filtered_HH_table2)
melted_table_2.rename(columns={"variable": "Moment audited ###", "value": "Moment audited"}, inplace=True)

filtered_HH_table3 = hand_hygiene_SR.filter(regex="HH")
melted_table_3 = pd.melt(filtered_HH_table3)
melted_table_3.rename(columns={"variable": "HH action ###", "value": "HH action"}, inplace=True)

filtered_HH_table4 = hand_hygiene_SR.filter(regex="^Ward$")
melted_table_4 = pd.melt(filtered_HH_table4)
melted_table_4.rename(columns={"variable": "Ward ###", "value": "Ward"}, inplace=True)

filtered_HH_table5 = hand_hygiene_SR.filter(regex="Date")
melted_table_5 = pd.melt(filtered_HH_table5)
melted_table_5.rename(columns={"variable": "Date ###", "value": "Date"}, inplace=True)

#merge (we are trying to append multiple datasets together through concat)
#Need to add ward to differentiate the data (done)
#need to stress test through multiple datasets (done) 

concatenated_table = pd.concat([melted_table_4, melted_table_5, melted_table_1, melted_table_2, melted_table_3], axis=1)
concatenated_table_2 = concatenated_table[["Ward", "Date", "Staff audited", "Moment audited", "HH action"]]

concatenated_table_3 = concatenated_table_2.dropna()

#ER ward data total: 
ER_data = concatenated_table_3[concatenated_table_3["Ward"] == "ER"]

#ICU-med data total: 
ICU_med_data = concatenated_table_3[concatenated_table_3["Ward"] == "ICU_med"]

#ICU-surgery data total: 
ICU_sur_data = concatenated_table_3[concatenated_table_3["Ward"] == "ICU_Sur"]

#Med-A data total:
Med_A_data = concatenated_table_3[concatenated_table_3["Ward"] == "Med_A"]

#Med-B data total: 
Med_B_data = concatenated_table_3[concatenated_table_3["Ward"] == "Med_B"]

#Pneumology data total: 
Pneumology_data = concatenated_table_3[concatenated_table_3["Ward"] == "Pneumology"]

#Surgery A data total: 
Surgery_A_data = concatenated_table_3[concatenated_table_3["Ward"] == "Sur_A"]

#Surgery B data total: 
Surgery_B_data = concatenated_table_3[concatenated_table_3["Ward"] == "Sur_B"]

#Surgery C data total: 
Surgery_C_data = concatenated_table_3[concatenated_table_3["Ward"] == "Sur_C"]

#ENT data total: 
ENT_data = concatenated_table_3[concatenated_table_3["Ward"] == "ENT"]

#OB-GYN data total:
OB_GYN_data = concatenated_table_3[concatenated_table_3["Ward"] == "Gyn_Obs"]

#Pediatric data total:
Pediatric_data = concatenated_table_3[concatenated_table_3["Ward"] == "Ped_NICU"]

#Ophtalmology data total:
Ophtalmology_data = concatenated_table_3[concatenated_table_3["Ward"] == "Opthalmo"]


#ER ward data by month
ER_data_month_Jan = ER_data[ER_data["Date"].str.contains("\-01\-")]
ER_count_Jan = ER_data_month_Jan["HH action"].count()
ER_data_month_Feb = ER_data[ER_data["Date"].str.contains("\-02\-")]
ER_count_Feb = ER_data_month_Feb["HH action"].count()
ER_data_month_Mar = ER_data[ER_data["Date"].str.contains("\-03\-")]
ER_count_Mar = ER_data_month_Mar["HH action"].count()
ER_data_month_Apr = ER_data[ER_data["Date"].str.contains("\-04\-")]
ER_count_Apr = ER_data_month_Apr["HH action"].count()
ER_data_month_May = ER_data[ER_data["Date"].str.contains("\-05\-")]
ER_count_May = ER_data_month_May["HH action"].count()
ER_data_month_Jun = ER_data[ER_data["Date"].str.contains("\-06\-")]
ER_count_Jun = ER_data_month_Jun["HH action"].count()
ER_data_month_Jul = ER_data[ER_data["Date"].str.contains("\-07\-")]
ER_count_Jul = ER_data_month_Jul["HH action"].count()
ER_data_month_Aug = ER_data[ER_data["Date"].str.contains("\-08\-")]
ER_count_Aug = ER_data_month_Aug["HH action"].count()
ER_data_month_Sep = ER_data[ER_data["Date"].str.contains("\-09\-")]
ER_count_Sep = ER_data_month_Sep["HH action"].count()
ER_data_month_Oct = ER_data[ER_data["Date"].str.contains("\-10\-")]
ER_count_Oct = ER_data_month_Oct["HH action"].count()
ER_data_month_Nov = ER_data[ER_data["Date"].str.contains("\-11\-")]
ER_count_Nov = ER_data_month_Nov["HH action"].count()
ER_data_month_Dec = ER_data[ER_data["Date"].str.contains("\-12\-")]
ER_count_Dec = ER_data_month_Dec["HH action"].count()

#ICU-med data by month: 
ICU_med_data_month_Jan = ICU_med_data[ICU_med_data["Date"].str.contains("\-01\-")]
ICU_med_count_Jan = ICU_med_data_month_Jan["HH action"].count()
ICU_med_data_month_Feb = ICU_med_data[ICU_med_data["Date"].str.contains("\-02\-")]
ICU_med_count_Feb = ICU_med_data_month_Feb["HH action"].count()
ICU_med_data_month_Mar = ICU_med_data[ICU_med_data["Date"].str.contains("\-03\-")]
ICU_med_count_Mar = ICU_med_data_month_Mar["HH action"].count()
ICU_med_data_month_Apr = ICU_med_data[ICU_med_data["Date"].str.contains("\-04\-")]
ICU_med_count_Apr = ICU_med_data_month_Apr["HH action"].count()
ICU_med_data_month_May = ICU_med_data[ICU_med_data["Date"].str.contains("\-05\-")]
ICU_med_count_May = ICU_med_data_month_May["HH action"].count()
ICU_med_data_month_Jun = ICU_med_data[ICU_med_data["Date"].str.contains("\-06\-")]
ICU_med_count_Jun = ICU_med_data_month_Jun["HH action"].count()
ICU_med_data_month_Jul = ICU_med_data[ICU_med_data["Date"].str.contains("\-07\-")]
ICU_med_count_Jul =ICU_med_data_month_Jul["HH action"].count()
ICU_med_data_month_Aug = ICU_med_data[ICU_med_data["Date"].str.contains("\-08\-")]
ICU_med_count_Aug = ICU_med_data_month_Aug["HH action"].count()
ICU_med_data_month_Sep = ICU_med_data[ICU_med_data["Date"].str.contains("\-09\-")]
ICU_med_count_Sep = ICU_med_data_month_Sep["HH action"].count()
ICU_med_data_month_Oct = ICU_med_data[ICU_med_data["Date"].str.contains("\-10\-")]
ICU_med_count_Oct = ICU_med_data_month_Oct["HH action"].count()
ICU_med_data_month_Nov = ICU_med_data[ICU_med_data["Date"].str.contains("\-11\-")]
ICU_med_count_Nov = ICU_med_data_month_Nov["HH action"].count()
ICU_med_data_month_Dec = ICU_med_data[ICU_med_data["Date"].str.contains("\-12\-")]
ICU_med_count_Dec = ICU_med_data_month_Dec["HH action"].count()

#ICU-surgery data by month:
ICU_sur_data_month_Jan = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-01\-")]
ICU_sur_count_Jan = ICU_sur_data_month_Jan["HH action"].count()
ICU_sur_data_month_Feb = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-02\-")]
ICU_sur_count_Feb = ICU_sur_data_month_Feb["HH action"].count()
ICU_sur_data_month_Mar = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-03\-")]
ICU_sur_count_Mar = ICU_sur_data_month_Mar["HH action"].count()
ICU_sur_data_month_Apr = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-04\-")]
ICU_sur_count_Apr = ICU_sur_data_month_Apr["HH action"].count()
ICU_sur_data_month_May = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-05\-")]
ICU_sur_count_May = ICU_sur_data_month_May["HH action"].count()
ICU_sur_data_month_Jun = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-06\-")]
ICU_sur_count_Jun = ICU_sur_data_month_Jun["HH action"].count()
ICU_sur_data_month_Jul = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-07\-")]
ICU_sur_count_Jul = ICU_sur_data_month_Jul["HH action"].count()
ICU_sur_data_month_Aug = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-08\-")]
ICU_sur_count_Aug = ICU_sur_data_month_Aug["HH action"].count()
ICU_sur_data_month_Sep = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-09\-")]
ICU_sur_count_Sep = ICU_sur_data_month_Sep["HH action"].count()
ICU_sur_data_month_Oct = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-10\-")]
ICU_sur_count_Oct = ICU_sur_data_month_Oct["HH action"].count()
ICU_sur_data_month_Nov = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-11\-")]
ICU_sur_count_Nov = ICU_sur_data_month_Nov["HH action"].count()
ICU_sur_data_month_Dec = ICU_sur_data[ICU_sur_data["Date"].str.contains("\-12\-")]
ICU_sur_count_Dec = ICU_sur_data_month_Dec["HH action"].count()

#Med_A data by month: 
Med_A_data_month_Jan = Med_A_data[Med_A_data["Date"].str.contains("\-01\-")]
Med_A_count_Jan = Med_A_data_month_Jan["HH action"].count()
Med_A_data_month_Feb = Med_A_data[Med_A_data["Date"].str.contains("\-02\-")]
Med_A_count_Feb = Med_A_data_month_Feb["HH action"].count()
Med_A_data_month_Mar = Med_A_data[Med_A_data["Date"].str.contains("\-03\-")]
Med_A_count_Mar = Med_A_data_month_Mar["HH action"].count()
Med_A_data_month_Apr = Med_A_data[Med_A_data["Date"].str.contains("\-04\-")]
Med_A_count_Apr = Med_A_data_month_Apr["HH action"].count()
Med_A_data_month_May = Med_A_data[Med_A_data["Date"].str.contains("\-05\-")]
Med_A_count_May = Med_A_data_month_May["HH action"].count()
Med_A_data_month_Jun = Med_A_data[Med_A_data["Date"].str.contains("\-06\-")]
Med_A_count_Jun = Med_A_data_month_Jun["HH action"].count()
Med_A_data_month_Jul = Med_A_data[Med_A_data["Date"].str.contains("\-07\-")]
Med_A_count_Jul = Med_A_data_month_Jul["HH action"].count()
Med_A_data_month_Aug = Med_A_data[Med_A_data["Date"].str.contains("\-08\-")]
Med_A_count_Aug = Med_A_data_month_Aug["HH action"].count()
Med_A_data_month_Sep = Med_A_data[Med_A_data["Date"].str.contains("\-09\-")]
Med_A_count_Sep = Med_A_data_month_Sep["HH action"].count()
Med_A_data_month_Oct = Med_A_data[Med_A_data["Date"].str.contains("\-10\-")]
Med_A_count_Oct = Med_A_data_month_Oct["HH action"].count()
Med_A_data_month_Nov = Med_A_data[Med_A_data["Date"].str.contains("\-11\-")]
Med_A_count_Nov = Med_A_data_month_Nov["HH action"].count()
Med_A_data_month_Dec = Med_A_data[Med_A_data["Date"].str.contains("\-12\-")]
Med_A_count_Dec = Med_A_data_month_Dec["HH action"].count()

#Med_B data by month:
Med_B_data_month_Jan = Med_B_data[Med_B_data["Date"].str.contains("\-01\-")]
Med_B_count_Jan = Med_B_data_month_Jan["HH action"].count()
Med_B_data_month_Feb = Med_B_data[Med_B_data["Date"].str.contains("\-02\-")]
Med_B_count_Feb = Med_B_data_month_Feb["HH action"].count()
Med_B_data_month_Mar = Med_B_data[Med_B_data["Date"].str.contains("\-03\-")]
Med_B_count_Mar = Med_B_data_month_Mar["HH action"].count()
Med_B_data_month_Apr = Med_B_data[Med_B_data["Date"].str.contains("\-04\-")]
Med_B_count_Apr = Med_B_data_month_Apr["HH action"].count()
Med_B_data_month_May = Med_B_data[Med_B_data["Date"].str.contains("\-05\-")]
Med_B_count_May = Med_B_data_month_May["HH action"].count()
Med_B_data_month_Jun = Med_B_data[Med_B_data["Date"].str.contains("\-06\-")]
Med_B_count_Jun = Med_B_data_month_Jun["HH action"].count()
Med_B_data_month_Jul = Med_B_data[Med_B_data["Date"].str.contains("\-07\-")]
Med_B_count_Jul = Med_B_data_month_Jul["HH action"].count()
Med_B_data_month_Aug = Med_B_data[Med_B_data["Date"].str.contains("\-08\-")]
Med_B_count_Aug = Med_B_data_month_Aug["HH action"].count()
Med_B_data_month_Sep = Med_B_data[Med_B_data["Date"].str.contains("\-09\-")]
Med_B_count_Sep = Med_B_data_month_Sep["HH action"].count()
Med_B_data_month_Oct = Med_B_data[Med_B_data["Date"].str.contains("\-10\-")]
Med_B_count_Oct = Med_B_data_month_Oct["HH action"].count()
Med_B_data_month_Nov = Med_B_data[Med_B_data["Date"].str.contains("\-11\-")]
Med_B_count_Nov = Med_B_data_month_Nov["HH action"].count()
Med_B_data_month_Dec = Med_B_data[Med_B_data["Date"].str.contains("\-12\-")]
Med_B_count_Dec = Med_B_data_month_Dec["HH action"].count()

#Pneumology data by month:
Pneumology_data_month_Jan = Pneumology_data[Pneumology_data["Date"].str.contains("\-01\-")]
Pneumology_count_Jan = Pneumology_data_month_Jan["HH action"].count()
Pneumology_data_month_Feb = Pneumology_data[Pneumology_data["Date"].str.contains("\-02\-")]
Pneumology_count_Feb = Pneumology_data_month_Feb["HH action"].count()
Pneumology_data_month_Mar = Pneumology_data[Pneumology_data["Date"].str.contains("\-03\-")]
Pneumology_count_Mar = Pneumology_data_month_Mar["HH action"].count()
Pneumology_data_month_Apr = Pneumology_data[Pneumology_data["Date"].str.contains("\-04\-")]
Pneumology_count_Apr = Pneumology_data_month_Apr["HH action"].count()
Pneumology_data_month_May = Pneumology_data[Pneumology_data["Date"].str.contains("\-05\-")]
Pneumology_count_May = Pneumology_data_month_May["HH action"].count()
Pneumology_data_month_Jun = Pneumology_data[Pneumology_data["Date"].str.contains("\-06\-")]
Pneumology_count_Jun = Pneumology_data_month_Jun["HH action"].count()
Pneumology_data_month_Jul = Pneumology_data[Pneumology_data["Date"].str.contains("\-07\-")]
Pneumology_count_Jul = Pneumology_data_month_Jul["HH action"].count()
Pneumology_data_month_Aug = Pneumology_data[Pneumology_data["Date"].str.contains("\-08\-")]
Pneumology_count_Aug = Pneumology_data_month_Aug["HH action"].count()
Pneumology_data_month_Sep = Pneumology_data[Pneumology_data["Date"].str.contains("\-09\-")]
Pneumology_count_Sep = Pneumology_data_month_Sep["HH action"].count()
Pneumology_data_month_Oct = Pneumology_data[Pneumology_data["Date"].str.contains("\-10\-")]
Pneumology_count_Oct = Pneumology_data_month_Oct["HH action"].count()
Pneumology_data_month_Nov = Pneumology_data[Pneumology_data["Date"].str.contains("\-11\-")]
Pneumology_count_Nov = Pneumology_data_month_Nov["HH action"].count()
Pneumology_data_month_Dec = Pneumology_data[Pneumology_data["Date"].str.contains("\-12\-")]
Pneumology_count_Dec = Pneumology_data_month_Dec["HH action"].count()

#Surgery A data by month: 
Surgery_A_data_month_Jan = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-01\-")]
Surgery_A_count_Jan = Surgery_A_data_month_Jan["HH action"].count()
Surgery_A_data_month_Feb = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-02\-")]
Surgery_A_count_Feb = Surgery_A_data_month_Feb["HH action"].count()
Surgery_A_data_month_Mar = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-03\-")]
Surgery_A_count_Mar = Surgery_A_data_month_Mar["HH action"].count()
Surgery_A_data_month_Apr = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-04\-")]
Surgery_A_count_Apr = Surgery_A_data_month_Apr["HH action"].count()
Surgery_A_data_month_May = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-05\-")]
Surgery_A_count_May = Surgery_A_data_month_May["HH action"].count()
Surgery_A_data_month_Jun = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-06\-")]
Surgery_A_count_Jun = Surgery_A_data_month_Jun["HH action"].count()
Surgery_A_data_month_Jul = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-07\-")]
Surgery_A_count_Jul = Surgery_A_data_month_Jul["HH action"].count()
Surgery_A_data_month_Aug = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-08\-")]
Surgery_A_count_Aug = Surgery_A_data_month_Aug["HH action"].count()
Surgery_A_data_month_Sep = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-09\-")]
Surgery_A_count_Sep = Surgery_A_data_month_Sep["HH action"].count()
Surgery_A_data_month_Oct = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-10\-")]
Surgery_A_count_Oct = Surgery_A_data_month_Oct["HH action"].count()
Surgery_A_data_month_Nov = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-11\-")]
Surgery_A_count_Nov = Surgery_A_data_month_Nov["HH action"].count()
Surgery_A_data_month_Dec = Surgery_A_data[Surgery_A_data["Date"].str.contains("\-12\-")]   
Surgery_A_count_Dec = Surgery_A_data_month_Dec["HH action"].count()

#Surgery B data by month: 
Surgery_B_data_month_Jan = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-01\-")]
Surgery_B_count_Jan = Surgery_B_data_month_Jan["HH action"].count()
Surgery_B_data_month_Feb = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-02\-")]
Surgery_B_count_Feb = Surgery_B_data_month_Feb["HH action"].count()
Surgery_B_data_month_Mar = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-03\-")]
Surgery_B_count_Mar = Surgery_B_data_month_Mar["HH action"].count()
Surgery_B_data_month_Apr = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-04\-")]
Surgery_B_count_Apr = Surgery_B_data_month_Apr["HH action"].count()
Surgery_B_data_month_May = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-05\-")]
Surgery_B_count_May = Surgery_B_data_month_May["HH action"].count()
Surgery_B_data_month_Jun = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-06\-")]
Surgery_B_count_Jun = Surgery_B_data_month_Jun["HH action"].count()
Surgery_B_data_month_Jul = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-07\-")]
Surgery_B_count_Jul = Surgery_B_data_month_Jul["HH action"].count()
Surgery_B_data_month_Aug = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-08\-")]
Surgery_B_count_Aug = Surgery_B_data_month_Aug["HH action"].count()
Surgery_B_data_month_Sep = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-09\-")]
Surgery_B_count_Sep = Surgery_B_data_month_Sep["HH action"].count()
Surgery_B_data_month_Oct = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-10\-")]
Surgery_B_count_Oct = Surgery_B_data_month_Oct["HH action"].count()
Surgery_B_data_month_Nov = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-11\-")]
Surgery_B_count_Nov = Surgery_B_data_month_Nov["HH action"].count()
Surgery_B_data_month_Dec = Surgery_B_data[Surgery_B_data["Date"].str.contains("\-12\-")] 
Surgery_B_count_Dec = Surgery_B_data_month_Dec["HH action"].count()

#Surgery C data by month:
Surgery_C_data_month_Jan = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-01\-")]
Surgery_C_count_Jan = Surgery_C_data_month_Jan["HH action"].count()
Surgery_C_data_month_Feb = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-02\-")]
Surgery_C_count_Feb = Surgery_C_data_month_Feb["HH action"].count()
Surgery_C_data_month_Mar = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-03\-")]
Surgery_C_count_Mar = Surgery_C_data_month_Mar["HH action"].count()
Surgery_C_data_month_Apr = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-04\-")]
Surgery_C_count_Apr = Surgery_C_data_month_Apr["HH action"].count()
Surgery_C_data_month_May = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-05\-")]
Surgery_C_count_May = Surgery_C_data_month_May["HH action"].count()
Surgery_C_data_month_Jun = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-06\-")]
Surgery_C_count_Jun = Surgery_C_data_month_Jun["HH action"].count()
Surgery_C_data_month_Jul = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-07\-")]
Surgery_C_count_Jul = Surgery_C_data_month_Jul["HH action"].count()
Surgery_C_data_month_Aug = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-08\-")]
Surgery_C_count_Aug = Surgery_C_data_month_Aug["HH action"].count()
Surgery_C_data_month_Sep = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-09\-")]
Surgery_C_count_Sep = Surgery_C_data_month_Sep["HH action"].count()
Surgery_C_data_month_Oct = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-10\-")]
Surgery_C_count_Oct = Surgery_C_data_month_Oct["HH action"].count()
Surgery_C_data_month_Nov = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-11\-")]
Surgery_C_count_Nov = Surgery_C_data_month_Nov["HH action"].count()
Surgery_C_data_month_Dec = Surgery_C_data[Surgery_C_data["Date"].str.contains("\-12\-")]  
Surgery_C_count_Dec = Surgery_C_data_month_Dec["HH action"].count()
    
#ENT data by month: 
ENT_data_month_Jan = ENT_data[ENT_data["Date"].str.contains("\-01\-")]
ENT_count_Jan = ENT_data_month_Jan["HH action"].count()
ENT_data_month_Feb = ENT_data[ENT_data["Date"].str.contains("\-02\-")]
ENT_count_Feb = ENT_data_month_Feb["HH action"].count()
ENT_data_month_Mar = ENT_data[ENT_data["Date"].str.contains("\-03\-")]
ENT_count_Mar = ENT_data_month_Mar["HH action"].count()
ENT_data_month_Apr = ENT_data[ENT_data["Date"].str.contains("\-04\-")]
ENT_count_Apr = ENT_data_month_Apr["HH action"].count()
ENT_data_month_May = ENT_data[ENT_data["Date"].str.contains("\-05\-")]
ENT_count_May = ENT_data_month_May["HH action"].count()
ENT_data_month_Jun = ENT_data[ENT_data["Date"].str.contains("\-06\-")]
ENT_count_Jun = ENT_data_month_Jun["HH action"].count()
ENT_data_month_Jul = ENT_data[ENT_data["Date"].str.contains("\-07\-")]
ENT_count_Jul = ENT_data_month_Jul["HH action"].count()
ENT_data_month_Aug = ENT_data[ENT_data["Date"].str.contains("\-08\-")]
ENT_count_Aug = ENT_data_month_Aug["HH action"].count()
ENT_data_month_Sep = ENT_data[ENT_data["Date"].str.contains("\-09\-")]
ENT_count_Sep = ENT_data_month_Sep["HH action"].count()
ENT_data_month_Oct = ENT_data[ENT_data["Date"].str.contains("\-10\-")]
ENT_count_Oct = ENT_data_month_Oct["HH action"].count()
ENT_data_month_Nov = ENT_data[ENT_data["Date"].str.contains("\-11\-")]
ENT_count_Nov = ENT_data_month_Nov["HH action"].count()
ENT_data_month_Dec = ENT_data[ENT_data["Date"].str.contains("\-12\-")]  
ENT_count_Dec = ENT_data_month_Dec["HH action"].count()

#OB-GYN data by month:
OB_GYN_data_month_Jan = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-01\-")]
OB_GYN_count_Jan = OB_GYN_data_month_Jan["HH action"].count()
OB_GYN_data_month_Feb = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-02\-")]
OB_GYN_count_Feb = OB_GYN_data_month_Feb["HH action"].count()
OB_GYN_data_month_Mar = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-03\-")]
OB_GYN_count_Mar = OB_GYN_data_month_Mar["HH action"].count()
OB_GYN_data_month_Apr = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-04\-")]
OB_GYN_count_Apr = OB_GYN_data_month_Apr["HH action"].count()
OB_GYN_data_month_May = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-05\-")]
OB_GYN_count_May = OB_GYN_data_month_May["HH action"].count()
OB_GYN_data_month_Jun = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-06\-")]
OB_GYN_count_Jun = OB_GYN_data_month_Jun["HH action"].count()
OB_GYN_data_month_Jul = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-07\-")]
OB_GYN_count_Jul = OB_GYN_data_month_Jul["HH action"].count()
OB_GYN_data_month_Aug = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-08\-")]
OB_GYN_count_Aug = OB_GYN_data_month_Aug["HH action"].count()
OB_GYN_data_month_Sep = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-09\-")]
OB_GYN_count_Sep = OB_GYN_data_month_Sep["HH action"].count()
OB_GYN_data_month_Oct = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-10\-")]
OB_GYN_count_Oct = OB_GYN_data_month_Oct["HH action"].count()
OB_GYN_data_month_Nov = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-11\-")]
OB_GYN_count_Nov = OB_GYN_data_month_Nov["HH action"].count()
OB_GYN_data_month_Dec = OB_GYN_data[OB_GYN_data["Date"].str.contains("\-12\-")]  
OB_GYN_count_Dec = OB_GYN_data_month_Dec["HH action"].count()

#Pediatric data by month: 
Pediatric_data_month_Jan = Pediatric_data[Pediatric_data["Date"].str.contains("\-01\-")]
Pediatric_count_Jan = Pediatric_data_month_Jan["HH action"].count()
Pediatric_data_month_Feb = Pediatric_data[Pediatric_data["Date"].str.contains("\-02\-")]
Pediatric_count_Feb = Pediatric_data_month_Feb["HH action"].count()
Pediatric_data_month_Mar = Pediatric_data[Pediatric_data["Date"].str.contains("\-03\-")]
Pediatric_count_Mar = Pediatric_data_month_Mar["HH action"].count()
Pediatric_data_month_Apr = Pediatric_data[Pediatric_data["Date"].str.contains("\-04\-")]
Pediatric_count_Apr = Pediatric_data_month_Apr["HH action"].count()
Pediatric_data_month_May = Pediatric_data[Pediatric_data["Date"].str.contains("\-05\-")]
Pediatric_count_May = Pediatric_data_month_May["HH action"].count()
Pediatric_data_month_Jun = Pediatric_data[Pediatric_data["Date"].str.contains("\-06\-")]
Pediatric_count_Jun = Pediatric_data_month_Jun["HH action"].count()
Pediatric_data_month_Jul = Pediatric_data[Pediatric_data["Date"].str.contains("\-07\-")]
Pediatric_count_Jul = Pediatric_data_month_Jul["HH action"].count()
Pediatric_data_month_Aug = Pediatric_data[Pediatric_data["Date"].str.contains("\-08\-")]
Pediatric_count_Aug = Pediatric_data_month_Aug["HH action"].count()
Pediatric_data_month_Sep = Pediatric_data[Pediatric_data["Date"].str.contains("\-09\-")]
Pediatric_count_Sep = Pediatric_data_month_Sep["HH action"].count()
Pediatric_data_month_Oct = Pediatric_data[Pediatric_data["Date"].str.contains("\-10\-")]
Pediatric_count_Oct = Pediatric_data_month_Oct["HH action"].count()
Pediatric_data_month_Nov = Pediatric_data[Pediatric_data["Date"].str.contains("\-11\-")]
Pediatric_count_Nov = Pediatric_data_month_Nov["HH action"].count()
Pediatric_data_month_Dec = Pediatric_data[Pediatric_data["Date"].str.contains("\-12\-")] 
Pediatric_count_Dec = Pediatric_data_month_Dec["HH action"].count()
      
#Ophtalmology data by month:
Ophtalmology_data_month_Jan = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-01\-")]
Ophtalmology_count_Jan = Ophtalmology_data_month_Jan["HH action"].count()
Ophtalmology_data_month_Feb = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-02\-")]
Ophtalmology_count_Feb = Ophtalmology_data_month_Feb["HH action"].count()
Ophtalmology_data_month_Mar = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-03\-")]
Ophtalmology_count_Mar = Ophtalmology_data_month_Mar["HH action"].count()
Ophtalmology_data_month_Apr = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-04\-")]
Ophtalmology_count_Apr = Ophtalmology_data_month_Apr["HH action"].count()
Ophtalmology_data_month_May = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-05\-")]
Ophtalmology_count_May = Ophtalmology_data_month_May["HH action"].count()
Ophtalmology_data_month_Jun = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-06\-")]
Ophtalmology_count_Jun = Ophtalmology_data_month_Jun["HH action"].count()
Ophtalmology_data_month_Jul = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-07\-")]
Ophtalmology_count_Jul = Ophtalmology_data_month_Jul["HH action"].count()
Ophtalmology_data_month_Aug = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-08\-")]
Ophtalmology_count_Aug = Ophtalmology_data_month_Aug["HH action"].count()
Ophtalmology_data_month_Sep = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-09\-")]
Ophtalmology_count_Sep = Ophtalmology_data_month_Sep["HH action"].count()
Ophtalmology_data_month_Oct = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-10\-")]
Ophtalmology_count_Oct = Ophtalmology_data_month_Oct["HH action"].count()
Ophtalmology_data_month_Nov = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-11\-")]
Ophtalmology_count_Nov = Ophtalmology_data_month_Nov["HH action"].count()
Ophtalmology_data_month_Dec = Ophtalmology_data[Ophtalmology_data["Date"].str.contains("\-12\-")] 
Ophtalmology_count_Dec = Ophtalmology_data_month_Dec["HH action"].count()

#Total ward data by month: 
Total_data_month_Jan = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-01\-")]
Total_data_count_Jan = Total_data_month_Jan["HH action"].count()
Total_data_month_Feb = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-02\-")]
Total_data_count_Feb = Total_data_month_Feb["HH action"].count()
Total_data_month_Mar = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-03\-")]
Total_data_count_Mar = Total_data_month_Mar["HH action"].count()
Total_data_month_Apr = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-04\-")]
Total_data_count_Apr = Total_data_month_Apr["HH action"].count()
Total_data_month_May = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-05\-")]
Total_data_count_May = Total_data_month_May["HH action"].count()
Total_data_month_Jun = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-06\-")]
Total_data_count_Jun = Total_data_month_Jun["HH action"].count()
Total_data_month_Jul = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-07\-")]
Total_data_count_Jul = Total_data_month_Jul["HH action"].count()
Total_data_month_Aug = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-08\-")]
Total_data_count_Aug = Total_data_month_Aug["HH action"].count()
Total_data_month_Sep = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-09\-")]
Total_data_count_Sep = Total_data_month_Sep["HH action"].count()
Total_data_month_Oct = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-10\-")]
Total_data_count_Oct = Total_data_month_Oct["HH action"].count()
Total_data_month_Nov = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-11\-")]
Total_data_count_Nov = Total_data_month_Nov["HH action"].count()
Total_data_month_Dec = concatenated_table_3[concatenated_table_3["Date"].str.contains("\-12\-")]
Total_data_count_Dec = Total_data_month_Dec["HH action"].count()

#ER ward data by month and by moment (1) #####

ER_data_month_Jan_BTP = ER_data_month_Jan[ER_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Jan_BTP_count = ER_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jan_BTP_count["Percentage"] = ER_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Feb_BTP = ER_data_month_Feb[ER_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Feb_BTP_count = ER_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Feb_BTP_count["Percentage"] = ER_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ER_data_month_Mar_BTP = ER_data_month_Mar[ER_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Mar_BTP_count = ER_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Mar_BTP_count["Percentage"] = ER_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Apr_BTP = ER_data_month_Apr[ER_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Apr_BTP_count = ER_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Apr_BTP_count["Percentage"] = ER_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_May_BTP = ER_data_month_May[ER_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_May_BTP_count = ER_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_May_BTP_count["Percentage"] = ER_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Jun_BTP = ER_data_month_Jun[ER_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Jun_BTP_count = ER_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jun_BTP_count["Percentage"] = ER_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Jul_BTP = ER_data_month_Jul[ER_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Jul_BTP_count = ER_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jul_BTP_count["Percentage"] = ER_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Aug_BTP = ER_data_month_Aug[ER_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Aug_BTP_count = ER_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Aug_BTP_count["Percentage"] = ER_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Sep_BTP = ER_data_month_Sep[ER_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Sep_BTP_count = ER_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Sep_BTP_count["Percentage"] = ER_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Oct_BTP = ER_data_month_Oct[ER_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Oct_BTP_count = ER_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Oct_BTP_count["Percentage"] = ER_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Nov_BTP = ER_data_month_Nov[ER_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Nov_BTP_count = ER_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Nov_BTP_count["Percentage"] = ER_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Dec_BTP = ER_data_month_Dec[ER_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
ER_data_month_Dec_BTP_count = ER_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Dec_BTP_count["Percentage"] = ER_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ER ward data by month and by moment (2) ######

ER_data_month_Jan_BAT = ER_data_month_Jan[ER_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Jan_BAT_count = ER_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jan_BAT_count["Percentage"] = ER_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Feb_BAT = ER_data_month_Feb[ER_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Feb_BAT_count = ER_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Feb_BAT_count["Percentage"] = ER_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Mar_BAT = ER_data_month_Mar[ER_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Mar_BAT_count = ER_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Mar_BAT_count["Percentage"] = ER_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Apr_BAT = ER_data_month_Apr[ER_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Apr_BAT_count = ER_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Apr_BAT_count["Percentage"] = ER_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_May_BAT = ER_data_month_May[ER_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_May_BAT_count = ER_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_May_BAT_count["Percentage"] = ER_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Jun_BAT = ER_data_month_Jun[ER_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Jun_BAT_count = ER_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jun_BAT_count["Percentage"] = ER_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Jul_BAT = ER_data_month_Jul[ER_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Jul_BAT_count = ER_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jul_BAT_count["Percentage"] = ER_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Aug_BAT = ER_data_month_Aug[ER_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Aug_BAT_count = ER_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Aug_BAT_count["Percentage"] = ER_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Sep_BAT = ER_data_month_Sep[ER_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Sep_BAT_count = ER_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Sep_BAT_count["Percentage"] = ER_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Oct_BAT = ER_data_month_Oct[ER_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Oct_BAT_count = ER_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Oct_BAT_count["Percentage"] = ER_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Nov_BAT = ER_data_month_Nov[ER_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Nov_BAT_count = ER_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Nov_BAT_count["Percentage"] = ER_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Dec_BAT = ER_data_month_Dec[ER_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
ER_data_month_Dec_BAT_count = ER_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Dec_BAT_count["Percentage"] = ER_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ER ward data by month and by moment (3) #####

ER_data_month_Jan_ATP = ER_data_month_Jan[ER_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Jan_ATP_count = ER_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jan_ATP_count["Percentage"] = ER_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Feb_ATP = ER_data_month_Feb[ER_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Feb_ATP_count = ER_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Feb_ATP_count["Percentage"] = ER_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ER_data_month_Mar_ATP = ER_data_month_Mar[ER_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Mar_ATP_count = ER_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Mar_ATP_count["Percentage"] = ER_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Apr_ATP = ER_data_month_Apr[ER_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Apr_ATP_count = ER_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Apr_ATP_count["Percentage"] = ER_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_May_ATP = ER_data_month_May[ER_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_May_ATP_count = ER_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_May_ATP_count["Percentage"] = ER_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Jun_ATP = ER_data_month_Jun[ER_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Jun_ATP_count = ER_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jun_ATP_count["Percentage"] = ER_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Jul_ATP = ER_data_month_Jul[ER_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Jul_ATP_count = ER_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jul_ATP_count["Percentage"] = ER_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ER_data_month_Aug_ATP = ER_data_month_Aug[ER_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Aug_ATP_count = ER_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Aug_ATP_count["Percentage"] = ER_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Sep_ATP = ER_data_month_Sep[ER_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Sep_ATP_count = ER_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Sep_ATP_count["Percentage"] = ER_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Oct_ATP = ER_data_month_Oct[ER_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Oct_ATP_count = ER_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Oct_ATP_count["Percentage"] = ER_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Nov_ATP = ER_data_month_Nov[ER_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Nov_ATP_count = ER_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Nov_ATP_count["Percentage"] = ER_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Dec_ATP = ER_data_month_Dec[ER_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
ER_data_month_Dec_ATP_count = ER_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Dec_ATP_count["Percentage"] = ER_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ER ward by month and by moment (4) ######

ER_data_month_Jan_ATBF = ER_data_month_Jan[ER_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Jan_ATBF_count = ER_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jan_ATBF_count["Percentage"] = ER_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Feb_ATBF = ER_data_month_Feb[ER_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Feb_ATBF_count = ER_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Feb_ATBF_count["Percentage"] = ER_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Mar_ATBF = ER_data_month_Mar[ER_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Mar_ATBF_count = ER_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Mar_ATBF_count["Percentage"] = ER_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Apr_ATBF = ER_data_month_Apr[ER_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Apr_ATBF_count = ER_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Apr_ATBF_count["Percentage"] = ER_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_May_ATBF = ER_data_month_May[ER_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_May_ATBF_count = ER_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_May_ATBF_count["Percentage"] = ER_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Jun_ATBF = ER_data_month_Jun[ER_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Jun_ATBF_count = ER_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jun_ATBF_count["Percentage"] = ER_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Jul_ATBF = ER_data_month_Jul[ER_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Jul_ATBF_count = ER_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jul_ATBF_count["Percentage"] = ER_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Aug_ATBF = ER_data_month_Aug[ER_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Aug_ATBF_count = ER_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Aug_ATBF_count["Percentage"] = ER_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Sep_ATBF = ER_data_month_Sep[ER_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Sep_ATBF_count = ER_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Sep_ATBF_count["Percentage"] = ER_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Oct_ATBF = ER_data_month_Oct[ER_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Oct_ATBF_count = ER_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Oct_ATBF_count["Percentage"] = ER_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Nov_ATBF = ER_data_month_Nov[ER_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Nov_ATBF_count = ER_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Nov_ATBF_count["Percentage"] = ER_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Dec_ATBF = ER_data_month_Dec[ER_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
ER_data_month_Dec_ATBF_count = ER_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Dec_ATBF_count["Percentage"] = ER_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ER ward by month and by moment (5) #####

ER_data_month_Jan_ATPS = ER_data_month_Jan[ER_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Jan_ATPS_count = ER_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jan_ATPS_count["Percentage"] = ER_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Feb_ATPS = ER_data_month_Feb[ER_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Feb_ATPS_count = ER_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Feb_ATPS_count["Percentage"] = ER_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Mar_ATPS = ER_data_month_Mar[ER_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Mar_ATPS_count = ER_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Mar_ATPS_count["Percentage"] = ER_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Apr_ATPS = ER_data_month_Apr[ER_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Apr_ATPS_count = ER_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Apr_ATPS_count["Percentage"] = ER_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_May_ATPS = ER_data_month_May[ER_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_May_ATPS_count = ER_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_May_ATPS_count["Percentage"] = ER_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Jun_ATPS = ER_data_month_Jun[ER_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Jun_ATPS_count = ER_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jun_ATPS_count["Percentage"] = ER_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Jul_ATPS = ER_data_month_Jul[ER_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Jul_ATPS_count = ER_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Jul_ATPS_count["Percentage"] = ER_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Aug_ATPS = ER_data_month_Aug[ER_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Aug_ATPS_count = ER_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Aug_ATPS_count["Percentage"] = ER_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Sep_ATPS = ER_data_month_Sep[ER_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Sep_ATPS_count = ER_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Sep_ATPS_count["Percentage"] = ER_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Oct_ATPS = ER_data_month_Oct[ER_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Oct_ATPS_count = ER_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Oct_ATPS_count["Percentage"] = ER_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Nov_ATPS = ER_data_month_Nov[ER_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Nov_ATPS_count = ER_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Nov_ATPS_count["Percentage"] = ER_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ER_data_month_Dec_ATPS = ER_data_month_Dec[ER_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ER_data_month_Dec_ATPS_count = ER_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ER_data_month_Dec_ATPS_count["Percentage"] = ER_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ICU_med ward data by month and by moment (1) #####

ICU_med_data_month_Jan_BTP = ICU_med_data_month_Jan[ICU_med_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Jan_BTP_count = ICU_med_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jan_BTP_count["Percentage"] = ICU_med_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Feb_BTP = ICU_med_data_month_Feb[ICU_med_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Feb_BTP_count = ICU_med_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Feb_BTP_count["Percentage"] = ICU_med_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ICU_med_data_month_Mar_BTP = ICU_med_data_month_Mar[ICU_med_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Mar_BTP_count = ICU_med_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Mar_BTP_count["Percentage"] = ICU_med_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Apr_BTP = ICU_med_data_month_Apr[ICU_med_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Apr_BTP_count = ICU_med_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Apr_BTP_count["Percentage"] = ICU_med_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_May_BTP = ICU_med_data_month_May[ICU_med_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_May_BTP_count = ICU_med_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_May_BTP_count["Percentage"] = ICU_med_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Jun_BTP = ICU_med_data_month_Jun[ICU_med_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Jun_BTP_count = ICU_med_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jun_BTP_count["Percentage"] = ICU_med_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Jul_BTP = ICU_med_data_month_Jul[ICU_med_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Jul_BTP_count = ICU_med_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jul_BTP_count["Percentage"] = ICU_med_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Aug_BTP = ICU_med_data_month_Aug[ICU_med_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Aug_BTP_count = ICU_med_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Aug_BTP_count["Percentage"] = ICU_med_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Sep_BTP = ICU_med_data_month_Sep[ICU_med_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Sep_BTP_count = ICU_med_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Sep_BTP_count["Percentage"] = ICU_med_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Oct_BTP = ICU_med_data_month_Oct[ICU_med_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Oct_BTP_count = ICU_med_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Oct_BTP_count["Percentage"] = ICU_med_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Nov_BTP = ICU_med_data_month_Nov[ICU_med_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Nov_BTP_count = ICU_med_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Nov_BTP_count["Percentage"] = ICU_med_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Dec_BTP = ICU_med_data_month_Dec[ICU_med_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_med_data_month_Dec_BTP_count = ICU_med_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Dec_BTP_count["Percentage"] = ICU_med_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ICU_med ward data by month and by moment (2) #####

ICU_med_data_month_Jan_BAT = ICU_med_data_month_Jan[ICU_med_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Jan_BAT_count = ICU_med_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jan_BAT_count["Percentage"] = ICU_med_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Feb_BAT = ICU_med_data_month_Feb[ICU_med_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Feb_BAT_count = ICU_med_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Feb_BAT_count["Percentage"] = ICU_med_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Mar_BAT = ICU_med_data_month_Mar[ICU_med_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Mar_BAT_count = ICU_med_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Mar_BAT_count["Percentage"] = ICU_med_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Apr_BAT = ICU_med_data_month_Apr[ICU_med_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Apr_BAT_count = ICU_med_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Apr_BAT_count["Percentage"] = ICU_med_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_May_BAT = ICU_med_data_month_May[ICU_med_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_May_BAT_count = ICU_med_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_May_BAT_count["Percentage"] = ICU_med_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Jun_BAT = ICU_med_data_month_Jun[ICU_med_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Jun_BAT_count = ICU_med_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jun_BAT_count["Percentage"] = ICU_med_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Jul_BAT = ICU_med_data_month_Jul[ICU_med_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Jul_BAT_count = ICU_med_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jul_BAT_count["Percentage"] = ICU_med_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Aug_BAT = ICU_med_data_month_Aug[ICU_med_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Aug_BAT_count = ICU_med_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Aug_BAT_count["Percentage"] = ICU_med_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Sep_BAT = ICU_med_data_month_Sep[ICU_med_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Sep_BAT_count = ICU_med_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Sep_BAT_count["Percentage"] = ICU_med_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Oct_BAT = ICU_med_data_month_Oct[ICU_med_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Oct_BAT_count = ICU_med_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Oct_BAT_count["Percentage"] = ICU_med_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Nov_BAT = ICU_med_data_month_Nov[ICU_med_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Nov_BAT_count = ICU_med_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Nov_BAT_count["Percentage"] = ICU_med_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Dec_BAT = ICU_med_data_month_Dec[ICU_med_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_med_data_month_Dec_BAT_count = ICU_med_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Dec_BAT_count["Percentage"] = ICU_med_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ICU-med ward data by month and by moment (3) #####

ICU_med_data_month_Jan_ATP = ICU_med_data_month_Jan[ICU_med_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Jan_ATP_count = ICU_med_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jan_ATP_count["Percentage"] = ICU_med_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Feb_ATP = ICU_med_data_month_Feb[ICU_med_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Feb_ATP_count = ICU_med_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Feb_ATP_count["Percentage"] = ICU_med_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ICU_med_data_month_Mar_ATP = ICU_med_data_month_Mar[ICU_med_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Mar_ATP_count = ICU_med_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Mar_ATP_count["Percentage"] = ICU_med_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Apr_ATP = ICU_med_data_month_Apr[ICU_med_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Apr_ATP_count = ICU_med_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Apr_ATP_count["Percentage"] = ICU_med_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_May_ATP = ICU_med_data_month_May[ICU_med_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_May_ATP_count = ICU_med_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_May_ATP_count["Percentage"] = ICU_med_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Jun_ATP = ICU_med_data_month_Jun[ICU_med_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Jun_ATP_count = ICU_med_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jun_ATP_count["Percentage"] = ICU_med_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Jul_ATP = ICU_med_data_month_Jul[ICU_med_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Jul_ATP_count = ICU_med_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jul_ATP_count["Percentage"] = ICU_med_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ICU_med_data_month_Aug_ATP = ICU_med_data_month_Aug[ICU_med_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Aug_ATP_count = ICU_med_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Aug_ATP_count["Percentage"] = ICU_med_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Sep_ATP = ICU_med_data_month_Sep[ICU_med_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Sep_ATP_count = ICU_med_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Sep_ATP_count["Percentage"] = ICU_med_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Oct_ATP = ICU_med_data_month_Oct[ICU_med_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Oct_ATP_count = ICU_med_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Oct_ATP_count["Percentage"] = ICU_med_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Nov_ATP = ICU_med_data_month_Nov[ICU_med_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Nov_ATP_count = ICU_med_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Nov_ATP_count["Percentage"] = ICU_med_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Dec_ATP = ICU_med_data_month_Dec[ICU_med_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
ICU_med_data_month_Dec_ATP_count = ICU_med_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Dec_ATP_count["Percentage"] = ICU_med_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ICU-med ward data by month and by moment (4) #####

ICU_med_data_month_Jan_ATBF = ICU_med_data_month_Jan[ICU_med_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Jan_ATBF_count = ICU_med_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jan_ATBF_count["Percentage"] = ICU_med_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Feb_ATBF = ICU_med_data_month_Feb[ICU_med_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Feb_ATBF_count = ICU_med_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Feb_ATBF_count["Percentage"] = ICU_med_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Mar_ATBF = ICU_med_data_month_Mar[ICU_med_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Mar_ATBF_count = ICU_med_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Mar_ATBF_count["Percentage"] = ICU_med_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Apr_ATBF = ICU_med_data_month_Apr[ICU_med_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Apr_ATBF_count = ICU_med_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Apr_ATBF_count["Percentage"] = ICU_med_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_May_ATBF = ICU_med_data_month_May[ICU_med_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_May_ATBF_count = ICU_med_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_May_ATBF_count["Percentage"] = ICU_med_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Jun_ATBF = ICU_med_data_month_Jun[ICU_med_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Jun_ATBF_count = ICU_med_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jun_ATBF_count["Percentage"] = ICU_med_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Jul_ATBF = ICU_med_data_month_Jul[ICU_med_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Jul_ATBF_count = ICU_med_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jul_ATBF_count["Percentage"] = ICU_med_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Aug_ATBF = ICU_med_data_month_Aug[ICU_med_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Aug_ATBF_count = ICU_med_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Aug_ATBF_count["Percentage"] = ICU_med_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Sep_ATBF = ICU_med_data_month_Sep[ICU_med_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Sep_ATBF_count = ICU_med_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Sep_ATBF_count["Percentage"] = ICU_med_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Oct_ATBF = ICU_med_data_month_Oct[ICU_med_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Oct_ATBF_count = ICU_med_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Oct_ATBF_count["Percentage"] = ICU_med_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Nov_ATBF = ICU_med_data_month_Nov[ICU_med_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Nov_ATBF_count = ICU_med_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Nov_ATBF_count["Percentage"] = ICU_med_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Dec_ATBF = ICU_med_data_month_Dec[ICU_med_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_med_data_month_Dec_ATBF_count = ICU_med_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Dec_ATBF_count["Percentage"] = ICU_med_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ICU-med ward data by month and by moment (5) #####

ICU_med_data_month_Jan_ATPS = ICU_med_data_month_Jan[ICU_med_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Jan_ATPS_count = ICU_med_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jan_ATPS_count["Percentage"] = ICU_med_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Feb_ATPS = ICU_med_data_month_Feb[ICU_med_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Feb_ATPS_count = ICU_med_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Feb_ATPS_count["Percentage"] = ICU_med_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Mar_ATPS = ICU_med_data_month_Mar[ICU_med_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Mar_ATPS_count = ICU_med_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Mar_ATPS_count["Percentage"] = ICU_med_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Apr_ATPS = ICU_med_data_month_Apr[ICU_med_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Apr_ATPS_count = ICU_med_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Apr_ATPS_count["Percentage"] = ICU_med_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_May_ATPS = ICU_med_data_month_May[ICU_med_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_May_ATPS_count = ICU_med_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_May_ATPS_count["Percentage"] = ICU_med_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Jun_ATPS = ICU_med_data_month_Jun[ICU_med_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Jun_ATPS_count = ICU_med_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jun_ATPS_count["Percentage"] = ICU_med_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Jul_ATPS = ICU_med_data_month_Jul[ICU_med_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Jul_ATPS_count = ICU_med_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Jul_ATPS_count["Percentage"] = ICU_med_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Aug_ATPS = ICU_med_data_month_Aug[ICU_med_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Aug_ATPS_count = ICU_med_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Aug_ATPS_count["Percentage"] = ICU_med_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Sep_ATPS = ICU_med_data_month_Sep[ICU_med_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Sep_ATPS_count = ICU_med_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Sep_ATPS_count["Percentage"] = ICU_med_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Oct_ATPS = ICU_med_data_month_Oct[ICU_med_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Oct_ATPS_count = ICU_med_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Oct_ATPS_count["Percentage"] = ICU_med_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Nov_ATPS = ICU_med_data_month_Nov[ICU_med_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Nov_ATPS_count = ICU_med_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Nov_ATPS_count["Percentage"] = ICU_med_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_med_data_month_Dec_ATPS = ICU_med_data_month_Dec[ICU_med_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_med_data_month_Dec_ATPS_count = ICU_med_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_med_data_month_Dec_ATPS_count["Percentage"] = ICU_med_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ICU surgery ward data by month and by moment (1) #####

ICU_sur_data_month_Jan_BTP = ICU_sur_data_month_Jan[ICU_sur_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Jan_BTP_count = ICU_sur_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jan_BTP_count["Percentage"] = ICU_sur_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Feb_BTP = ICU_sur_data_month_Feb[ICU_sur_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Feb_BTP_count = ICU_sur_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Feb_BTP_count["Percentage"] = ICU_sur_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ICU_sur_data_month_Mar_BTP = ICU_sur_data_month_Mar[ICU_sur_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Mar_BTP_count = ICU_sur_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Mar_BTP_count["Percentage"] = ICU_sur_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Apr_BTP = ICU_sur_data_month_Apr[ICU_sur_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Apr_BTP_count = ICU_sur_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Apr_BTP_count["Percentage"] = ICU_sur_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_May_BTP = ICU_sur_data_month_May[ICU_sur_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_May_BTP_count = ICU_sur_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_May_BTP_count["Percentage"] = ICU_sur_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Jun_BTP = ICU_sur_data_month_Jun[ICU_sur_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Jun_BTP_count = ICU_sur_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jun_BTP_count["Percentage"] = ICU_sur_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Jul_BTP = ICU_sur_data_month_Jul[ICU_sur_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Jul_BTP_count = ICU_sur_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jul_BTP_count["Percentage"] = ICU_sur_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Aug_BTP = ICU_sur_data_month_Aug[ICU_sur_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Aug_BTP_count = ICU_sur_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Aug_BTP_count["Percentage"] = ICU_sur_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Sep_BTP = ICU_sur_data_month_Sep[ICU_sur_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Sep_BTP_count = ICU_sur_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Sep_BTP_count["Percentage"] = ICU_sur_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Oct_BTP = ICU_sur_data_month_Oct[ICU_sur_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Oct_BTP_count = ICU_sur_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Oct_BTP_count["Percentage"] = ICU_sur_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Nov_BTP = ICU_sur_data_month_Nov[ICU_sur_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Nov_BTP_count = ICU_sur_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Nov_BTP_count["Percentage"] = ICU_sur_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Dec_BTP = ICU_sur_data_month_Dec[ICU_sur_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
ICU_sur_data_month_Dec_BTP_count = ICU_sur_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Dec_BTP_count["Percentage"] = ICU_sur_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ICU surgery ward data by month and by moment (2) #####

ICU_sur_data_month_Jan_BAT = ICU_sur_data_month_Jan[ICU_sur_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Jan_BAT_count = ICU_sur_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jan_BAT_count["Percentage"] = ICU_sur_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Feb_BAT = ICU_sur_data_month_Feb[ICU_sur_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Feb_BAT_count = ICU_sur_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Feb_BAT_count["Percentage"] = ICU_sur_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Mar_BAT = ICU_sur_data_month_Mar[ICU_sur_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Mar_BAT_count = ICU_sur_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Mar_BAT_count["Percentage"] = ICU_sur_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Apr_BAT = ICU_sur_data_month_Apr[ICU_sur_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Apr_BAT_count = ICU_sur_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Apr_BAT_count["Percentage"] = ICU_sur_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_May_BAT = ICU_sur_data_month_May[ICU_sur_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_May_BAT_count = ICU_sur_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_May_BAT_count["Percentage"] = ICU_sur_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Jun_BAT = ICU_sur_data_month_Jun[ICU_sur_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Jun_BAT_count = ICU_sur_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jun_BAT_count["Percentage"] = ICU_sur_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Jul_BAT = ICU_sur_data_month_Jul[ICU_sur_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Jul_BAT_count = ICU_sur_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jul_BAT_count["Percentage"] = ICU_sur_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Aug_BAT = ICU_sur_data_month_Aug[ICU_sur_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Aug_BAT_count = ICU_sur_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Aug_BAT_count["Percentage"] = ICU_sur_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Sep_BAT = ICU_sur_data_month_Sep[ICU_sur_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Sep_BAT_count = ICU_sur_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Sep_BAT_count["Percentage"] = ICU_sur_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Oct_BAT = ICU_sur_data_month_Oct[ICU_sur_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Oct_BAT_count = ICU_sur_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Oct_BAT_count["Percentage"] = ICU_sur_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Nov_BAT = ICU_sur_data_month_Nov[ICU_sur_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Nov_BAT_count = ICU_sur_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Nov_BAT_count["Percentage"] = ICU_sur_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Dec_BAT = ICU_sur_data_month_Dec[ICU_sur_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
ICU_sur_data_month_Dec_BAT_count = ICU_sur_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Dec_BAT_count["Percentage"] = ICU_sur_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ICU surgery ward data by month and by moment (3) #####

ICU_sur_data_month_Jan_ATP = ICU_sur_data_month_Jan[ICU_sur_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Jan_ATP_count = ICU_sur_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jan_ATP_count["Percentage"] = ICU_sur_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Feb_ATP = ICU_sur_data_month_Feb[ICU_sur_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Feb_ATP_count = ICU_sur_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Feb_ATP_count["Percentage"] = ICU_sur_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ICU_sur_data_month_Mar_ATP = ICU_sur_data_month_Mar[ICU_sur_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Mar_ATP_count = ICU_sur_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Mar_ATP_count["Percentage"] = ICU_sur_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Apr_ATP = ICU_sur_data_month_Apr[ICU_sur_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Apr_ATP_count = ICU_sur_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Apr_ATP_count["Percentage"] = ICU_sur_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_May_ATP = ICU_sur_data_month_May[ICU_sur_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_May_ATP_count = ICU_sur_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_May_ATP_count["Percentage"] = ICU_sur_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Jun_ATP = ICU_sur_data_month_Jun[ICU_sur_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Jun_ATP_count = ICU_sur_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jun_ATP_count["Percentage"] = ICU_sur_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Jul_ATP = ICU_sur_data_month_Jul[ICU_sur_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Jul_ATP_count = ICU_sur_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jul_ATP_count["Percentage"] = ICU_sur_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ICU_sur_data_month_Aug_ATP = ICU_sur_data_month_Aug[ICU_sur_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Aug_ATP_count = ICU_sur_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Aug_ATP_count["Percentage"] = ICU_sur_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Sep_ATP = ICU_sur_data_month_Sep[ICU_sur_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Sep_ATP_count = ICU_sur_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Sep_ATP_count["Percentage"] = ICU_sur_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Oct_ATP = ICU_sur_data_month_Oct[ICU_sur_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Oct_ATP_count = ICU_sur_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Oct_ATP_count["Percentage"] = ICU_sur_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Nov_ATP = ICU_sur_data_month_Nov[ICU_sur_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Nov_ATP_count = ICU_sur_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Nov_ATP_count["Percentage"] = ICU_sur_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Dec_ATP = ICU_sur_data_month_Dec[ICU_sur_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
ICU_sur_data_month_Dec_ATP_count = ICU_sur_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Dec_ATP_count["Percentage"] = ICU_sur_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ICU surgery ward data by month and by moment (4) #####

ICU_sur_data_month_Jan_ATBF = ICU_sur_data_month_Jan[ICU_sur_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Jan_ATBF_count = ICU_sur_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jan_ATBF_count["Percentage"] = ICU_sur_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Feb_ATBF = ICU_sur_data_month_Feb[ICU_sur_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Feb_ATBF_count = ICU_sur_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Feb_ATBF_count["Percentage"] = ICU_sur_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Mar_ATBF = ICU_sur_data_month_Mar[ICU_sur_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Mar_ATBF_count = ICU_sur_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Mar_ATBF_count["Percentage"] = ICU_sur_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Apr_ATBF = ICU_sur_data_month_Apr[ICU_sur_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Apr_ATBF_count = ICU_sur_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Apr_ATBF_count["Percentage"] = ICU_sur_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_May_ATBF = ICU_sur_data_month_May[ICU_sur_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_May_ATBF_count = ICU_sur_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_May_ATBF_count["Percentage"] = ICU_sur_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Jun_ATBF = ICU_sur_data_month_Jun[ICU_sur_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Jun_ATBF_count = ICU_sur_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jun_ATBF_count["Percentage"] = ICU_sur_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Jul_ATBF = ICU_sur_data_month_Jul[ICU_sur_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Jul_ATBF_count = ICU_sur_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jul_ATBF_count["Percentage"] = ICU_sur_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Aug_ATBF = ICU_sur_data_month_Aug[ICU_sur_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Aug_ATBF_count = ICU_sur_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Aug_ATBF_count["Percentage"] = ICU_sur_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Sep_ATBF = ICU_sur_data_month_Sep[ICU_sur_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Sep_ATBF_count = ICU_sur_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Sep_ATBF_count["Percentage"] = ICU_sur_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Oct_ATBF = ICU_sur_data_month_Oct[ICU_sur_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Oct_ATBF_count = ICU_sur_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Oct_ATBF_count["Percentage"] = ICU_sur_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Nov_ATBF = ICU_sur_data_month_Nov[ICU_sur_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Nov_ATBF_count = ICU_sur_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Nov_ATBF_count["Percentage"] = ICU_sur_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Dec_ATBF = ICU_sur_data_month_Dec[ICU_sur_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
ICU_sur_data_month_Dec_ATBF_count = ICU_sur_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Dec_ATBF_count["Percentage"] = ICU_sur_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ICU surgery ward data by month and by moment (5) #####

ICU_sur_data_month_Jan_ATPS = ICU_sur_data_month_Jan[ICU_sur_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Jan_ATPS_count = ICU_sur_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jan_ATPS_count["Percentage"] = ICU_sur_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Feb_ATPS = ICU_sur_data_month_Feb[ICU_sur_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Feb_ATPS_count = ICU_sur_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Feb_ATPS_count["Percentage"] = ICU_sur_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Mar_ATPS = ICU_sur_data_month_Mar[ICU_sur_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Mar_ATPS_count = ICU_sur_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Mar_ATPS_count["Percentage"] = ICU_sur_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Apr_ATPS = ICU_sur_data_month_Apr[ICU_sur_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Apr_ATPS_count = ICU_sur_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Apr_ATPS_count["Percentage"] = ICU_sur_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_May_ATPS = ICU_sur_data_month_May[ICU_sur_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_May_ATPS_count = ICU_sur_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_May_ATPS_count["Percentage"] = ICU_sur_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Jun_ATPS = ICU_sur_data_month_Jun[ICU_sur_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Jun_ATPS_count = ICU_sur_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jun_ATPS_count["Percentage"] = ICU_sur_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Jul_ATPS = ICU_sur_data_month_Jul[ICU_sur_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Jul_ATPS_count = ICU_sur_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Jul_ATPS_count["Percentage"] = ICU_sur_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Aug_ATPS = ICU_sur_data_month_Aug[ICU_sur_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Aug_ATPS_count = ICU_sur_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Aug_ATPS_count["Percentage"] = ICU_sur_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Sep_ATPS = ICU_sur_data_month_Sep[ICU_sur_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Sep_ATPS_count = ICU_sur_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Sep_ATPS_count["Percentage"] = ICU_sur_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Oct_ATPS = ICU_sur_data_month_Oct[ICU_sur_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Oct_ATPS_count = ICU_sur_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Oct_ATPS_count["Percentage"] = ICU_sur_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Nov_ATPS = ICU_sur_data_month_Nov[ICU_sur_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Nov_ATPS_count = ICU_sur_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Nov_ATPS_count["Percentage"] = ICU_sur_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ICU_sur_data_month_Dec_ATPS = ICU_sur_data_month_Dec[ICU_sur_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ICU_sur_data_month_Dec_ATPS_count = ICU_sur_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ICU_sur_data_month_Dec_ATPS_count["Percentage"] = ICU_sur_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Med_A ward data by month and by moment (1) #####

Med_A_data_month_Jan_BTP = Med_A_data_month_Jan[Med_A_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Jan_BTP_count = Med_A_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jan_BTP_count["Percentage"] = Med_A_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Feb_BTP = Med_A_data_month_Feb[Med_A_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Feb_BTP_count = Med_A_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Feb_BTP_count["Percentage"] = Med_A_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Med_A_data_month_Mar_BTP = Med_A_data_month_Mar[Med_A_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Mar_BTP_count = Med_A_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Mar_BTP_count["Percentage"] = Med_A_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Apr_BTP = Med_A_data_month_Apr[Med_A_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Apr_BTP_count = Med_A_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Apr_BTP_count["Percentage"] = Med_A_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_May_BTP = Med_A_data_month_May[Med_A_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_May_BTP_count = Med_A_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_May_BTP_count["Percentage"] = Med_A_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Jun_BTP = Med_A_data_month_Jun[Med_A_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Jun_BTP_count = Med_A_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jun_BTP_count["Percentage"] = Med_A_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Jul_BTP = Med_A_data_month_Jul[Med_A_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Jul_BTP_count = Med_A_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jul_BTP_count["Percentage"] = Med_A_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Aug_BTP = Med_A_data_month_Aug[Med_A_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Aug_BTP_count = Med_A_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Aug_BTP_count["Percentage"] = Med_A_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Sep_BTP = Med_A_data_month_Sep[Med_A_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Sep_BTP_count = Med_A_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Sep_BTP_count["Percentage"] = Med_A_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Oct_BTP = Med_A_data_month_Oct[Med_A_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Oct_BTP_count = Med_A_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Oct_BTP_count["Percentage"] = Med_A_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Nov_BTP = Med_A_data_month_Nov[Med_A_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Nov_BTP_count = Med_A_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Nov_BTP_count["Percentage"] = Med_A_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Dec_BTP = Med_A_data_month_Dec[Med_A_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
Med_A_data_month_Dec_BTP_count = Med_A_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Dec_BTP_count["Percentage"] = Med_A_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Med A ward data by month and by moment (2) ######

Med_A_data_month_Jan_BAT = Med_A_data_month_Jan[Med_A_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Jan_BAT_count = Med_A_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jan_BAT_count["Percentage"] = Med_A_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Feb_BAT = Med_A_data_month_Feb[Med_A_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Feb_BAT_count = Med_A_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Feb_BAT_count["Percentage"] = Med_A_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Mar_BAT = Med_A_data_month_Mar[Med_A_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Mar_BAT_count = Med_A_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Mar_BAT_count["Percentage"] = Med_A_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Apr_BAT = Med_A_data_month_Apr[Med_A_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Apr_BAT_count = Med_A_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Apr_BAT_count["Percentage"] = Med_A_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_May_BAT = Med_A_data_month_May[Med_A_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_May_BAT_count = Med_A_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_May_BAT_count["Percentage"] = Med_A_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Jun_BAT = Med_A_data_month_Jun[Med_A_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Jun_BAT_count = Med_A_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jun_BAT_count["Percentage"] = Med_A_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Jul_BAT = Med_A_data_month_Jul[Med_A_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Jul_BAT_count = Med_A_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jul_BAT_count["Percentage"] = Med_A_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Aug_BAT = Med_A_data_month_Aug[Med_A_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Aug_BAT_count = Med_A_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Aug_BAT_count["Percentage"] = Med_A_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Sep_BAT = Med_A_data_month_Sep[Med_A_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Sep_BAT_count = Med_A_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Sep_BAT_count["Percentage"] = Med_A_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Oct_BAT = Med_A_data_month_Oct[Med_A_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Oct_BAT_count = Med_A_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Oct_BAT_count["Percentage"] = Med_A_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Nov_BAT = Med_A_data_month_Nov[Med_A_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Nov_BAT_count = Med_A_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Nov_BAT_count["Percentage"] = Med_A_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Dec_BAT = Med_A_data_month_Dec[Med_A_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_A_data_month_Dec_BAT_count = Med_A_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Dec_BAT_count["Percentage"] = Med_A_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Med A ward data by month and by moment (3) #####

Med_A_data_month_Jan_ATP = Med_A_data_month_Jan[Med_A_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Jan_ATP_count = Med_A_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jan_ATP_count["Percentage"] = Med_A_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Feb_ATP = Med_A_data_month_Feb[Med_A_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Feb_ATP_count = Med_A_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Feb_ATP_count["Percentage"] = Med_A_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Med_A_data_month_Mar_ATP = Med_A_data_month_Mar[Med_A_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Mar_ATP_count = Med_A_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Mar_ATP_count["Percentage"] = Med_A_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Apr_ATP = Med_A_data_month_Apr[Med_A_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Apr_ATP_count = Med_A_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Apr_ATP_count["Percentage"] = Med_A_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_May_ATP = Med_A_data_month_May[Med_A_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_May_ATP_count = Med_A_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_May_ATP_count["Percentage"] = Med_A_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Jun_ATP = Med_A_data_month_Jun[Med_A_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Jun_ATP_count = Med_A_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jun_ATP_count["Percentage"] = Med_A_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Jul_ATP = Med_A_data_month_Jul[Med_A_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Jul_ATP_count = Med_A_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jul_ATP_count["Percentage"] = Med_A_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Med_A_data_month_Aug_ATP = Med_A_data_month_Aug[Med_A_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Aug_ATP_count = Med_A_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Aug_ATP_count["Percentage"] = Med_A_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Sep_ATP = Med_A_data_month_Sep[Med_A_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Sep_ATP_count = Med_A_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Sep_ATP_count["Percentage"] = Med_A_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Oct_ATP = Med_A_data_month_Oct[Med_A_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Oct_ATP_count = Med_A_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Oct_ATP_count["Percentage"] = Med_A_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Nov_ATP = Med_A_data_month_Nov[Med_A_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Nov_ATP_count = Med_A_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Nov_ATP_count["Percentage"] = Med_A_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Dec_ATP = Med_A_data_month_Dec[Med_A_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
Med_A_data_month_Dec_ATP_count = Med_A_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Dec_ATP_count["Percentage"] = Med_A_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Med A ward by month and by moment (4) ######

Med_A_data_month_Jan_ATBF = Med_A_data_month_Jan[Med_A_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Jan_ATBF_count = Med_A_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jan_ATBF_count["Percentage"] = Med_A_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Feb_ATBF = Med_A_data_month_Feb[Med_A_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Feb_ATBF_count = Med_A_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Feb_ATBF_count["Percentage"] = Med_A_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Mar_ATBF = Med_A_data_month_Mar[Med_A_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Mar_ATBF_count = Med_A_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Mar_ATBF_count["Percentage"] = Med_A_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Apr_ATBF = Med_A_data_month_Apr[Med_A_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Apr_ATBF_count = Med_A_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Apr_ATBF_count["Percentage"] = Med_A_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_May_ATBF = Med_A_data_month_May[Med_A_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_May_ATBF_count = Med_A_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_May_ATBF_count["Percentage"] = Med_A_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Jun_ATBF = Med_A_data_month_Jun[Med_A_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Jun_ATBF_count = Med_A_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jun_ATBF_count["Percentage"] = Med_A_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Jul_ATBF = Med_A_data_month_Jul[Med_A_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Jul_ATBF_count = Med_A_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jul_ATBF_count["Percentage"] = Med_A_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Aug_ATBF = Med_A_data_month_Aug[Med_A_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Aug_ATBF_count = Med_A_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Aug_ATBF_count["Percentage"] = Med_A_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Sep_ATBF = Med_A_data_month_Sep[Med_A_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Sep_ATBF_count = Med_A_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Sep_ATBF_count["Percentage"] = Med_A_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Oct_ATBF = Med_A_data_month_Oct[Med_A_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Oct_ATBF_count = Med_A_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Oct_ATBF_count["Percentage"] = Med_A_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Nov_ATBF = Med_A_data_month_Nov[Med_A_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Nov_ATBF_count = Med_A_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Nov_ATBF_count["Percentage"] = Med_A_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Dec_ATBF = Med_A_data_month_Dec[Med_A_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_A_data_month_Dec_ATBF_count = Med_A_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Dec_ATBF_count["Percentage"] = Med_A_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Med A ward by month and by moment (5) #####

Med_A_data_month_Jan_ATPS = Med_A_data_month_Jan[Med_A_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Jan_ATPS_count = Med_A_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jan_ATPS_count["Percentage"] = Med_A_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Feb_ATPS = Med_A_data_month_Feb[Med_A_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Feb_ATPS_count = Med_A_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Feb_ATPS_count["Percentage"] = Med_A_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Mar_ATPS = Med_A_data_month_Mar[Med_A_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Mar_ATPS_count = Med_A_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Mar_ATPS_count["Percentage"] = Med_A_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Apr_ATPS = Med_A_data_month_Apr[Med_A_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Apr_ATPS_count = Med_A_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Apr_ATPS_count["Percentage"] = Med_A_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_May_ATPS = Med_A_data_month_May[Med_A_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_May_ATPS_count = Med_A_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_May_ATPS_count["Percentage"] = Med_A_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Jun_ATPS = Med_A_data_month_Jun[Med_A_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Jun_ATPS_count = Med_A_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jun_ATPS_count["Percentage"] = Med_A_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Jul_ATPS = Med_A_data_month_Jul[Med_A_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Jul_ATPS_count = Med_A_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Jul_ATPS_count["Percentage"] = Med_A_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Aug_ATPS = Med_A_data_month_Aug[Med_A_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Aug_ATPS_count = Med_A_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Aug_ATPS_count["Percentage"] = Med_A_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Sep_ATPS = Med_A_data_month_Sep[Med_A_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Sep_ATPS_count = Med_A_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Sep_ATPS_count["Percentage"] = Med_A_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Oct_ATPS = Med_A_data_month_Oct[Med_A_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Oct_ATPS_count = Med_A_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Oct_ATPS_count["Percentage"] = Med_A_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Nov_ATPS = Med_A_data_month_Nov[Med_A_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Nov_ATPS_count = Med_A_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Nov_ATPS_count["Percentage"] = Med_A_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_A_data_month_Dec_ATPS = Med_A_data_month_Dec[Med_A_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_A_data_month_Dec_ATPS_count = Med_A_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_A_data_month_Dec_ATPS_count["Percentage"] = Med_A_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values

#Med_B ward data by month and by moment (1) #####

Med_B_data_month_Jan_BTP = Med_B_data_month_Jan[Med_B_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Jan_BTP_count = Med_B_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jan_BTP_count["Percentage"] = Med_B_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Feb_BTP = Med_B_data_month_Feb[Med_B_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Feb_BTP_count = Med_B_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Feb_BTP_count["Percentage"] = Med_B_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Med_B_data_month_Mar_BTP = Med_B_data_month_Mar[Med_B_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Mar_BTP_count = Med_B_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Mar_BTP_count["Percentage"] = Med_B_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Apr_BTP = Med_B_data_month_Apr[Med_B_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Apr_BTP_count = Med_B_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Apr_BTP_count["Percentage"] = Med_B_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_May_BTP = Med_B_data_month_May[Med_B_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_May_BTP_count = Med_B_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_May_BTP_count["Percentage"] = Med_B_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Jun_BTP = Med_B_data_month_Jun[Med_B_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Jun_BTP_count = Med_B_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jun_BTP_count["Percentage"] = Med_B_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Jul_BTP = Med_B_data_month_Jul[Med_B_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Jul_BTP_count = Med_B_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jul_BTP_count["Percentage"] = Med_B_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Aug_BTP = Med_B_data_month_Aug[Med_B_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Aug_BTP_count = Med_B_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Aug_BTP_count["Percentage"] = Med_B_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Sep_BTP = Med_B_data_month_Sep[Med_B_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Sep_BTP_count = Med_B_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Sep_BTP_count["Percentage"] = Med_B_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Oct_BTP = Med_B_data_month_Oct[Med_B_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Oct_BTP_count = Med_B_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Oct_BTP_count["Percentage"] = Med_B_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Nov_BTP = Med_B_data_month_Nov[Med_B_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Nov_BTP_count = Med_B_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Nov_BTP_count["Percentage"] = Med_B_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Dec_BTP = Med_B_data_month_Dec[Med_B_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
Med_B_data_month_Dec_BTP_count = Med_B_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Dec_BTP_count["Percentage"] = Med_B_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Med B ward data by month and by moment (2) ######

Med_B_data_month_Jan_BAT = Med_B_data_month_Jan[Med_B_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Jan_BAT_count = Med_B_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jan_BAT_count["Percentage"] = Med_B_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Feb_BAT = Med_A_data_month_Feb[Med_B_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Feb_BAT_count = Med_A_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Feb_BAT_count["Percentage"] = Med_A_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Mar_BAT = Med_B_data_month_Mar[Med_B_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Mar_BAT_count = Med_B_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Mar_BAT_count["Percentage"] = Med_B_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Apr_BAT = Med_B_data_month_Apr[Med_B_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Apr_BAT_count = Med_B_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Apr_BAT_count["Percentage"] = Med_B_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_May_BAT = Med_B_data_month_May[Med_B_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_May_BAT_count = Med_B_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_May_BAT_count["Percentage"] = Med_B_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Jun_BAT = Med_B_data_month_Jun[Med_B_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Jun_BAT_count = Med_B_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jun_BAT_count["Percentage"] = Med_B_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Jul_BAT = Med_B_data_month_Jul[Med_B_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Jul_BAT_count = Med_B_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jul_BAT_count["Percentage"] = Med_B_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Aug_BAT = Med_B_data_month_Aug[Med_B_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Aug_BAT_count = Med_B_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Aug_BAT_count["Percentage"] = Med_B_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Sep_BAT = Med_B_data_month_Sep[Med_B_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Sep_BAT_count = Med_B_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Sep_BAT_count["Percentage"] = Med_B_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Oct_BAT = Med_B_data_month_Oct[Med_B_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Oct_BAT_count = Med_B_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Oct_BAT_count["Percentage"] = Med_B_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Nov_BAT = Med_B_data_month_Nov[Med_B_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Nov_BAT_count = Med_B_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Nov_BAT_count["Percentage"] = Med_B_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Dec_BAT = Med_B_data_month_Dec[Med_B_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
Med_B_data_month_Dec_BAT_count = Med_B_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Dec_BAT_count["Percentage"] = Med_B_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Med B ward data by month and by moment (3) #####

Med_B_data_month_Jan_ATP = Med_B_data_month_Jan[Med_B_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Jan_ATP_count = Med_B_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jan_ATP_count["Percentage"] = Med_B_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Feb_ATP = Med_B_data_month_Feb[Med_B_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Feb_ATP_count = Med_B_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Feb_ATP_count["Percentage"] = Med_B_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Med_B_data_month_Mar_ATP = Med_B_data_month_Mar[Med_B_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Mar_ATP_count = Med_B_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Mar_ATP_count["Percentage"] = Med_B_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Apr_ATP = Med_B_data_month_Apr[Med_B_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Apr_ATP_count = Med_B_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Apr_ATP_count["Percentage"] = Med_B_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_May_ATP = Med_B_data_month_May[Med_B_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_May_ATP_count = Med_B_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_May_ATP_count["Percentage"] = Med_B_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Jun_ATP = Med_B_data_month_Jun[Med_B_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Jun_ATP_count = Med_B_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jun_ATP_count["Percentage"] = Med_B_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Jul_ATP = Med_B_data_month_Jul[Med_B_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Jul_ATP_count = Med_B_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jul_ATP_count["Percentage"] = Med_B_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Med_B_data_month_Aug_ATP = Med_B_data_month_Aug[Med_B_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Aug_ATP_count = Med_B_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Aug_ATP_count["Percentage"] = Med_B_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Sep_ATP = Med_B_data_month_Sep[Med_B_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Sep_ATP_count = Med_B_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Sep_ATP_count["Percentage"] = Med_B_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Oct_ATP = Med_B_data_month_Oct[Med_B_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Oct_ATP_count = Med_B_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Oct_ATP_count["Percentage"] = Med_B_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Nov_ATP = Med_B_data_month_Nov[Med_B_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Nov_ATP_count = Med_B_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Nov_ATP_count["Percentage"] = Med_B_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Dec_ATP = Med_B_data_month_Dec[Med_B_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
Med_B_data_month_Dec_ATP_count = Med_B_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Dec_ATP_count["Percentage"] = Med_B_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Med B ward by month and by moment (4) ######

Med_B_data_month_Jan_ATBF = Med_B_data_month_Jan[Med_B_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Jan_ATBF_count = Med_B_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jan_ATBF_count["Percentage"] = Med_B_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Feb_ATBF = Med_B_data_month_Feb[Med_B_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Feb_ATBF_count = Med_B_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Feb_ATBF_count["Percentage"] = Med_B_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Mar_ATBF = Med_B_data_month_Mar[Med_B_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Mar_ATBF_count = Med_B_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Mar_ATBF_count["Percentage"] = Med_B_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Apr_ATBF = Med_B_data_month_Apr[Med_B_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Apr_ATBF_count = Med_B_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Apr_ATBF_count["Percentage"] = Med_B_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_May_ATBF = Med_B_data_month_May[Med_B_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_May_ATBF_count = Med_B_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_May_ATBF_count["Percentage"] = Med_B_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Jun_ATBF = Med_B_data_month_Jun[Med_B_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Jun_ATBF_count = Med_B_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jun_ATBF_count["Percentage"] = Med_B_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Jul_ATBF = Med_B_data_month_Jul[Med_B_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Jul_ATBF_count = Med_B_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jul_ATBF_count["Percentage"] = Med_B_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Aug_ATBF = Med_B_data_month_Aug[Med_B_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Aug_ATBF_count = Med_B_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Aug_ATBF_count["Percentage"] = Med_B_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Sep_ATBF = Med_B_data_month_Sep[Med_B_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Sep_ATBF_count = Med_B_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Sep_ATBF_count["Percentage"] = Med_B_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Oct_ATBF = Med_B_data_month_Oct[Med_B_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Oct_ATBF_count = Med_B_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Oct_ATBF_count["Percentage"] = Med_B_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Nov_ATBF = Med_B_data_month_Nov[Med_B_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Nov_ATBF_count = Med_B_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Nov_ATBF_count["Percentage"] = Med_B_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Dec_ATBF = Med_B_data_month_Dec[Med_B_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
Med_B_data_month_Dec_ATBF_count = Med_B_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Dec_ATBF_count["Percentage"] = Med_B_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Med B ward by month and by moment (5) #####

Med_B_data_month_Jan_ATPS = Med_B_data_month_Jan[Med_B_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Jan_ATPS_count = Med_B_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jan_ATPS_count["Percentage"] = Med_B_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Feb_ATPS = Med_B_data_month_Feb[Med_B_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Feb_ATPS_count = Med_B_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Feb_ATPS_count["Percentage"] = Med_B_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Mar_ATPS = Med_B_data_month_Mar[Med_B_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Mar_ATPS_count = Med_B_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Mar_ATPS_count["Percentage"] = Med_B_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Apr_ATPS = Med_B_data_month_Apr[Med_B_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Apr_ATPS_count = Med_B_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Apr_ATPS_count["Percentage"] = Med_B_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_May_ATPS = Med_B_data_month_May[Med_B_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_May_ATPS_count = Med_B_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_May_ATPS_count["Percentage"] = Med_B_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Jun_ATPS = Med_B_data_month_Jun[Med_B_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Jun_ATPS_count = Med_B_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jun_ATPS_count["Percentage"] = Med_B_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Jul_ATPS = Med_B_data_month_Jul[Med_B_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Jul_ATPS_count = Med_B_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Jul_ATPS_count["Percentage"] = Med_B_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Aug_ATPS = Med_B_data_month_Aug[Med_B_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Aug_ATPS_count = Med_B_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Aug_ATPS_count["Percentage"] = Med_B_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Sep_ATPS = Med_B_data_month_Sep[Med_B_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Sep_ATPS_count = Med_B_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Sep_ATPS_count["Percentage"] = Med_B_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Oct_ATPS = Med_B_data_month_Oct[Med_B_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Oct_ATPS_count = Med_B_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Oct_ATPS_count["Percentage"] = Med_B_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Nov_ATPS = Med_B_data_month_Nov[Med_B_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Nov_ATPS_count = Med_B_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Nov_ATPS_count["Percentage"] = Med_B_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Med_B_data_month_Dec_ATPS = Med_B_data_month_Dec[Med_B_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Med_B_data_month_Dec_ATPS_count = Med_B_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Med_B_data_month_Dec_ATPS_count["Percentage"] = Med_B_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values

#Pneumology ward data by month and by moment (1) #####

Pneumology_data_month_Jan_BTP = Pneumology_data_month_Jan[Pneumology_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Jan_BTP_count = Pneumology_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jan_BTP_count["Percentage"] = Pneumology_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Feb_BTP = Pneumology_data_month_Feb[Pneumology_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Feb_BTP_count = Pneumology_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Feb_BTP_count["Percentage"] = Pneumology_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Pneumology_data_month_Mar_BTP = Pneumology_data_month_Mar[Pneumology_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Mar_BTP_count = Pneumology_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Mar_BTP_count["Percentage"] = Pneumology_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Apr_BTP = Pneumology_data_month_Apr[Pneumology_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Apr_BTP_count = Pneumology_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Apr_BTP_count["Percentage"] = Pneumology_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_May_BTP = Pneumology_data_month_May[Pneumology_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_May_BTP_count = Pneumology_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_May_BTP_count["Percentage"] = Pneumology_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Jun_BTP = Pneumology_data_month_Jun[Pneumology_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Jun_BTP_count = Pneumology_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jun_BTP_count["Percentage"] = Pneumology_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Jul_BTP = Pneumology_data_month_Jul[Pneumology_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Jul_BTP_count = Pneumology_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jul_BTP_count["Percentage"] = Pneumology_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Aug_BTP = Pneumology_data_month_Aug[Pneumology_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Aug_BTP_count = Pneumology_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Aug_BTP_count["Percentage"] = Pneumology_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Sep_BTP = Pneumology_data_month_Sep[Pneumology_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Sep_BTP_count = Pneumology_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Sep_BTP_count["Percentage"] = Pneumology_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Oct_BTP = Pneumology_data_month_Oct[Pneumology_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Oct_BTP_count = Pneumology_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Oct_BTP_count["Percentage"] = Pneumology_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Nov_BTP = Pneumology_data_month_Nov[Pneumology_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Nov_BTP_count = Pneumology_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Nov_BTP_count["Percentage"] = Pneumology_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Dec_BTP = Pneumology_data_month_Dec[Pneumology_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
Pneumology_data_month_Dec_BTP_count = Pneumology_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Dec_BTP_count["Percentage"] = Pneumology_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Pneumology data by month and by moment (2) ######

Pneumology_data_month_Jan_BAT = Pneumology_data_month_Jan[Pneumology_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Jan_BAT_count = Pneumology_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jan_BAT_count["Percentage"] = Pneumology_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Feb_BAT = Pneumology_data_month_Feb[Pneumology_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Feb_BAT_count = Pneumology_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Feb_BAT_count["Percentage"] = Pneumology_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Mar_BAT = Pneumology_data_month_Mar[Pneumology_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Mar_BAT_count = Pneumology_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Mar_BAT_count["Percentage"] = Pneumology_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Apr_BAT = Pneumology_data_month_Apr[Pneumology_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Apr_BAT_count = Pneumology_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Apr_BAT_count["Percentage"] = Pneumology_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_May_BAT = Pneumology_data_month_May[Pneumology_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_May_BAT_count = Pneumology_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_May_BAT_count["Percentage"] = Pneumology_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Jun_BAT = Pneumology_data_month_Jun[Pneumology_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Jun_BAT_count = Pneumology_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jun_BAT_count["Percentage"] = Pneumology_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Jul_BAT = Pneumology_data_month_Jul[Pneumology_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Jul_BAT_count = Pneumology_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jul_BAT_count["Percentage"] = Pneumology_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Aug_BAT = Pneumology_data_month_Aug[Pneumology_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Aug_BAT_count = Pneumology_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Aug_BAT_count["Percentage"] = Pneumology_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Sep_BAT = Pneumology_data_month_Sep[Pneumology_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Sep_BAT_count = Pneumology_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Sep_BAT_count["Percentage"] = Pneumology_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Oct_BAT = Pneumology_data_month_Oct[Pneumology_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Oct_BAT_count = Pneumology_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Oct_BAT_count["Percentage"] = Pneumology_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Nov_BAT = Pneumology_data_month_Nov[Pneumology_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Nov_BAT_count = Pneumology_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Nov_BAT_count["Percentage"] = Pneumology_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Dec_BAT = Pneumology_data_month_Dec[Pneumology_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pneumology_data_month_Dec_BAT_count = Pneumology_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Dec_BAT_count["Percentage"] = Pneumology_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Pneumology data by month and by moment (3) #####

Pneumology_data_month_Jan_ATP = Pneumology_data_month_Jan[Pneumology_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Jan_ATP_count = Pneumology_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jan_ATP_count["Percentage"] = Pneumology_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Feb_ATP = Pneumology_data_month_Feb[Pneumology_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Feb_ATP_count = Pneumology_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Feb_ATP_count["Percentage"] = Pneumology_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Pneumology_data_month_Mar_ATP = Pneumology_data_month_Mar[Pneumology_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Mar_ATP_count = Pneumology_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Mar_ATP_count["Percentage"] = Pneumology_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Apr_ATP = Pneumology_data_month_Apr[Pneumology_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Apr_ATP_count = Pneumology_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Apr_ATP_count["Percentage"] = Pneumology_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_May_ATP = Pneumology_data_month_May[Pneumology_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_May_ATP_count = Pneumology_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_May_ATP_count["Percentage"] = Pneumology_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Jun_ATP = Pneumology_data_month_Jun[Pneumology_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Jun_ATP_count = Pneumology_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jun_ATP_count["Percentage"] = Pneumology_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Jul_ATP = Pneumology_data_month_Jul[Pneumology_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Jul_ATP_count = Pneumology_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jul_ATP_count["Percentage"] = Pneumology_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Pneumology_data_month_Aug_ATP = Pneumology_data_month_Aug[Pneumology_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Aug_ATP_count = Pneumology_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Aug_ATP_count["Percentage"] = Pneumology_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Sep_ATP = Pneumology_data_month_Sep[Pneumology_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Sep_ATP_count = Pneumology_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Sep_ATP_count["Percentage"] = Pneumology_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Oct_ATP = Pneumology_data_month_Oct[Pneumology_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Oct_ATP_count = Pneumology_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Oct_ATP_count["Percentage"] = Pneumology_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Nov_ATP = Pneumology_data_month_Nov[Pneumology_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Nov_ATP_count = Pneumology_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Nov_ATP_count["Percentage"] = Pneumology_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Dec_ATP = Pneumology_data_month_Dec[Pneumology_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
Pneumology_data_month_Dec_ATP_count = Pneumology_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Dec_ATP_count["Percentage"] = Pneumology_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Pneumology by month and by moment (4) ######

Pneumology_data_month_Jan_ATBF = Pneumology_data_month_Jan[Pneumology_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Jan_ATBF_count = Pneumology_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jan_ATBF_count["Percentage"] = Pneumology_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Feb_ATBF = Pneumology_data_month_Feb[Pneumology_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Feb_ATBF_count = Pneumology_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Feb_ATBF_count["Percentage"] = Pneumology_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Mar_ATBF = Pneumology_data_month_Mar[Pneumology_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Mar_ATBF_count = Pneumology_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Mar_ATBF_count["Percentage"] = Pneumology_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Apr_ATBF = Pneumology_data_month_Apr[Pneumology_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Apr_ATBF_count = Pneumology_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Apr_ATBF_count["Percentage"] = Pneumology_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_May_ATBF = Pneumology_data_month_May[Pneumology_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_May_ATBF_count = Pneumology_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_May_ATBF_count["Percentage"] = Pneumology_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Jun_ATBF = Pneumology_data_month_Jun[Pneumology_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Jun_ATBF_count = Pneumology_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jun_ATBF_count["Percentage"] = Pneumology_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Jul_ATBF = Pneumology_data_month_Jul[Pneumology_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Jul_ATBF_count = Pneumology_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jul_ATBF_count["Percentage"] = Pneumology_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Aug_ATBF = Pneumology_data_month_Aug[Pneumology_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Aug_ATBF_count = Pneumology_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Aug_ATBF_count["Percentage"] = Pneumology_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Sep_ATBF = Pneumology_data_month_Sep[Pneumology_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Sep_ATBF_count = Pneumology_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Sep_ATBF_count["Percentage"] = Pneumology_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Oct_ATBF = Pneumology_data_month_Oct[Pneumology_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Oct_ATBF_count = Pneumology_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Oct_ATBF_count["Percentage"] = Pneumology_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Nov_ATBF = Pneumology_data_month_Nov[Pneumology_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Nov_ATBF_count = Pneumology_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Nov_ATBF_count["Percentage"] = Pneumology_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Dec_ATBF = Pneumology_data_month_Dec[Pneumology_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pneumology_data_month_Dec_ATBF_count = Pneumology_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Dec_ATBF_count["Percentage"] = Pneumology_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Pneumology by month and by moment (5) #####

Pneumology_data_month_Jan_ATPS = Pneumology_data_month_Jan[Pneumology_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Jan_ATPS_count = Pneumology_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jan_ATPS_count["Percentage"] = Pneumology_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Feb_ATPS = Pneumology_data_month_Feb[Pneumology_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Feb_ATPS_count = Pneumology_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Feb_ATPS_count["Percentage"] = Pneumology_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Mar_ATPS = Pneumology_data_month_Mar[Pneumology_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Mar_ATPS_count = Pneumology_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Mar_ATPS_count["Percentage"] = Pneumology_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Apr_ATPS = Pneumology_data_month_Apr[Pneumology_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Apr_ATPS_count = Pneumology_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Apr_ATPS_count["Percentage"] = Pneumology_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_May_ATPS = Pneumology_data_month_May[Pneumology_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_May_ATPS_count = Pneumology_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_May_ATPS_count["Percentage"] = Pneumology_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Jun_ATPS = Pneumology_data_month_Jun[Pneumology_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Jun_ATPS_count = Pneumology_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jun_ATPS_count["Percentage"] = Pneumology_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Jul_ATPS = Pneumology_data_month_Jul[Pneumology_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Jul_ATPS_count = Pneumology_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Jul_ATPS_count["Percentage"] = Pneumology_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Aug_ATPS = Pneumology_data_month_Aug[Pneumology_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Aug_ATPS_count = Pneumology_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Aug_ATPS_count["Percentage"] = Pneumology_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Sep_ATPS = Pneumology_data_month_Sep[Pneumology_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Sep_ATPS_count = Pneumology_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Sep_ATPS_count["Percentage"] = Pneumology_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Oct_ATPS = Pneumology_data_month_Oct[Pneumology_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Oct_ATPS_count = Pneumology_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Oct_ATPS_count["Percentage"] = Pneumology_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Nov_ATPS = Pneumology_data_month_Nov[Pneumology_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Nov_ATPS_count = Pneumology_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Nov_ATPS_count["Percentage"] = Pneumology_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pneumology_data_month_Dec_ATPS = Pneumology_data_month_Dec[Pneumology_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pneumology_data_month_Dec_ATPS_count = Pneumology_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pneumology_data_month_Dec_ATPS_count["Percentage"] = Pneumology_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery A ward data by month and by moment (1) #####

Surgery_A_data_month_Jan_BTP = Surgery_A_data_month_Jan[Surgery_A_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Jan_BTP_count = Surgery_A_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jan_BTP_count["Percentage"] = Surgery_A_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Feb_BTP = Surgery_A_data_month_Feb[Surgery_A_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Feb_BTP_count = Surgery_A_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Feb_BTP_count["Percentage"] = Surgery_A_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Surgery_A_data_month_Mar_BTP = Surgery_A_data_month_Mar[Surgery_A_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Mar_BTP_count = Surgery_A_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Mar_BTP_count["Percentage"] = Surgery_A_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Apr_BTP = Surgery_A_data_month_Apr[Surgery_A_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Apr_BTP_count = Surgery_A_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Apr_BTP_count["Percentage"] = Surgery_A_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_May_BTP = Surgery_A_data_month_May[Surgery_A_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_May_BTP_count = Surgery_A_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_May_BTP_count["Percentage"] = Surgery_A_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Jun_BTP = Surgery_A_data_month_Jun[Surgery_A_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Jun_BTP_count = Surgery_A_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jun_BTP_count["Percentage"] = Surgery_A_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Jul_BTP = Surgery_A_data_month_Jul[Surgery_A_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Jul_BTP_count = Surgery_A_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jul_BTP_count["Percentage"] = Surgery_A_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Aug_BTP = Surgery_A_data_month_Aug[Surgery_A_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Aug_BTP_count = Surgery_A_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Aug_BTP_count["Percentage"] = Surgery_A_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Sep_BTP = Surgery_A_data_month_Sep[Surgery_A_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Sep_BTP_count = Surgery_A_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Sep_BTP_count["Percentage"] = Surgery_A_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Oct_BTP = Surgery_A_data_month_Oct[Surgery_A_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Oct_BTP_count = Surgery_A_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Oct_BTP_count["Percentage"] = Surgery_A_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Nov_BTP = Surgery_A_data_month_Nov[Surgery_A_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Nov_BTP_count = Surgery_A_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Nov_BTP_count["Percentage"] = Surgery_A_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Dec_BTP = Surgery_A_data_month_Dec[Surgery_A_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_A_data_month_Dec_BTP_count = Surgery_A_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Dec_BTP_count["Percentage"] = Surgery_A_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery A data by month and by moment (2) ######

Surgery_A_data_month_Jan_BAT = Surgery_A_data_month_Jan[Surgery_A_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Jan_BAT_count = Surgery_A_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jan_BAT_count["Percentage"] = Surgery_A_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Feb_BAT = Surgery_A_data_month_Feb[Surgery_A_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Feb_BAT_count = Surgery_A_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Feb_BAT_count["Percentage"] = Surgery_A_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Mar_BAT = Surgery_A_data_month_Mar[Surgery_A_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Mar_BAT_count = Surgery_A_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Mar_BAT_count["Percentage"] = Surgery_A_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Apr_BAT = Surgery_A_data_month_Apr[Surgery_A_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Apr_BAT_count = Surgery_A_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Apr_BAT_count["Percentage"] = Surgery_A_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_May_BAT = Surgery_A_data_month_May[Surgery_A_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_May_BAT_count = Surgery_A_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_May_BAT_count["Percentage"] = Surgery_A_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Jun_BAT = Surgery_A_data_month_Jun[Surgery_A_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Jun_BAT_count = Surgery_A_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jun_BAT_count["Percentage"] = Surgery_A_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Jul_BAT = Surgery_A_data_month_Jul[Surgery_A_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Jul_BAT_count = Surgery_A_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jul_BAT_count["Percentage"] = Surgery_A_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Aug_BAT = Surgery_A_data_month_Aug[Surgery_A_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Aug_BAT_count = Surgery_A_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Aug_BAT_count["Percentage"] = Surgery_A_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Sep_BAT = Surgery_A_data_month_Sep[Surgery_A_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Sep_BAT_count = Surgery_A_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Sep_BAT_count["Percentage"] = Surgery_A_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Oct_BAT = Surgery_A_data_month_Oct[Surgery_A_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Oct_BAT_count = Surgery_A_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Oct_BAT_count["Percentage"] = Surgery_A_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Nov_BAT = Surgery_A_data_month_Nov[Surgery_A_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Nov_BAT_count = Surgery_A_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Nov_BAT_count["Percentage"] = Surgery_A_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Dec_BAT = Surgery_A_data_month_Dec[Surgery_A_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_A_data_month_Dec_BAT_count = Surgery_A_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Dec_BAT_count["Percentage"] = Surgery_A_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery A data by month and by moment (3) #####

Surgery_A_data_month_Jan_ATP = Surgery_A_data_month_Jan[Surgery_A_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Jan_ATP_count = Surgery_A_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jan_ATP_count["Percentage"] = Surgery_A_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Feb_ATP = Surgery_A_data_month_Feb[Surgery_A_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Feb_ATP_count = Surgery_A_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Feb_ATP_count["Percentage"] = Surgery_A_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Surgery_A_data_month_Mar_ATP = Surgery_A_data_month_Mar[Surgery_A_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Mar_ATP_count = Surgery_A_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Mar_ATP_count["Percentage"] = Surgery_A_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Apr_ATP = Surgery_A_data_month_Apr[Surgery_A_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Apr_ATP_count = Surgery_A_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Apr_ATP_count["Percentage"] = Surgery_A_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_May_ATP = Surgery_A_data_month_May[Surgery_A_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_May_ATP_count = Surgery_A_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_May_ATP_count["Percentage"] = Surgery_A_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Jun_ATP = Surgery_A_data_month_Jun[Surgery_A_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Jun_ATP_count = Surgery_A_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jun_ATP_count["Percentage"] = Surgery_A_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Jul_ATP = Surgery_A_data_month_Jul[Surgery_A_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Jul_ATP_count = Surgery_A_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jul_ATP_count["Percentage"] = Surgery_A_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Surgery_A_data_month_Aug_ATP = Surgery_A_data_month_Aug[Surgery_A_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Aug_ATP_count = Surgery_A_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Aug_ATP_count["Percentage"] = Surgery_A_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Sep_ATP = Surgery_A_data_month_Sep[Surgery_A_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Sep_ATP_count = Surgery_A_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Sep_ATP_count["Percentage"] = Surgery_A_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Oct_ATP = Surgery_A_data_month_Oct[Surgery_A_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Oct_ATP_count = Surgery_A_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Oct_ATP_count["Percentage"] = Surgery_A_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Nov_ATP = Surgery_A_data_month_Nov[Surgery_A_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Nov_ATP_count = Surgery_A_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Nov_ATP_count["Percentage"] = Surgery_A_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Dec_ATP = Surgery_A_data_month_Dec[Surgery_A_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_A_data_month_Dec_ATP_count = Surgery_A_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Dec_ATP_count["Percentage"] = Surgery_A_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery A by month and by moment (4) ######

Surgery_A_data_month_Jan_ATBF = Surgery_A_data_month_Jan[Surgery_A_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Jan_ATBF_count = Surgery_A_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jan_ATBF_count["Percentage"] = Surgery_A_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Feb_ATBF = Surgery_A_data_month_Feb[Surgery_A_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Feb_ATBF_count = Surgery_A_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Feb_ATBF_count["Percentage"] = Surgery_A_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Mar_ATBF = Surgery_A_data_month_Mar[Surgery_A_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Mar_ATBF_count = Surgery_A_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Mar_ATBF_count["Percentage"] = Surgery_A_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Apr_ATBF = Surgery_A_data_month_Apr[Surgery_A_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Apr_ATBF_count = Surgery_A_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Apr_ATBF_count["Percentage"] = Surgery_A_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_May_ATBF = Surgery_A_data_month_May[Surgery_A_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_May_ATBF_count = Surgery_A_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_May_ATBF_count["Percentage"] = Surgery_A_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Jun_ATBF = Surgery_A_data_month_Jun[Surgery_A_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Jun_ATBF_count = Surgery_A_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jun_ATBF_count["Percentage"] = Surgery_A_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Jul_ATBF = Surgery_A_data_month_Jul[Surgery_A_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Jul_ATBF_count = Surgery_A_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jul_ATBF_count["Percentage"] = Surgery_A_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Aug_ATBF = Surgery_A_data_month_Aug[Surgery_A_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Aug_ATBF_count = Surgery_A_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Aug_ATBF_count["Percentage"] = Surgery_A_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Sep_ATBF = Surgery_A_data_month_Sep[Surgery_A_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Sep_ATBF_count = Surgery_A_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Sep_ATBF_count["Percentage"] = Surgery_A_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Oct_ATBF = Surgery_A_data_month_Oct[Surgery_A_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Oct_ATBF_count = Surgery_A_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Oct_ATBF_count["Percentage"] = Surgery_A_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Nov_ATBF = Surgery_A_data_month_Nov[Surgery_A_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Nov_ATBF_count = Surgery_A_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Nov_ATBF_count["Percentage"] = Surgery_A_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Dec_ATBF = Surgery_A_data_month_Dec[Surgery_A_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_A_data_month_Dec_ATBF_count = Surgery_A_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Dec_ATBF_count["Percentage"] = Surgery_A_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery A by month and by moment (5) #####

Surgery_A_data_month_Jan_ATPS = Surgery_A_data_month_Jan[Surgery_A_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Jan_ATPS_count = Surgery_A_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jan_ATPS_count["Percentage"] = Surgery_A_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Feb_ATPS = Surgery_A_data_month_Feb[Surgery_A_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Feb_ATPS_count = Surgery_A_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Feb_ATPS_count["Percentage"] = Surgery_A_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Mar_ATPS = Surgery_A_data_month_Mar[Surgery_A_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Mar_ATPS_count = Surgery_A_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Mar_ATPS_count["Percentage"] = Surgery_A_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Apr_ATPS = Surgery_A_data_month_Apr[Surgery_A_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Apr_ATPS_count = Surgery_A_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Apr_ATPS_count["Percentage"] = Surgery_A_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_May_ATPS = Surgery_A_data_month_May[Surgery_A_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_May_ATPS_count = Surgery_A_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_May_ATPS_count["Percentage"] = Surgery_A_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Jun_ATPS = Surgery_A_data_month_Jun[Surgery_A_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Jun_ATPS_count = Surgery_A_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jun_ATPS_count["Percentage"] = Surgery_A_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Jul_ATPS = Surgery_A_data_month_Jul[Surgery_A_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Jul_ATPS_count = Surgery_A_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Jul_ATPS_count["Percentage"] = Surgery_A_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Aug_ATPS = Surgery_A_data_month_Aug[Surgery_A_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Aug_ATPS_count = Surgery_A_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Aug_ATPS_count["Percentage"] = Surgery_A_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Sep_ATPS = Surgery_A_data_month_Sep[Surgery_A_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Sep_ATPS_count = Surgery_A_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Sep_ATPS_count["Percentage"] = Surgery_A_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Oct_ATPS = Surgery_A_data_month_Oct[Surgery_A_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Oct_ATPS_count = Surgery_A_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Oct_ATPS_count["Percentage"] = Surgery_A_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Nov_ATPS = Surgery_A_data_month_Nov[Surgery_A_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Nov_ATPS_count = Surgery_A_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Nov_ATPS_count["Percentage"] = Surgery_A_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_A_data_month_Dec_ATPS = Surgery_A_data_month_Dec[Surgery_A_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_A_data_month_Dec_ATPS_count = Surgery_A_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_A_data_month_Dec_ATPS_count["Percentage"] = Surgery_A_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery B ward data by month and by moment (1) #####

Surgery_B_data_month_Jan_BTP = Surgery_B_data_month_Jan[Surgery_B_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Jan_BTP_count = Surgery_B_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jan_BTP_count["Percentage"] = Surgery_B_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Feb_BTP = Surgery_B_data_month_Feb[Surgery_B_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Feb_BTP_count = Surgery_B_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Feb_BTP_count["Percentage"] = Surgery_B_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Surgery_B_data_month_Mar_BTP = Surgery_B_data_month_Mar[Surgery_B_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Mar_BTP_count = Surgery_B_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Mar_BTP_count["Percentage"] = Surgery_B_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Apr_BTP = Surgery_B_data_month_Apr[Surgery_B_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Apr_BTP_count = Surgery_B_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Apr_BTP_count["Percentage"] = Surgery_B_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_May_BTP = Surgery_B_data_month_May[Surgery_B_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_May_BTP_count = Surgery_B_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_May_BTP_count["Percentage"] = Surgery_B_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Jun_BTP = Surgery_B_data_month_Jun[Surgery_B_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Jun_BTP_count = Surgery_B_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jun_BTP_count["Percentage"] = Surgery_B_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Jul_BTP = Surgery_B_data_month_Jul[Surgery_B_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Jul_BTP_count = Surgery_B_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jul_BTP_count["Percentage"] = Surgery_B_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Aug_BTP = Surgery_B_data_month_Aug[Surgery_B_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Aug_BTP_count = Surgery_B_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Aug_BTP_count["Percentage"] = Surgery_B_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Sep_BTP = Surgery_B_data_month_Sep[Surgery_B_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Sep_BTP_count = Surgery_B_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Sep_BTP_count["Percentage"] = Surgery_B_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Oct_BTP = Surgery_B_data_month_Oct[Surgery_B_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Oct_BTP_count = Surgery_B_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Oct_BTP_count["Percentage"] = Surgery_B_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Nov_BTP = Surgery_B_data_month_Nov[Surgery_B_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Nov_BTP_count = Surgery_B_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Nov_BTP_count["Percentage"] = Surgery_B_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Dec_BTP = Surgery_B_data_month_Dec[Surgery_B_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_B_data_month_Dec_BTP_count = Surgery_B_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Dec_BTP_count["Percentage"] = Surgery_B_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery B data by month and by moment (2) ######

Surgery_B_data_month_Jan_BAT = Surgery_B_data_month_Jan[Surgery_B_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Jan_BAT_count = Surgery_B_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jan_BAT_count["Percentage"] = Surgery_B_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Feb_BAT = Surgery_B_data_month_Feb[Surgery_B_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Feb_BAT_count = Surgery_B_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Feb_BAT_count["Percentage"] = Surgery_B_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Mar_BAT = Surgery_B_data_month_Mar[Surgery_B_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Mar_BAT_count = Surgery_B_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Mar_BAT_count["Percentage"] = Surgery_B_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Apr_BAT = Surgery_B_data_month_Apr[Surgery_B_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Apr_BAT_count = Surgery_B_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Apr_BAT_count["Percentage"] = Surgery_B_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_May_BAT = Surgery_B_data_month_May[Surgery_B_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_May_BAT_count = Surgery_B_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_May_BAT_count["Percentage"] = Surgery_B_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Jun_BAT = Surgery_B_data_month_Jun[Surgery_B_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Jun_BAT_count = Surgery_B_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jun_BAT_count["Percentage"] = Surgery_B_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Jul_BAT = Surgery_B_data_month_Jul[Surgery_B_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Jul_BAT_count = Surgery_B_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jul_BAT_count["Percentage"] = Surgery_B_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Aug_BAT = Surgery_B_data_month_Aug[Surgery_B_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Aug_BAT_count = Surgery_B_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Aug_BAT_count["Percentage"] = Surgery_B_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Sep_BAT = Surgery_B_data_month_Sep[Surgery_B_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Sep_BAT_count = Surgery_B_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Sep_BAT_count["Percentage"] = Surgery_B_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Oct_BAT = Surgery_B_data_month_Oct[Surgery_B_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Oct_BAT_count = Surgery_B_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Oct_BAT_count["Percentage"] = Surgery_B_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Nov_BAT = Surgery_B_data_month_Nov[Surgery_B_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Nov_BAT_count = Surgery_B_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Nov_BAT_count["Percentage"] = Surgery_B_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Dec_BAT = Surgery_B_data_month_Dec[Surgery_B_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_B_data_month_Dec_BAT_count = Surgery_B_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Dec_BAT_count["Percentage"] = Surgery_B_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery B data by month and by moment (3) #####

Surgery_B_data_month_Jan_ATP = Surgery_B_data_month_Jan[Surgery_B_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Jan_ATP_count = Surgery_B_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jan_ATP_count["Percentage"] = Surgery_B_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Feb_ATP = Surgery_B_data_month_Feb[Surgery_B_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Feb_ATP_count = Surgery_B_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Feb_ATP_count["Percentage"] = Surgery_B_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Surgery_B_data_month_Mar_ATP = Surgery_B_data_month_Mar[Surgery_B_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Mar_ATP_count = Surgery_B_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Mar_ATP_count["Percentage"] = Surgery_B_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Apr_ATP = Surgery_B_data_month_Apr[Surgery_B_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Apr_ATP_count = Surgery_B_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Apr_ATP_count["Percentage"] = Surgery_B_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_May_ATP = Surgery_B_data_month_May[Surgery_B_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_May_ATP_count = Surgery_B_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_May_ATP_count["Percentage"] = Surgery_B_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Jun_ATP = Surgery_B_data_month_Jun[Surgery_B_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Jun_ATP_count = Surgery_B_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jun_ATP_count["Percentage"] = Surgery_B_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Jul_ATP = Surgery_B_data_month_Jul[Surgery_B_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Jul_ATP_count = Surgery_B_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jul_ATP_count["Percentage"] = Surgery_B_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Surgery_B_data_month_Aug_ATP = Surgery_B_data_month_Aug[Surgery_B_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Aug_ATP_count = Surgery_B_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Aug_ATP_count["Percentage"] = Surgery_B_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Sep_ATP = Surgery_B_data_month_Sep[Surgery_B_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Sep_ATP_count = Surgery_B_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Sep_ATP_count["Percentage"] = Surgery_B_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Oct_ATP = Surgery_B_data_month_Oct[Surgery_B_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Oct_ATP_count = Surgery_B_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Oct_ATP_count["Percentage"] = Surgery_B_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Nov_ATP = Surgery_B_data_month_Nov[Surgery_B_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Nov_ATP_count = Surgery_B_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Nov_ATP_count["Percentage"] = Surgery_B_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Dec_ATP = Surgery_B_data_month_Dec[Surgery_B_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_B_data_month_Dec_ATP_count = Surgery_B_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Dec_ATP_count["Percentage"] = Surgery_B_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery B by month and by moment (4) ######

Surgery_B_data_month_Jan_ATBF = Surgery_B_data_month_Jan[Surgery_B_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Jan_ATBF_count = Surgery_B_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jan_ATBF_count["Percentage"] = Surgery_B_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Feb_ATBF = Surgery_B_data_month_Feb[Surgery_B_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Feb_ATBF_count = Surgery_B_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Feb_ATBF_count["Percentage"] = Surgery_B_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Mar_ATBF = Surgery_B_data_month_Mar[Surgery_B_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Mar_ATBF_count = Surgery_B_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Mar_ATBF_count["Percentage"] = Surgery_B_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Apr_ATBF = Surgery_B_data_month_Apr[Surgery_B_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Apr_ATBF_count = Surgery_B_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Apr_ATBF_count["Percentage"] = Surgery_B_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_May_ATBF = Surgery_B_data_month_May[Surgery_B_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_May_ATBF_count = Surgery_B_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_May_ATBF_count["Percentage"] = Surgery_B_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Jun_ATBF = Surgery_B_data_month_Jun[Surgery_B_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Jun_ATBF_count = Surgery_B_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jun_ATBF_count["Percentage"] = Surgery_B_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Jul_ATBF = Surgery_B_data_month_Jul[Surgery_B_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Jul_ATBF_count = Surgery_B_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jul_ATBF_count["Percentage"] = Surgery_B_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Aug_ATBF = Surgery_B_data_month_Aug[Surgery_B_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Aug_ATBF_count = Surgery_B_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Aug_ATBF_count["Percentage"] = Surgery_B_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Sep_ATBF = Surgery_B_data_month_Sep[Surgery_B_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Sep_ATBF_count = Surgery_B_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Sep_ATBF_count["Percentage"] = Surgery_B_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Oct_ATBF = Surgery_B_data_month_Oct[Surgery_B_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Oct_ATBF_count = Surgery_B_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Oct_ATBF_count["Percentage"] = Surgery_B_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Nov_ATBF = Surgery_B_data_month_Nov[Surgery_B_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Nov_ATBF_count = Surgery_B_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Nov_ATBF_count["Percentage"] = Surgery_B_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Dec_ATBF = Surgery_B_data_month_Dec[Surgery_B_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_B_data_month_Dec_ATBF_count = Surgery_B_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Dec_ATBF_count["Percentage"] = Surgery_B_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery B by month and by moment (5) #####

Surgery_B_data_month_Jan_ATPS = Surgery_B_data_month_Jan[Surgery_B_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Jan_ATPS_count = Surgery_B_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jan_ATPS_count["Percentage"] = Surgery_B_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Feb_ATPS = Surgery_B_data_month_Feb[Surgery_B_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Feb_ATPS_count = Surgery_B_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Feb_ATPS_count["Percentage"] = Surgery_B_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Mar_ATPS = Surgery_B_data_month_Mar[Surgery_B_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Mar_ATPS_count = Surgery_B_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Mar_ATPS_count["Percentage"] = Surgery_B_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Apr_ATPS = Surgery_B_data_month_Apr[Surgery_B_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Apr_ATPS_count = Surgery_B_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Apr_ATPS_count["Percentage"] = Surgery_B_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_May_ATPS = Surgery_B_data_month_May[Surgery_B_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_May_ATPS_count = Surgery_B_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_May_ATPS_count["Percentage"] = Surgery_B_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Jun_ATPS = Surgery_B_data_month_Jun[Surgery_B_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Jun_ATPS_count = Surgery_B_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jun_ATPS_count["Percentage"] = Surgery_B_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Jul_ATPS = Surgery_B_data_month_Jul[Surgery_B_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Jul_ATPS_count = Surgery_B_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Jul_ATPS_count["Percentage"] = Surgery_B_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Aug_ATPS = Surgery_B_data_month_Aug[Surgery_B_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Aug_ATPS_count = Surgery_B_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Aug_ATPS_count["Percentage"] = Surgery_B_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Sep_ATPS = Surgery_B_data_month_Sep[Surgery_B_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Sep_ATPS_count = Surgery_B_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Sep_ATPS_count["Percentage"] = Surgery_B_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Oct_ATPS = Surgery_B_data_month_Oct[Surgery_B_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Oct_ATPS_count = Surgery_B_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Oct_ATPS_count["Percentage"] = Surgery_B_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Nov_ATPS = Surgery_B_data_month_Nov[Surgery_B_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Nov_ATPS_count = Surgery_B_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Nov_ATPS_count["Percentage"] = Surgery_B_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_B_data_month_Dec_ATPS = Surgery_B_data_month_Dec[Surgery_B_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_B_data_month_Dec_ATPS_count = Surgery_B_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_B_data_month_Dec_ATPS_count["Percentage"] = Surgery_B_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery C ward data by month and by moment (1) #####

Surgery_C_data_month_Jan_BTP = Surgery_C_data_month_Jan[Surgery_C_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Jan_BTP_count = Surgery_C_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jan_BTP_count["Percentage"] = Surgery_C_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Feb_BTP = Surgery_C_data_month_Feb[Surgery_C_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Feb_BTP_count = Surgery_C_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Feb_BTP_count["Percentage"] = Surgery_C_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Surgery_C_data_month_Mar_BTP = Surgery_C_data_month_Mar[Surgery_C_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Mar_BTP_count = Surgery_C_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Mar_BTP_count["Percentage"] = Surgery_C_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Apr_BTP = Surgery_C_data_month_Apr[Surgery_C_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Apr_BTP_count = Surgery_C_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Apr_BTP_count["Percentage"] = Surgery_C_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_May_BTP = Surgery_C_data_month_May[Surgery_C_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_May_BTP_count = Surgery_C_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_May_BTP_count["Percentage"] = Surgery_C_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Jun_BTP = Surgery_C_data_month_Jun[Surgery_C_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Jun_BTP_count = Surgery_C_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jun_BTP_count["Percentage"] = Surgery_C_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Jul_BTP = Surgery_C_data_month_Jul[Surgery_C_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Jul_BTP_count = Surgery_C_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jul_BTP_count["Percentage"] = Surgery_C_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Aug_BTP = Surgery_C_data_month_Aug[Surgery_C_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Aug_BTP_count = Surgery_C_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Aug_BTP_count["Percentage"] = Surgery_C_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Sep_BTP = Surgery_C_data_month_Sep[Surgery_C_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Sep_BTP_count = Surgery_C_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Sep_BTP_count["Percentage"] = Surgery_C_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Oct_BTP = Surgery_C_data_month_Oct[Surgery_C_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Oct_BTP_count = Surgery_C_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Oct_BTP_count["Percentage"] = Surgery_C_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Nov_BTP = Surgery_C_data_month_Nov[Surgery_C_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Nov_BTP_count = Surgery_C_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Nov_BTP_count["Percentage"] = Surgery_C_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Dec_BTP = Surgery_C_data_month_Dec[Surgery_C_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
Surgery_C_data_month_Dec_BTP_count = Surgery_C_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Dec_BTP_count["Percentage"] = Surgery_C_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery C data by month and by moment (2) ######

Surgery_C_data_month_Jan_BAT = Surgery_C_data_month_Jan[Surgery_C_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Jan_BAT_count = Surgery_C_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jan_BAT_count["Percentage"] = Surgery_C_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Feb_BAT = Surgery_C_data_month_Feb[Surgery_C_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Feb_BAT_count = Surgery_C_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Feb_BAT_count["Percentage"] = Surgery_C_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Mar_BAT = Surgery_C_data_month_Mar[Surgery_C_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Mar_BAT_count = Surgery_C_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Mar_BAT_count["Percentage"] = Surgery_C_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Apr_BAT = Surgery_C_data_month_Apr[Surgery_C_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Apr_BAT_count = Surgery_C_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Apr_BAT_count["Percentage"] = Surgery_C_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_May_BAT = Surgery_C_data_month_May[Surgery_C_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_May_BAT_count = Surgery_C_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_May_BAT_count["Percentage"] = Surgery_C_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Jun_BAT = Surgery_C_data_month_Jun[Surgery_C_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Jun_BAT_count = Surgery_C_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jun_BAT_count["Percentage"] = Surgery_C_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Jul_BAT = Surgery_C_data_month_Jul[Surgery_C_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Jul_BAT_count = Surgery_C_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jul_BAT_count["Percentage"] = Surgery_C_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Aug_BAT = Surgery_C_data_month_Aug[Surgery_C_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Aug_BAT_count = Surgery_C_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Aug_BAT_count["Percentage"] = Surgery_C_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Sep_BAT = Surgery_C_data_month_Sep[Surgery_C_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Sep_BAT_count = Surgery_C_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Sep_BAT_count["Percentage"] = Surgery_C_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Oct_BAT = Surgery_C_data_month_Oct[Surgery_C_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Oct_BAT_count = Surgery_C_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Oct_BAT_count["Percentage"] = Surgery_C_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Nov_BAT = Surgery_C_data_month_Nov[Surgery_C_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Nov_BAT_count = Surgery_C_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Nov_BAT_count["Percentage"] = Surgery_C_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Dec_BAT = Surgery_C_data_month_Dec[Surgery_C_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
Surgery_C_data_month_Dec_BAT_count = Surgery_C_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Dec_BAT_count["Percentage"] = Surgery_C_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery C data by month and by moment (3) #####

Surgery_C_data_month_Jan_ATP = Surgery_C_data_month_Jan[Surgery_C_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Jan_ATP_count = Surgery_C_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jan_ATP_count["Percentage"] = Surgery_C_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Feb_ATP = Surgery_C_data_month_Feb[Surgery_C_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Feb_ATP_count = Surgery_C_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Feb_ATP_count["Percentage"] = Surgery_C_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Surgery_C_data_month_Mar_ATP = Surgery_C_data_month_Mar[Surgery_C_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Mar_ATP_count = Surgery_C_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Mar_ATP_count["Percentage"] = Surgery_C_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Apr_ATP = Surgery_C_data_month_Apr[Surgery_C_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Apr_ATP_count = Surgery_C_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Apr_ATP_count["Percentage"] = Surgery_C_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_May_ATP = Surgery_C_data_month_May[Surgery_C_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_May_ATP_count = Surgery_C_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_May_ATP_count["Percentage"] = Surgery_C_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Jun_ATP = Surgery_C_data_month_Jun[Surgery_C_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Jun_ATP_count = Surgery_C_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jun_ATP_count["Percentage"] = Surgery_C_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Jul_ATP = Surgery_C_data_month_Jul[Surgery_C_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Jul_ATP_count = Surgery_C_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jul_ATP_count["Percentage"] = Surgery_C_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Surgery_C_data_month_Aug_ATP = Surgery_C_data_month_Aug[Surgery_C_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Aug_ATP_count = Surgery_C_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Aug_ATP_count["Percentage"] = Surgery_C_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Sep_ATP = Surgery_C_data_month_Sep[Surgery_C_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Sep_ATP_count = Surgery_C_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Sep_ATP_count["Percentage"] = Surgery_C_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Oct_ATP = Surgery_C_data_month_Oct[Surgery_C_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Oct_ATP_count = Surgery_C_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Oct_ATP_count["Percentage"] = Surgery_C_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Nov_ATP = Surgery_C_data_month_Nov[Surgery_C_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Nov_ATP_count = Surgery_C_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Nov_ATP_count["Percentage"] = Surgery_C_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Dec_ATP = Surgery_C_data_month_Dec[Surgery_C_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
Surgery_C_data_month_Dec_ATP_count = Surgery_C_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Dec_ATP_count["Percentage"] = Surgery_C_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery C by month and by moment (4) ######

Surgery_C_data_month_Jan_ATBF = Surgery_C_data_month_Jan[Surgery_C_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Jan_ATBF_count = Surgery_C_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jan_ATBF_count["Percentage"] = Surgery_C_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Feb_ATBF = Surgery_C_data_month_Feb[Surgery_C_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Feb_ATBF_count = Surgery_C_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Feb_ATBF_count["Percentage"] = Surgery_C_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Mar_ATBF = Surgery_C_data_month_Mar[Surgery_C_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Mar_ATBF_count = Surgery_C_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Mar_ATBF_count["Percentage"] = Surgery_C_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Apr_ATBF = Surgery_C_data_month_Apr[Surgery_C_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Apr_ATBF_count = Surgery_C_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Apr_ATBF_count["Percentage"] = Surgery_C_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_May_ATBF = Surgery_C_data_month_May[Surgery_C_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_May_ATBF_count = Surgery_C_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_May_ATBF_count["Percentage"] = Surgery_C_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Jun_ATBF = Surgery_C_data_month_Jun[Surgery_C_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Jun_ATBF_count = Surgery_C_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jun_ATBF_count["Percentage"] = Surgery_C_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Jul_ATBF = Surgery_C_data_month_Jul[Surgery_C_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Jul_ATBF_count = Surgery_C_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jul_ATBF_count["Percentage"] = Surgery_C_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Aug_ATBF = Surgery_C_data_month_Aug[Surgery_C_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Aug_ATBF_count = Surgery_C_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Aug_ATBF_count["Percentage"] = Surgery_C_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Sep_ATBF = Surgery_C_data_month_Sep[Surgery_C_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Sep_ATBF_count = Surgery_C_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Sep_ATBF_count["Percentage"] = Surgery_C_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Oct_ATBF = Surgery_C_data_month_Oct[Surgery_C_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Oct_ATBF_count = Surgery_C_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Oct_ATBF_count["Percentage"] = Surgery_C_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Nov_ATBF = Surgery_C_data_month_Nov[Surgery_C_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Nov_ATBF_count = Surgery_C_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Nov_ATBF_count["Percentage"] = Surgery_C_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Dec_ATBF = Surgery_C_data_month_Dec[Surgery_C_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
Surgery_C_data_month_Dec_ATBF_count = Surgery_C_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Dec_ATBF_count["Percentage"] = Surgery_C_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Surgery C by month and by moment (5) #####

Surgery_C_data_month_Jan_ATPS = Surgery_C_data_month_Jan[Surgery_C_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Jan_ATPS_count = Surgery_C_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jan_ATPS_count["Percentage"] = Surgery_C_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Feb_ATPS = Surgery_C_data_month_Feb[Surgery_C_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Feb_ATPS_count = Surgery_C_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Feb_ATPS_count["Percentage"] = Surgery_C_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Mar_ATPS = Surgery_C_data_month_Mar[Surgery_C_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Mar_ATPS_count = Surgery_C_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Mar_ATPS_count["Percentage"] = Surgery_C_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Apr_ATPS = Surgery_C_data_month_Apr[Surgery_C_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Apr_ATPS_count = Surgery_C_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Apr_ATPS_count["Percentage"] = Surgery_C_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_May_ATPS = Surgery_C_data_month_May[Surgery_C_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_May_ATPS_count = Surgery_C_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_May_ATPS_count["Percentage"] = Surgery_C_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Jun_ATPS = Surgery_C_data_month_Jun[Surgery_C_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Jun_ATPS_count = Surgery_C_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jun_ATPS_count["Percentage"] = Surgery_C_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Jul_ATPS = Surgery_C_data_month_Jul[Surgery_C_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Jul_ATPS_count = Surgery_C_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Jul_ATPS_count["Percentage"] = Surgery_C_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Aug_ATPS = Surgery_C_data_month_Aug[Surgery_C_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Aug_ATPS_count = Surgery_C_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Aug_ATPS_count["Percentage"] = Surgery_C_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Sep_ATPS = Surgery_C_data_month_Sep[Surgery_C_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Sep_ATPS_count = Surgery_C_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Sep_ATPS_count["Percentage"] = Surgery_C_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Oct_ATPS = Surgery_C_data_month_Oct[Surgery_C_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Oct_ATPS_count = Surgery_C_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Oct_ATPS_count["Percentage"] = Surgery_C_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Nov_ATPS = Surgery_C_data_month_Nov[Surgery_C_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Nov_ATPS_count = Surgery_C_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Nov_ATPS_count["Percentage"] = Surgery_C_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Surgery_C_data_month_Dec_ATPS = Surgery_C_data_month_Dec[Surgery_C_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Surgery_C_data_month_Dec_ATPS_count = Surgery_C_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Surgery_C_data_month_Dec_ATPS_count["Percentage"] = Surgery_C_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ENT ward data by month and by moment (1) #####

ENT_data_month_Jan_BTP = ENT_data_month_Jan[ENT_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Jan_BTP_count = ENT_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jan_BTP_count["Percentage"] = ENT_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Feb_BTP = ENT_data_month_Feb[ENT_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Feb_BTP_count = ENT_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Feb_BTP_count["Percentage"] = ENT_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ENT_data_month_Mar_BTP = ENT_data_month_Mar[ENT_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Mar_BTP_count = ENT_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Mar_BTP_count["Percentage"] = ENT_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Apr_BTP = ENT_data_month_Apr[ENT_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Apr_BTP_count = ENT_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Apr_BTP_count["Percentage"] = ENT_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_May_BTP = ENT_data_month_May[ENT_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_May_BTP_count = ENT_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_May_BTP_count["Percentage"] = ENT_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Jun_BTP = ENT_data_month_Jun[ENT_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Jun_BTP_count = ENT_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jun_BTP_count["Percentage"] = ENT_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Jul_BTP = ENT_data_month_Jul[ENT_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Jul_BTP_count = ENT_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jul_BTP_count["Percentage"] = ENT_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Aug_BTP = ENT_data_month_Aug[ENT_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Aug_BTP_count = ENT_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Aug_BTP_count["Percentage"] = ENT_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Sep_BTP = ENT_data_month_Sep[ENT_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Sep_BTP_count = ENT_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Sep_BTP_count["Percentage"] = ENT_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Oct_BTP = ENT_data_month_Oct[ENT_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Oct_BTP_count = ENT_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Oct_BTP_count["Percentage"] = ENT_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Nov_BTP = ENT_data_month_Nov[ENT_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Nov_BTP_count = ENT_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Nov_BTP_count["Percentage"] = ENT_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Dec_BTP = ENT_data_month_Dec[ENT_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
ENT_data_month_Dec_BTP_count = ENT_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Dec_BTP_count["Percentage"] = ENT_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ENT data by month and by moment (2) ######

ENT_data_month_Jan_BAT = ENT_data_month_Jan[ENT_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Jan_BAT_count = ENT_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jan_BAT_count["Percentage"] = ENT_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Feb_BAT = ENT_data_month_Feb[ENT_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Feb_BAT_count = ENT_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Feb_BAT_count["Percentage"] = ENT_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Mar_BAT = ENT_data_month_Mar[ENT_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Mar_BAT_count = ENT_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Mar_BAT_count["Percentage"] = ENT_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Apr_BAT = ENT_data_month_Apr[ENT_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Apr_BAT_count = ENT_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Apr_BAT_count["Percentage"] = ENT_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_May_BAT = ENT_data_month_May[ENT_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_May_BAT_count = ENT_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_May_BAT_count["Percentage"] = ENT_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Jun_BAT = ENT_data_month_Jun[ENT_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Jun_BAT_count = ENT_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jun_BAT_count["Percentage"] = ENT_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Jul_BAT = ENT_data_month_Jul[ENT_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Jul_BAT_count = ENT_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jul_BAT_count["Percentage"] = ENT_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Aug_BAT = ENT_data_month_Aug[ENT_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Aug_BAT_count = ENT_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Aug_BAT_count["Percentage"] = ENT_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Sep_BAT = ENT_data_month_Sep[ENT_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Sep_BAT_count = ENT_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Sep_BAT_count["Percentage"] = ENT_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Oct_BAT = ENT_data_month_Oct[ENT_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Oct_BAT_count = ENT_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Oct_BAT_count["Percentage"] = ENT_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Nov_BAT = ENT_data_month_Nov[ENT_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Nov_BAT_count = ENT_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Nov_BAT_count["Percentage"] = ENT_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Dec_BAT = ENT_data_month_Dec[ENT_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
ENT_data_month_Dec_BAT_count = ENT_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Dec_BAT_count["Percentage"] = ENT_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ENT data by month and by moment (3) #####

ENT_data_month_Jan_ATP = ENT_data_month_Jan[ENT_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Jan_ATP_count = ENT_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jan_ATP_count["Percentage"] = ENT_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Feb_ATP = ENT_data_month_Feb[ENT_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Feb_ATP_count = ENT_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Feb_ATP_count["Percentage"] = ENT_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ENT_data_month_Mar_ATP = ENT_data_month_Mar[ENT_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Mar_ATP_count = ENT_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Mar_ATP_count["Percentage"] = ENT_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Apr_ATP = ENT_data_month_Apr[ENT_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Apr_ATP_count = ENT_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Apr_ATP_count["Percentage"] = ENT_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_May_ATP = ENT_data_month_May[ENT_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_May_ATP_count = ENT_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_May_ATP_count["Percentage"] = ENT_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Jun_ATP = ENT_data_month_Jun[ENT_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Jun_ATP_count = ENT_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jun_ATP_count["Percentage"] = ENT_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Jul_ATP = ENT_data_month_Jul[ENT_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Jul_ATP_count = ENT_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jul_ATP_count["Percentage"] = ENT_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

ENT_data_month_Aug_ATP = ENT_data_month_Aug[ENT_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Aug_ATP_count = ENT_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Aug_ATP_count["Percentage"] = ENT_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Sep_ATP = ENT_data_month_Sep[ENT_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Sep_ATP_count = ENT_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Sep_ATP_count["Percentage"] = ENT_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Oct_ATP = ENT_data_month_Oct[ENT_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Oct_ATP_count = ENT_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Oct_ATP_count["Percentage"] = ENT_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Nov_ATP = ENT_data_month_Nov[ENT_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Nov_ATP_count = ENT_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Nov_ATP_count["Percentage"] = ENT_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Dec_ATP = ENT_data_month_Dec[ENT_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
ENT_data_month_Dec_ATP_count = ENT_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Dec_ATP_count["Percentage"] = ENT_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ENT by month and by moment (4) ######

ENT_data_month_Jan_ATBF = ENT_data_month_Jan[ENT_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Jan_ATBF_count = ENT_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jan_ATBF_count["Percentage"] = ENT_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Feb_ATBF = ENT_data_month_Feb[ENT_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Feb_ATBF_count = ENT_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Feb_ATBF_count["Percentage"] = ENT_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Mar_ATBF = ENT_data_month_Mar[ENT_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Mar_ATBF_count = ENT_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Mar_ATBF_count["Percentage"] = ENT_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Apr_ATBF = ENT_data_month_Apr[ENT_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Apr_ATBF_count = ENT_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Apr_ATBF_count["Percentage"] = ENT_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_May_ATBF = ENT_data_month_May[ENT_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_May_ATBF_count = ENT_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_May_ATBF_count["Percentage"] = ENT_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Jun_ATBF = ENT_data_month_Jun[ENT_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Jun_ATBF_count = ENT_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jun_ATBF_count["Percentage"] = ENT_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Jul_ATBF = ENT_data_month_Jul[ENT_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Jul_ATBF_count = ENT_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jul_ATBF_count["Percentage"] = ENT_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Aug_ATBF = ENT_data_month_Aug[ENT_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Aug_ATBF_count = ENT_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Aug_ATBF_count["Percentage"] = ENT_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Sep_ATBF = ENT_data_month_Sep[ENT_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Sep_ATBF_count = ENT_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Sep_ATBF_count["Percentage"] = ENT_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Oct_ATBF = ENT_data_month_Oct[ENT_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Oct_ATBF_count = ENT_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Oct_ATBF_count["Percentage"] = ENT_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Nov_ATBF = ENT_data_month_Nov[ENT_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Nov_ATBF_count = ENT_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Nov_ATBF_count["Percentage"] = ENT_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Dec_ATBF = ENT_data_month_Dec[ENT_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
ENT_data_month_Dec_ATBF_count = ENT_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Dec_ATBF_count["Percentage"] = ENT_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#ENT by month and by moment (5) #####

ENT_data_month_Jan_ATPS = ENT_data_month_Jan[ENT_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Jan_ATPS_count = ENT_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jan_ATPS_count["Percentage"] = ENT_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Feb_ATPS = ENT_data_month_Feb[ENT_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Feb_ATPS_count = ENT_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Feb_ATPS_count["Percentage"] = ENT_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Mar_ATPS = ENT_data_month_Mar[ENT_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Mar_ATPS_count = ENT_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Mar_ATPS_count["Percentage"] = ENT_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Apr_ATPS = ENT_data_month_Apr[ENT_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Apr_ATPS_count = ENT_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Apr_ATPS_count["Percentage"] = ENT_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_May_ATPS = ENT_data_month_May[ENT_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_May_ATPS_count = ENT_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_May_ATPS_count["Percentage"] = ENT_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Jun_ATPS = ENT_data_month_Jun[ENT_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Jun_ATPS_count = ENT_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jun_ATPS_count["Percentage"] = ENT_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Jul_ATPS = ENT_data_month_Jul[ENT_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Jul_ATPS_count = ENT_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Jul_ATPS_count["Percentage"] = ENT_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Aug_ATPS = ENT_data_month_Aug[ENT_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Aug_ATPS_count = ENT_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Aug_ATPS_count["Percentage"] = ENT_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Sep_ATPS = ENT_data_month_Sep[ENT_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Sep_ATPS_count = ENT_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Sep_ATPS_count["Percentage"] = ENT_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Oct_ATPS = ENT_data_month_Oct[ENT_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Oct_ATPS_count = ENT_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Oct_ATPS_count["Percentage"] = ENT_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Nov_ATPS = ENT_data_month_Nov[ENT_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Nov_ATPS_count = ENT_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Nov_ATPS_count["Percentage"] = ENT_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

ENT_data_month_Dec_ATPS = ENT_data_month_Dec[ENT_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
ENT_data_month_Dec_ATPS_count = ENT_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
ENT_data_month_Dec_ATPS_count["Percentage"] = ENT_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#OB-GYN ward data by month and by moment (1) #####

OB_GYN_data_month_Jan_BTP = OB_GYN_data_month_Jan[OB_GYN_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Jan_BTP_count = OB_GYN_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jan_BTP_count["Percentage"] = OB_GYN_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Feb_BTP = OB_GYN_data_month_Feb[OB_GYN_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Feb_BTP_count = OB_GYN_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Feb_BTP_count["Percentage"] = OB_GYN_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

OB_GYN_data_month_Mar_BTP = OB_GYN_data_month_Mar[OB_GYN_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Mar_BTP_count = OB_GYN_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Mar_BTP_count["Percentage"] = OB_GYN_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Apr_BTP = OB_GYN_data_month_Apr[OB_GYN_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Apr_BTP_count = OB_GYN_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Apr_BTP_count["Percentage"] = OB_GYN_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_May_BTP = OB_GYN_data_month_May[OB_GYN_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_May_BTP_count = OB_GYN_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_May_BTP_count["Percentage"] = OB_GYN_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Jun_BTP = OB_GYN_data_month_Jun[OB_GYN_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Jun_BTP_count = OB_GYN_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jun_BTP_count["Percentage"] = OB_GYN_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Jul_BTP = OB_GYN_data_month_Jul[OB_GYN_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Jul_BTP_count = OB_GYN_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jul_BTP_count["Percentage"] = OB_GYN_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Aug_BTP = OB_GYN_data_month_Aug[OB_GYN_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Aug_BTP_count = OB_GYN_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Aug_BTP_count["Percentage"] = OB_GYN_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Sep_BTP = OB_GYN_data_month_Sep[OB_GYN_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Sep_BTP_count = OB_GYN_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Sep_BTP_count["Percentage"] = OB_GYN_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Oct_BTP = OB_GYN_data_month_Oct[OB_GYN_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Oct_BTP_count = OB_GYN_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Oct_BTP_count["Percentage"] = OB_GYN_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Nov_BTP = OB_GYN_data_month_Nov[OB_GYN_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Nov_BTP_count = OB_GYN_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Nov_BTP_count["Percentage"] = OB_GYN_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Dec_BTP = OB_GYN_data_month_Dec[OB_GYN_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
OB_GYN_data_month_Dec_BTP_count = OB_GYN_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Dec_BTP_count["Percentage"] = OB_GYN_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#OB-GYN data by month and by moment (2) ######

OB_GYN_data_month_Jan_BAT = OB_GYN_data_month_Jan[OB_GYN_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Jan_BAT_count = OB_GYN_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jan_BAT_count["Percentage"] = OB_GYN_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Feb_BAT = OB_GYN_data_month_Feb[OB_GYN_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Feb_BAT_count = OB_GYN_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Feb_BAT_count["Percentage"] = OB_GYN_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Mar_BAT = OB_GYN_data_month_Mar[OB_GYN_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Mar_BAT_count = OB_GYN_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Mar_BAT_count["Percentage"] = OB_GYN_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Apr_BAT = OB_GYN_data_month_Apr[OB_GYN_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Apr_BAT_count = OB_GYN_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Apr_BAT_count["Percentage"] = OB_GYN_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_May_BAT = OB_GYN_data_month_May[OB_GYN_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_May_BAT_count = OB_GYN_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_May_BAT_count["Percentage"] = OB_GYN_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Jun_BAT = OB_GYN_data_month_Jun[OB_GYN_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Jun_BAT_count = OB_GYN_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jun_BAT_count["Percentage"] = OB_GYN_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Jul_BAT = OB_GYN_data_month_Jul[OB_GYN_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Jul_BAT_count = OB_GYN_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jul_BAT_count["Percentage"] = OB_GYN_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Aug_BAT = OB_GYN_data_month_Aug[OB_GYN_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Aug_BAT_count = OB_GYN_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Aug_BAT_count["Percentage"] = OB_GYN_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Sep_BAT = OB_GYN_data_month_Sep[OB_GYN_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Sep_BAT_count = OB_GYN_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Sep_BAT_count["Percentage"] = OB_GYN_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Oct_BAT = OB_GYN_data_month_Oct[OB_GYN_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Oct_BAT_count = OB_GYN_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Oct_BAT_count["Percentage"] = OB_GYN_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Nov_BAT = OB_GYN_data_month_Nov[OB_GYN_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Nov_BAT_count = OB_GYN_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Nov_BAT_count["Percentage"] = OB_GYN_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Dec_BAT = OB_GYN_data_month_Dec[OB_GYN_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
OB_GYN_data_month_Dec_BAT_count = OB_GYN_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Dec_BAT_count["Percentage"] = OB_GYN_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#OB-GYN data by month and by moment (3) #####

OB_GYN_data_month_Jan_ATP = OB_GYN_data_month_Jan[OB_GYN_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Jan_ATP_count = OB_GYN_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jan_ATP_count["Percentage"] = OB_GYN_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Feb_ATP = OB_GYN_data_month_Feb[OB_GYN_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Feb_ATP_count = OB_GYN_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Feb_ATP_count["Percentage"] = OB_GYN_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

OB_GYN_data_month_Mar_ATP = OB_GYN_data_month_Mar[OB_GYN_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Mar_ATP_count = OB_GYN_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Mar_ATP_count["Percentage"] = OB_GYN_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Apr_ATP = OB_GYN_data_month_Apr[OB_GYN_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Apr_ATP_count = OB_GYN_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Apr_ATP_count["Percentage"] = OB_GYN_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_May_ATP = OB_GYN_data_month_May[OB_GYN_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_May_ATP_count = OB_GYN_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_May_ATP_count["Percentage"] = OB_GYN_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Jun_ATP = OB_GYN_data_month_Jun[OB_GYN_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Jun_ATP_count = OB_GYN_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jun_ATP_count["Percentage"] = OB_GYN_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Jul_ATP = OB_GYN_data_month_Jul[OB_GYN_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Jul_ATP_count = OB_GYN_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jul_ATP_count["Percentage"] = OB_GYN_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

OB_GYN_data_month_Aug_ATP = OB_GYN_data_month_Aug[OB_GYN_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Aug_ATP_count = OB_GYN_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Aug_ATP_count["Percentage"] = OB_GYN_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Sep_ATP = OB_GYN_data_month_Sep[OB_GYN_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Sep_ATP_count = OB_GYN_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Sep_ATP_count["Percentage"] = OB_GYN_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Oct_ATP = OB_GYN_data_month_Oct[OB_GYN_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Oct_ATP_count = OB_GYN_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Oct_ATP_count["Percentage"] = OB_GYN_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Nov_ATP = OB_GYN_data_month_Nov[OB_GYN_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Nov_ATP_count = OB_GYN_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Nov_ATP_count["Percentage"] = OB_GYN_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Dec_ATP = OB_GYN_data_month_Dec[OB_GYN_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
OB_GYN_data_month_Dec_ATP_count = OB_GYN_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Dec_ATP_count["Percentage"] = OB_GYN_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#OB-GYN by month and by moment (4) ######

OB_GYN_data_month_Jan_ATBF = OB_GYN_data_month_Jan[OB_GYN_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Jan_ATBF_count = OB_GYN_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jan_ATBF_count["Percentage"] = OB_GYN_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Feb_ATBF = OB_GYN_data_month_Feb[OB_GYN_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Feb_ATBF_count = OB_GYN_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Feb_ATBF_count["Percentage"] = OB_GYN_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Mar_ATBF = OB_GYN_data_month_Mar[OB_GYN_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Mar_ATBF_count = OB_GYN_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Mar_ATBF_count["Percentage"] = OB_GYN_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Apr_ATBF = OB_GYN_data_month_Apr[OB_GYN_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Apr_ATBF_count = OB_GYN_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Apr_ATBF_count["Percentage"] = OB_GYN_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_May_ATBF = OB_GYN_data_month_May[OB_GYN_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_May_ATBF_count = OB_GYN_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_May_ATBF_count["Percentage"] = OB_GYN_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Jun_ATBF = OB_GYN_data_month_Jun[OB_GYN_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Jun_ATBF_count = OB_GYN_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jun_ATBF_count["Percentage"] = OB_GYN_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Jul_ATBF = OB_GYN_data_month_Jul[OB_GYN_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Jul_ATBF_count = OB_GYN_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jul_ATBF_count["Percentage"] = OB_GYN_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Aug_ATBF = OB_GYN_data_month_Aug[OB_GYN_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Aug_ATBF_count = OB_GYN_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Aug_ATBF_count["Percentage"] = OB_GYN_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Sep_ATBF = OB_GYN_data_month_Sep[OB_GYN_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Sep_ATBF_count = OB_GYN_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Sep_ATBF_count["Percentage"] = OB_GYN_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Oct_ATBF = OB_GYN_data_month_Oct[OB_GYN_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Oct_ATBF_count = OB_GYN_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Oct_ATBF_count["Percentage"] = OB_GYN_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Nov_ATBF = OB_GYN_data_month_Nov[OB_GYN_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Nov_ATBF_count = OB_GYN_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Nov_ATBF_count["Percentage"] = OB_GYN_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Dec_ATBF = OB_GYN_data_month_Dec[OB_GYN_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
OB_GYN_data_month_Dec_ATBF_count = OB_GYN_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Dec_ATBF_count["Percentage"] = OB_GYN_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#OB-GYN by month and by moment (5) #####

OB_GYN_data_month_Jan_ATPS = OB_GYN_data_month_Jan[OB_GYN_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Jan_ATPS_count = OB_GYN_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jan_ATPS_count["Percentage"] = OB_GYN_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Feb_ATPS = OB_GYN_data_month_Feb[OB_GYN_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Feb_ATPS_count = OB_GYN_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Feb_ATPS_count["Percentage"] = OB_GYN_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Mar_ATPS = OB_GYN_data_month_Mar[OB_GYN_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Mar_ATPS_count = OB_GYN_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Mar_ATPS_count["Percentage"] = OB_GYN_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Apr_ATPS = OB_GYN_data_month_Apr[OB_GYN_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Apr_ATPS_count = OB_GYN_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Apr_ATPS_count["Percentage"] = OB_GYN_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_May_ATPS = OB_GYN_data_month_May[OB_GYN_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_May_ATPS_count = OB_GYN_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_May_ATPS_count["Percentage"] = OB_GYN_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Jun_ATPS = OB_GYN_data_month_Jun[OB_GYN_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Jun_ATPS_count = OB_GYN_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jun_ATPS_count["Percentage"] = OB_GYN_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Jul_ATPS = OB_GYN_data_month_Jul[OB_GYN_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Jul_ATPS_count = OB_GYN_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Jul_ATPS_count["Percentage"] = OB_GYN_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Aug_ATPS = OB_GYN_data_month_Aug[OB_GYN_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Aug_ATPS_count = OB_GYN_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Aug_ATPS_count["Percentage"] = OB_GYN_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Sep_ATPS = OB_GYN_data_month_Sep[OB_GYN_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Sep_ATPS_count = OB_GYN_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Sep_ATPS_count["Percentage"] = OB_GYN_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Oct_ATPS = OB_GYN_data_month_Oct[OB_GYN_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Oct_ATPS_count = OB_GYN_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Oct_ATPS_count["Percentage"] = OB_GYN_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Nov_ATPS = OB_GYN_data_month_Nov[OB_GYN_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Nov_ATPS_count = OB_GYN_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Nov_ATPS_count["Percentage"] = OB_GYN_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

OB_GYN_data_month_Dec_ATPS = OB_GYN_data_month_Dec[OB_GYN_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
OB_GYN_data_month_Dec_ATPS_count = OB_GYN_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
OB_GYN_data_month_Dec_ATPS_count["Percentage"] = OB_GYN_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Pediatric ward data by month and by moment (1) #####

Pediatric_data_month_Jan_BTP = Pediatric_data_month_Jan[Pediatric_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Jan_BTP_count = Pediatric_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jan_BTP_count["Percentage"] = Pediatric_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Feb_BTP = Pediatric_data_month_Feb[Pediatric_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Feb_BTP_count = Pediatric_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Feb_BTP_count["Percentage"] = Pediatric_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Pediatric_data_month_Mar_BTP = Pediatric_data_month_Mar[Pediatric_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Mar_BTP_count = Pediatric_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Mar_BTP_count["Percentage"] = Pediatric_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Apr_BTP = Pediatric_data_month_Apr[Pediatric_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Apr_BTP_count = Pediatric_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Apr_BTP_count["Percentage"] = Pediatric_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_May_BTP = Pediatric_data_month_May[Pediatric_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_May_BTP_count = Pediatric_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_May_BTP_count["Percentage"] = Pediatric_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Jun_BTP = Pediatric_data_month_Jun[Pediatric_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Jun_BTP_count = Pediatric_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jun_BTP_count["Percentage"] = Pediatric_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Jul_BTP = Pediatric_data_month_Jul[Pediatric_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Jul_BTP_count = Pediatric_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jul_BTP_count["Percentage"] = Pediatric_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Aug_BTP = Pediatric_data_month_Aug[Pediatric_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Aug_BTP_count = Pediatric_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Aug_BTP_count["Percentage"] = Pediatric_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Sep_BTP = Pediatric_data_month_Sep[Pediatric_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Sep_BTP_count = Pediatric_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Sep_BTP_count["Percentage"] = Pediatric_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Oct_BTP = Pediatric_data_month_Oct[Pediatric_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Oct_BTP_count = Pediatric_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Oct_BTP_count["Percentage"] = Pediatric_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Nov_BTP = Pediatric_data_month_Nov[Pediatric_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Nov_BTP_count = Pediatric_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Nov_BTP_count["Percentage"] = Pediatric_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Dec_BTP = Pediatric_data_month_Dec[Pediatric_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
Pediatric_data_month_Dec_BTP_count = Pediatric_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Dec_BTP_count["Percentage"] = Pediatric_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Pediatric data by month and by moment (2) ######

Pediatric_data_month_Jan_BAT = Pediatric_data_month_Jan[Pediatric_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Jan_BAT_count = Pediatric_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jan_BAT_count["Percentage"] = Pediatric_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Feb_BAT = Pediatric_data_month_Feb[Pediatric_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Feb_BAT_count = Pediatric_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Feb_BAT_count["Percentage"] = Pediatric_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Mar_BAT = Pediatric_data_month_Mar[Pediatric_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Mar_BAT_count = Pediatric_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Mar_BAT_count["Percentage"] = Pediatric_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Apr_BAT = Pediatric_data_month_Apr[Pediatric_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Apr_BAT_count = Pediatric_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Apr_BAT_count["Percentage"] = Pediatric_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_May_BAT = Pediatric_data_month_May[Pediatric_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_May_BAT_count = Pediatric_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_May_BAT_count["Percentage"] = Pediatric_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Jun_BAT = Pediatric_data_month_Jun[Pediatric_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Jun_BAT_count = Pediatric_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jun_BAT_count["Percentage"] = Pediatric_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Jul_BAT = Pediatric_data_month_Jul[Pediatric_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Jul_BAT_count = Pediatric_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jul_BAT_count["Percentage"] = Pediatric_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Aug_BAT = Pediatric_data_month_Aug[Pediatric_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Aug_BAT_count = Pediatric_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Aug_BAT_count["Percentage"] = Pediatric_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Sep_BAT = Pediatric_data_month_Sep[Pediatric_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Sep_BAT_count = Pediatric_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Sep_BAT_count["Percentage"] = Pediatric_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Oct_BAT = Pediatric_data_month_Oct[Pediatric_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Oct_BAT_count = Pediatric_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Oct_BAT_count["Percentage"] = Pediatric_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Nov_BAT = Pediatric_data_month_Nov[Pediatric_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Nov_BAT_count = Pediatric_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Nov_BAT_count["Percentage"] = Pediatric_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Dec_BAT = Pediatric_data_month_Dec[Pediatric_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
Pediatric_data_month_Dec_BAT_count = Pediatric_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Dec_BAT_count["Percentage"] = Pediatric_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Pediatric data by month and by moment (3) #####

Pediatric_data_month_Jan_ATP = Pediatric_data_month_Jan[Pediatric_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Jan_ATP_count = Pediatric_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jan_ATP_count["Percentage"] = Pediatric_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Feb_ATP = Pediatric_data_month_Feb[Pediatric_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Feb_ATP_count = Pediatric_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Feb_ATP_count["Percentage"] = Pediatric_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Pediatric_data_month_Mar_ATP = Pediatric_data_month_Mar[Pediatric_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Mar_ATP_count = Pediatric_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Mar_ATP_count["Percentage"] = Pediatric_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Apr_ATP = Pediatric_data_month_Apr[Pediatric_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Apr_ATP_count = Pediatric_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Apr_ATP_count["Percentage"] = Pediatric_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_May_ATP = Pediatric_data_month_May[Pediatric_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_May_ATP_count = Pediatric_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_May_ATP_count["Percentage"] = Pediatric_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Jun_ATP = Pediatric_data_month_Jun[Pediatric_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Jun_ATP_count = Pediatric_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jun_ATP_count["Percentage"] = Pediatric_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Jul_ATP = Pediatric_data_month_Jul[Pediatric_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Jul_ATP_count = Pediatric_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jul_ATP_count["Percentage"] = Pediatric_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Pediatric_data_month_Aug_ATP = Pediatric_data_month_Aug[Pediatric_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Aug_ATP_count = Pediatric_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Aug_ATP_count["Percentage"] = Pediatric_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Sep_ATP = Pediatric_data_month_Sep[Pediatric_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Sep_ATP_count = Pediatric_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Sep_ATP_count["Percentage"] = Pediatric_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Oct_ATP = Pediatric_data_month_Oct[Pediatric_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Oct_ATP_count = Pediatric_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Oct_ATP_count["Percentage"] = Pediatric_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Nov_ATP = Pediatric_data_month_Nov[Pediatric_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Nov_ATP_count = Pediatric_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Nov_ATP_count["Percentage"] = Pediatric_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Dec_ATP = Pediatric_data_month_Dec[Pediatric_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
Pediatric_data_month_Dec_ATP_count = Pediatric_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Dec_ATP_count["Percentage"] = Pediatric_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Pediatric by month and by moment (4) ######

Pediatric_data_month_Jan_ATBF = Pediatric_data_month_Jan[Pediatric_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Jan_ATBF_count = Pediatric_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jan_ATBF_count["Percentage"] = Pediatric_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Feb_ATBF = Pediatric_data_month_Feb[Pediatric_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Feb_ATBF_count = Pediatric_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Feb_ATBF_count["Percentage"] = Pediatric_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Mar_ATBF = Pediatric_data_month_Mar[Pediatric_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Mar_ATBF_count = Pediatric_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Mar_ATBF_count["Percentage"] = Pediatric_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Apr_ATBF = Pediatric_data_month_Apr[Pediatric_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Apr_ATBF_count = Pediatric_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Apr_ATBF_count["Percentage"] = Pediatric_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_May_ATBF = Pediatric_data_month_May[Pediatric_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_May_ATBF_count = Pediatric_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_May_ATBF_count["Percentage"] = Pediatric_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Jun_ATBF = Pediatric_data_month_Jun[Pediatric_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Jun_ATBF_count = Pediatric_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jun_ATBF_count["Percentage"] = Pediatric_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Jul_ATBF = Pediatric_data_month_Jul[Pediatric_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Jul_ATBF_count = Pediatric_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jul_ATBF_count["Percentage"] = Pediatric_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Aug_ATBF = Pediatric_data_month_Aug[Pediatric_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Aug_ATBF_count = Pediatric_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Aug_ATBF_count["Percentage"] = Pediatric_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Sep_ATBF = Pediatric_data_month_Sep[Pediatric_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Sep_ATBF_count = Pediatric_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Sep_ATBF_count["Percentage"] = Pediatric_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Oct_ATBF = Pediatric_data_month_Oct[Pediatric_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Oct_ATBF_count = Pediatric_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Oct_ATBF_count["Percentage"] = Pediatric_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Nov_ATBF = Pediatric_data_month_Nov[Pediatric_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Nov_ATBF_count = Pediatric_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Nov_ATBF_count["Percentage"] = Pediatric_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Dec_ATBF = Pediatric_data_month_Dec[Pediatric_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
Pediatric_data_month_Dec_ATBF_count = Pediatric_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Dec_ATBF_count["Percentage"] = Pediatric_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Pediatric by month and by moment (5) #####

Pediatric_data_month_Jan_ATPS = Pediatric_data_month_Jan[Pediatric_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Jan_ATPS_count = Pediatric_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jan_ATPS_count["Percentage"] = Pediatric_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Feb_ATPS = Pediatric_data_month_Feb[Pediatric_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Feb_ATPS_count = Pediatric_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Feb_ATPS_count["Percentage"] = Pediatric_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Mar_ATPS = Pediatric_data_month_Mar[Pediatric_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Mar_ATPS_count = Pediatric_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Mar_ATPS_count["Percentage"] = Pediatric_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Apr_ATPS = Pediatric_data_month_Apr[Pediatric_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Apr_ATPS_count = Pediatric_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Apr_ATPS_count["Percentage"] = Pediatric_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_May_ATPS = Pediatric_data_month_May[Pediatric_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_May_ATPS_count = Pediatric_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_May_ATPS_count["Percentage"] = Pediatric_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Jun_ATPS = Pediatric_data_month_Jun[Pediatric_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Jun_ATPS_count = Pediatric_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jun_ATPS_count["Percentage"] = Pediatric_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Jul_ATPS = Pediatric_data_month_Jul[Pediatric_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Jul_ATPS_count = Pediatric_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Jul_ATPS_count["Percentage"] = Pediatric_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Aug_ATPS = Pediatric_data_month_Aug[Pediatric_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Aug_ATPS_count = Pediatric_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Aug_ATPS_count["Percentage"] = Pediatric_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Sep_ATPS = Pediatric_data_month_Sep[Pediatric_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Sep_ATPS_count = Pediatric_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Sep_ATPS_count["Percentage"] = Pediatric_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Oct_ATPS = Pediatric_data_month_Oct[Pediatric_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Oct_ATPS_count = Pediatric_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Oct_ATPS_count["Percentage"] = Pediatric_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Nov_ATPS = Pediatric_data_month_Nov[Pediatric_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Nov_ATPS_count = Pediatric_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Nov_ATPS_count["Percentage"] = Pediatric_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Pediatric_data_month_Dec_ATPS = Pediatric_data_month_Dec[Pediatric_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Pediatric_data_month_Dec_ATPS_count = Pediatric_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Pediatric_data_month_Dec_ATPS_count["Percentage"] = Pediatric_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Ophtalmology ward data by month and by moment (1) #####

Ophtalmology_data_month_Jan_BTP = Ophtalmology_data_month_Jan[Ophtalmology_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Jan_BTP_count = Ophtalmology_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jan_BTP_count["Percentage"] = Ophtalmology_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Feb_BTP = Ophtalmology_data_month_Feb[Ophtalmology_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Feb_BTP_count = Ophtalmology_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Feb_BTP_count["Percentage"] = Ophtalmology_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Ophtalmology_data_month_Mar_BTP = Ophtalmology_data_month_Mar[Ophtalmology_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Mar_BTP_count = Ophtalmology_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Mar_BTP_count["Percentage"] = Ophtalmology_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Apr_BTP = Ophtalmology_data_month_Apr[Ophtalmology_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Apr_BTP_count = Ophtalmology_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Apr_BTP_count["Percentage"] = Ophtalmology_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_May_BTP = Ophtalmology_data_month_May[Ophtalmology_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_May_BTP_count = Ophtalmology_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_May_BTP_count["Percentage"] = Ophtalmology_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Jun_BTP = Ophtalmology_data_month_Jun[Ophtalmology_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Jun_BTP_count = Ophtalmology_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jun_BTP_count["Percentage"] = Ophtalmology_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Jul_BTP = Ophtalmology_data_month_Jul[Ophtalmology_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Jul_BTP_count = Ophtalmology_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jul_BTP_count["Percentage"] = Ophtalmology_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Aug_BTP = Ophtalmology_data_month_Aug[Ophtalmology_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Aug_BTP_count = Ophtalmology_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Aug_BTP_count["Percentage"] = Ophtalmology_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Sep_BTP = Ophtalmology_data_month_Sep[Ophtalmology_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Sep_BTP_count = Ophtalmology_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Sep_BTP_count["Percentage"] = Ophtalmology_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Oct_BTP = Ophtalmology_data_month_Oct[Ophtalmology_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Oct_BTP_count = Ophtalmology_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Oct_BTP_count["Percentage"] = Ophtalmology_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Nov_BTP = Ophtalmology_data_month_Nov[Ophtalmology_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Nov_BTP_count = Ophtalmology_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Nov_BTP_count["Percentage"] = Ophtalmology_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Dec_BTP = Ophtalmology_data_month_Dec[Ophtalmology_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
Ophtalmology_data_month_Dec_BTP_count = Ophtalmology_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Dec_BTP_count["Percentage"] = Ophtalmology_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Ophtalmology data by month and by moment (2) ######

Ophtalmology_data_month_Jan_BAT = Ophtalmology_data_month_Jan[Ophtalmology_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Jan_BAT_count = Ophtalmology_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jan_BAT_count["Percentage"] = Ophtalmology_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Feb_BAT = Ophtalmology_data_month_Feb[Ophtalmology_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Feb_BAT_count = Ophtalmology_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Feb_BAT_count["Percentage"] = Ophtalmology_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Mar_BAT = Ophtalmology_data_month_Mar[Ophtalmology_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Mar_BAT_count = Ophtalmology_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Mar_BAT_count["Percentage"] = Ophtalmology_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Apr_BAT = Ophtalmology_data_month_Apr[Ophtalmology_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Apr_BAT_count = Ophtalmology_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Apr_BAT_count["Percentage"] = Ophtalmology_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_May_BAT = Ophtalmology_data_month_May[Ophtalmology_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_May_BAT_count = Ophtalmology_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_May_BAT_count["Percentage"] = Ophtalmology_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Jun_BAT = Ophtalmology_data_month_Jun[Ophtalmology_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Jun_BAT_count = Ophtalmology_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jun_BAT_count["Percentage"] = Ophtalmology_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Jul_BAT = Ophtalmology_data_month_Jul[Ophtalmology_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Jul_BAT_count = Ophtalmology_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jul_BAT_count["Percentage"] = Ophtalmology_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Aug_BAT = Ophtalmology_data_month_Aug[Ophtalmology_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Aug_BAT_count = Ophtalmology_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Aug_BAT_count["Percentage"] = Ophtalmology_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Sep_BAT = Ophtalmology_data_month_Sep[Ophtalmology_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Sep_BAT_count = Ophtalmology_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Sep_BAT_count["Percentage"] = Ophtalmology_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Oct_BAT = Ophtalmology_data_month_Oct[Ophtalmology_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Oct_BAT_count = Ophtalmology_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Oct_BAT_count["Percentage"] = Ophtalmology_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Nov_BAT = Ophtalmology_data_month_Nov[Ophtalmology_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Nov_BAT_count = Ophtalmology_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Nov_BAT_count["Percentage"] = Ophtalmology_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Dec_BAT = Ophtalmology_data_month_Dec[Ophtalmology_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
Ophtalmology_data_month_Dec_BAT_count = Ophtalmology_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Dec_BAT_count["Percentage"] = Ophtalmology_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Ophtalmology data by month and by moment (3) #####

Ophtalmology_data_month_Jan_ATP = Ophtalmology_data_month_Jan[Ophtalmology_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Jan_ATP_count = Ophtalmology_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jan_ATP_count["Percentage"] = Ophtalmology_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Feb_ATP = Ophtalmology_data_month_Feb[Ophtalmology_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Feb_ATP_count = Ophtalmology_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Feb_ATP_count["Percentage"] = Ophtalmology_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Ophtalmology_data_month_Mar_ATP = Ophtalmology_data_month_Mar[Ophtalmology_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Mar_ATP_count = Ophtalmology_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Mar_ATP_count["Percentage"] = Ophtalmology_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Apr_ATP = Ophtalmology_data_month_Apr[Ophtalmology_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Apr_ATP_count = Ophtalmology_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Apr_ATP_count["Percentage"] = Ophtalmology_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_May_ATP = Ophtalmology_data_month_May[Ophtalmology_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_May_ATP_count = Ophtalmology_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_May_ATP_count["Percentage"] = Ophtalmology_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Jun_ATP = Ophtalmology_data_month_Jun[Ophtalmology_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Jun_ATP_count = Ophtalmology_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jun_ATP_count["Percentage"] = Ophtalmology_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Jul_ATP = Ophtalmology_data_month_Jul[Ophtalmology_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Jul_ATP_count = Ophtalmology_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jul_ATP_count["Percentage"] = Ophtalmology_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Ophtalmology_data_month_Aug_ATP = Ophtalmology_data_month_Aug[Ophtalmology_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Aug_ATP_count = Ophtalmology_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Aug_ATP_count["Percentage"] = Ophtalmology_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Sep_ATP = Ophtalmology_data_month_Sep[Ophtalmology_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Sep_ATP_count = Ophtalmology_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Sep_ATP_count["Percentage"] = Ophtalmology_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Oct_ATP = Ophtalmology_data_month_Oct[Ophtalmology_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Oct_ATP_count = Ophtalmology_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Oct_ATP_count["Percentage"] = Ophtalmology_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Nov_ATP = Ophtalmology_data_month_Nov[Ophtalmology_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Nov_ATP_count = Ophtalmology_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Nov_ATP_count["Percentage"] = Ophtalmology_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Dec_ATP = Ophtalmology_data_month_Dec[Ophtalmology_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
Ophtalmology_data_month_Dec_ATP_count = Ophtalmology_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Dec_ATP_count["Percentage"] = Ophtalmology_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Ophtalmology by month and by moment (4) ######

Ophtalmology_data_month_Jan_ATBF = Ophtalmology_data_month_Jan[Ophtalmology_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Jan_ATBF_count = Ophtalmology_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jan_ATBF_count["Percentage"] = Ophtalmology_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Feb_ATBF = Ophtalmology_data_month_Feb[Ophtalmology_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Feb_ATBF_count = Ophtalmology_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Feb_ATBF_count["Percentage"] = Ophtalmology_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Mar_ATBF = Ophtalmology_data_month_Mar[Ophtalmology_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Mar_ATBF_count = Ophtalmology_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Mar_ATBF_count["Percentage"] = Ophtalmology_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Apr_ATBF = Ophtalmology_data_month_Apr[Ophtalmology_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Apr_ATBF_count = Ophtalmology_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Apr_ATBF_count["Percentage"] = Ophtalmology_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_May_ATBF = Ophtalmology_data_month_May[Ophtalmology_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_May_ATBF_count = Ophtalmology_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_May_ATBF_count["Percentage"] = Ophtalmology_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Jun_ATBF = Ophtalmology_data_month_Jun[Ophtalmology_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Jun_ATBF_count = Ophtalmology_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jun_ATBF_count["Percentage"] = Ophtalmology_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Jul_ATBF = Ophtalmology_data_month_Jul[Ophtalmology_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Jul_ATBF_count = Ophtalmology_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jul_ATBF_count["Percentage"] = Ophtalmology_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Aug_ATBF = Ophtalmology_data_month_Aug[Ophtalmology_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Aug_ATBF_count = Ophtalmology_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Aug_ATBF_count["Percentage"] = Ophtalmology_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Sep_ATBF = Ophtalmology_data_month_Sep[Ophtalmology_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Sep_ATBF_count = Ophtalmology_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Sep_ATBF_count["Percentage"] = Ophtalmology_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Oct_ATBF = Ophtalmology_data_month_Oct[Ophtalmology_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Oct_ATBF_count = Ophtalmology_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Oct_ATBF_count["Percentage"] = Ophtalmology_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Nov_ATBF = Ophtalmology_data_month_Nov[Ophtalmology_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Nov_ATBF_count = Ophtalmology_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Nov_ATBF_count["Percentage"] = Ophtalmology_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Dec_ATBF = Ophtalmology_data_month_Dec[Ophtalmology_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
Ophtalmology_data_month_Dec_ATBF_count = Ophtalmology_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Dec_ATBF_count["Percentage"] = Ophtalmology_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Ophtalmology by month and by moment (5) #####

Ophtalmology_data_month_Jan_ATPS = Ophtalmology_data_month_Jan[Ophtalmology_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Jan_ATPS_count = Ophtalmology_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jan_ATPS_count["Percentage"] = Ophtalmology_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Feb_ATPS = Ophtalmology_data_month_Feb[Ophtalmology_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Feb_ATPS_count = Ophtalmology_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Feb_ATPS_count["Percentage"] = Ophtalmology_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Mar_ATPS = Ophtalmology_data_month_Mar[Ophtalmology_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Mar_ATPS_count = Ophtalmology_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Mar_ATPS_count["Percentage"] = Ophtalmology_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Apr_ATPS = Ophtalmology_data_month_Apr[Ophtalmology_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Apr_ATPS_count = Ophtalmology_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Apr_ATPS_count["Percentage"] = Ophtalmology_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_May_ATPS = Ophtalmology_data_month_May[Ophtalmology_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_May_ATPS_count = Ophtalmology_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_May_ATPS_count["Percentage"] = Ophtalmology_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Jun_ATPS = Ophtalmology_data_month_Jun[Ophtalmology_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Jun_ATPS_count = Ophtalmology_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jun_ATPS_count["Percentage"] = Ophtalmology_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Jul_ATPS = Ophtalmology_data_month_Jul[Ophtalmology_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Jul_ATPS_count = Ophtalmology_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Jul_ATPS_count["Percentage"] = Ophtalmology_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Aug_ATPS = Ophtalmology_data_month_Aug[Ophtalmology_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Aug_ATPS_count = Ophtalmology_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Aug_ATPS_count["Percentage"] = Ophtalmology_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Sep_ATPS = Ophtalmology_data_month_Sep[Ophtalmology_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Sep_ATPS_count = Ophtalmology_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Sep_ATPS_count["Percentage"] = Ophtalmology_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Oct_ATPS = Ophtalmology_data_month_Oct[Ophtalmology_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Oct_ATPS_count = Ophtalmology_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Oct_ATPS_count["Percentage"] = Ophtalmology_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Nov_ATPS = Ophtalmology_data_month_Nov[Ophtalmology_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Nov_ATPS_count = Ophtalmology_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Nov_ATPS_count["Percentage"] = Ophtalmology_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Ophtalmology_data_month_Dec_ATPS = Ophtalmology_data_month_Dec[Ophtalmology_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Ophtalmology_data_month_Dec_ATPS_count = Ophtalmology_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Ophtalmology_data_month_Dec_ATPS_count["Percentage"] = Ophtalmology_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Total ward data by month and by moment (1) #####

Total_data_month_Jan_BTP = Total_data_month_Jan[Total_data_month_Jan["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Jan_BTP_count = Total_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jan_BTP_count["Percentage"] = Total_data_month_Jan_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Feb_BTP = Total_data_month_Feb[Total_data_month_Feb["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Feb_BTP_count = Total_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Feb_BTP_count["Percentage"] = Total_data_month_Feb_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Total_data_month_Mar_BTP = Total_data_month_Mar[Total_data_month_Mar["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Mar_BTP_count = Total_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Mar_BTP_count["Percentage"] = Total_data_month_Mar_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Apr_BTP = Total_data_month_Apr[Total_data_month_Apr["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Apr_BTP_count = Total_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Apr_BTP_count["Percentage"] = Total_data_month_Apr_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_May_BTP = Total_data_month_May[Total_data_month_May["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_May_BTP_count = Total_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_May_BTP_count["Percentage"] = Total_data_month_May_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Jun_BTP = Total_data_month_Jun[Total_data_month_Jun["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Jun_BTP_count = Total_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jun_BTP_count["Percentage"] = Total_data_month_Jun_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Jul_BTP = Total_data_month_Jul[Total_data_month_Jul["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Jul_BTP_count = Total_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jul_BTP_count["Percentage"] = Total_data_month_Jul_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Aug_BTP = Total_data_month_Aug[Total_data_month_Aug["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Aug_BTP_count = Total_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Aug_BTP_count["Percentage"] = Total_data_month_Aug_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Sep_BTP = Total_data_month_Sep[Total_data_month_Sep["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Sep_BTP_count = Total_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Sep_BTP_count["Percentage"] = Total_data_month_Sep_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Oct_BTP = Total_data_month_Oct[Total_data_month_Oct["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Oct_BTP_count = Total_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Oct_BTP_count["Percentage"] = Total_data_month_Oct_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Nov_BTP = Total_data_month_Nov[Total_data_month_Nov["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Nov_BTP_count = Total_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Nov_BTP_count["Percentage"] = Total_data_month_Nov_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Dec_BTP = Total_data_month_Dec[Total_data_month_Dec["Moment audited"] == "Before_touching_patient"].reset_index()
Total_data_month_Dec_BTP_count = Total_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Dec_BTP_count["Percentage"] = Total_data_month_Dec_BTP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Total data by month and by moment (2) ######

Total_data_month_Jan_BAT = Total_data_month_Jan[Total_data_month_Jan["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Jan_BAT_count = Total_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jan_BAT_count["Percentage"] = Total_data_month_Jan_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Feb_BAT = Total_data_month_Feb[Total_data_month_Feb["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Feb_BAT_count = Total_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Feb_BAT_count["Percentage"] = Total_data_month_Feb_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Mar_BAT = Total_data_month_Mar[Total_data_month_Mar["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Mar_BAT_count = Total_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Mar_BAT_count["Percentage"] = Total_data_month_Mar_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Apr_BAT = Total_data_month_Apr[Total_data_month_Apr["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Apr_BAT_count = Total_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Apr_BAT_count["Percentage"] = Total_data_month_Apr_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_May_BAT = Total_data_month_May[Total_data_month_May["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_May_BAT_count = Total_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_May_BAT_count["Percentage"] = Total_data_month_May_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Jun_BAT = Total_data_month_Jun[Total_data_month_Jun["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Jun_BAT_count = Total_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jun_BAT_count["Percentage"] = Total_data_month_Jun_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Jul_BAT = Total_data_month_Jul[Total_data_month_Jul["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Jul_BAT_count = Total_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jul_BAT_count["Percentage"] = Total_data_month_Jul_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Aug_BAT = Total_data_month_Aug[Total_data_month_Aug["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Aug_BAT_count = Total_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Aug_BAT_count["Percentage"] = Total_data_month_Aug_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Sep_BAT = Total_data_month_Sep[Total_data_month_Sep["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Sep_BAT_count = Total_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Sep_BAT_count["Percentage"] = Total_data_month_Sep_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Oct_BAT = Total_data_month_Oct[Total_data_month_Oct["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Oct_BAT_count = Total_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Oct_BAT_count["Percentage"] = Total_data_month_Oct_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Nov_BAT = Total_data_month_Nov[Total_data_month_Nov["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Nov_BAT_count = Total_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Nov_BAT_count["Percentage"] = Total_data_month_Nov_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Dec_BAT = Total_data_month_Dec[Total_data_month_Dec["Moment audited"] == "Before_aseptic_technique"].reset_index()
Total_data_month_Dec_BAT_count = Total_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Dec_BAT_count["Percentage"] = Total_data_month_Dec_BAT.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Total data by month and by moment (3) #####

Total_data_month_Jan_ATP = Total_data_month_Jan[Total_data_month_Jan["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Jan_ATP_count = Total_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jan_ATP_count["Percentage"] = Total_data_month_Jan_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Feb_ATP = Total_data_month_Feb[Total_data_month_Feb["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Feb_ATP_count = Total_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Feb_ATP_count["Percentage"] = Total_data_month_Feb_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Total_data_month_Mar_ATP = Total_data_month_Mar[Total_data_month_Mar["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Mar_ATP_count = Total_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Mar_ATP_count["Percentage"] = Total_data_month_Mar_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Apr_ATP = Total_data_month_Apr[Total_data_month_Apr["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Apr_ATP_count = Total_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Apr_ATP_count["Percentage"] = Total_data_month_Apr_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_May_ATP = Total_data_month_May[Total_data_month_May["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_May_ATP_count = Total_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_May_ATP_count["Percentage"] = Total_data_month_May_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Jun_ATP = Total_data_month_Jun[Total_data_month_Jun["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Jun_ATP_count = Total_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jun_ATP_count["Percentage"] = Total_data_month_Jun_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Jul_ATP = Total_data_month_Jul[Total_data_month_Jul["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Jul_ATP_count = Total_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jul_ATP_count["Percentage"] = Total_data_month_Jul_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values  

Total_data_month_Aug_ATP = Total_data_month_Aug[Total_data_month_Aug["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Aug_ATP_count = Total_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Aug_ATP_count["Percentage"] = Total_data_month_Aug_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Sep_ATP = Total_data_month_Sep[Total_data_month_Sep["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Sep_ATP_count = Total_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Sep_ATP_count["Percentage"] = Total_data_month_Sep_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Oct_ATP = Total_data_month_Oct[Total_data_month_Oct["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Oct_ATP_count = Total_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Oct_ATP_count["Percentage"] = Total_data_month_Oct_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Nov_ATP = Total_data_month_Nov[Total_data_month_Nov["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Nov_ATP_count = Total_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Nov_ATP_count["Percentage"] = Total_data_month_Nov_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Dec_ATP = Total_data_month_Dec[Total_data_month_Dec["Moment audited"] == "After_touching_patient"].reset_index()
Total_data_month_Dec_ATP_count = Total_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Dec_ATP_count["Percentage"] = Total_data_month_Dec_ATP.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Total by month and by moment (4) ######

Total_data_month_Jan_ATBF = Total_data_month_Jan[Total_data_month_Jan["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Jan_ATBF_count = Total_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jan_ATBF_count["Percentage"] = Total_data_month_Jan_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Feb_ATBF = Total_data_month_Feb[Total_data_month_Feb["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Feb_ATBF_count = Total_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Feb_ATBF_count["Percentage"] = Total_data_month_Feb_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Mar_ATBF = Total_data_month_Mar[Total_data_month_Mar["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Mar_ATBF_count = Total_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Mar_ATBF_count["Percentage"] = Total_data_month_Mar_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Apr_ATBF = Total_data_month_Apr[Total_data_month_Apr["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Apr_ATBF_count = Total_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Apr_ATBF_count["Percentage"] = Total_data_month_Apr_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_May_ATBF = Total_data_month_May[Total_data_month_May["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_May_ATBF_count = Total_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_May_ATBF_count["Percentage"] = Total_data_month_May_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Jun_ATBF = Total_data_month_Jun[Total_data_month_Jun["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Jun_ATBF_count = Total_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jun_ATBF_count["Percentage"] = Total_data_month_Jun_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Jul_ATBF = Total_data_month_Jul[Total_data_month_Jul["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Jul_ATBF_count = Total_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jul_ATBF_count["Percentage"] = Total_data_month_Jul_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Aug_ATBF = Total_data_month_Aug[Total_data_month_Aug["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Aug_ATBF_count = Total_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Aug_ATBF_count["Percentage"] = Total_data_month_Aug_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Sep_ATBF = Total_data_month_Sep[Total_data_month_Sep["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Sep_ATBF_count = Total_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Sep_ATBF_count["Percentage"] = Total_data_month_Sep_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Oct_ATBF = Total_data_month_Oct[Total_data_month_Oct["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Oct_ATBF_count = Total_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Oct_ATBF_count["Percentage"] = Total_data_month_Oct_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Nov_ATBF = Total_data_month_Nov[Total_data_month_Nov["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Nov_ATBF_count = Total_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Nov_ATBF_count["Percentage"] = Total_data_month_Nov_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Dec_ATBF = Total_data_month_Dec[Total_data_month_Dec["Moment audited"] == "After_touching_body_fluid"].reset_index()
Total_data_month_Dec_ATBF_count = Total_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Dec_ATBF_count["Percentage"] = Total_data_month_Dec_ATBF.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#Total by month and by moment (5) #####

Total_data_month_Jan_ATPS = Total_data_month_Jan[Total_data_month_Jan["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Jan_ATPS_count = Total_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jan_ATPS_count["Percentage"] = Total_data_month_Jan_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Feb_ATPS = Total_data_month_Feb[Total_data_month_Feb["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Feb_ATPS_count = Total_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Feb_ATPS_count["Percentage"] = Total_data_month_Feb_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Mar_ATPS = Total_data_month_Mar[Total_data_month_Mar["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Mar_ATPS_count = Total_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Mar_ATPS_count["Percentage"] = Total_data_month_Mar_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Apr_ATPS = Total_data_month_Apr[Total_data_month_Apr["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Apr_ATPS_count = Total_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Apr_ATPS_count["Percentage"] = Total_data_month_Apr_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_May_ATPS = Total_data_month_May[Total_data_month_May["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_May_ATPS_count = Total_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_May_ATPS_count["Percentage"] = Total_data_month_May_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Jun_ATPS = Total_data_month_Jun[Total_data_month_Jun["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Jun_ATPS_count = Total_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jun_ATPS_count["Percentage"] = Total_data_month_Jun_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Jul_ATPS = Total_data_month_Jul[Total_data_month_Jul["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Jul_ATPS_count = Total_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Jul_ATPS_count["Percentage"] = Total_data_month_Jul_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Aug_ATPS = Total_data_month_Aug[Total_data_month_Aug["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Aug_ATPS_count = Total_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Aug_ATPS_count["Percentage"] = Total_data_month_Aug_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Sep_ATPS = Total_data_month_Sep[Total_data_month_Sep["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Sep_ATPS_count = Total_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Sep_ATPS_count["Percentage"] = Total_data_month_Sep_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Oct_ATPS = Total_data_month_Oct[Total_data_month_Oct["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Oct_ATPS_count = Total_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Oct_ATPS_count["Percentage"] = Total_data_month_Oct_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Nov_ATPS = Total_data_month_Nov[Total_data_month_Nov["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Nov_ATPS_count = Total_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Nov_ATPS_count["Percentage"] = Total_data_month_Nov_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

Total_data_month_Dec_ATPS = Total_data_month_Dec[Total_data_month_Dec["Moment audited"] == "After_touching_patient_surrounding"].reset_index()
Total_data_month_Dec_ATPS_count = Total_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().reset_index()
Total_data_month_Dec_ATPS_count["Percentage"] = Total_data_month_Dec_ATPS.groupby(["Staff audited", "HH action"])["Moment audited"].size().groupby(level=0).apply(lambda x: 100 * x / float(x.sum())).values 

#This is for the tabs on top of the streamlit web report
st.markdown(
    '<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">',
    unsafe_allow_html=True,
)
query_params = st.experimental_get_query_params()
tabs = ["General information", "ER", "ICU Medicine", "ICU Surgery", "Medicine A", "Medicine B", "Pneumology", "Surgery A", "Surgery B", "Surgery C", "ENT", "OB-GYN", "Pediatric ward", "Ophthalmology ward", "All wards"]
if "tab" in query_params:
    active_tab = query_params["tab"][0]
else:
    active_tab = "General information"

if active_tab not in tabs:
    st.experimental_set_query_params(tab="General information")
    active_tab = "General information"

li_items = "".join(
    f"""
    <li class="nav-item">
        <a class="nav-link{' active' if t==active_tab else ''}" href="/?tab={t}">{t}</a>
    </li>
    """
    for t in tabs
)
tabs_html = f"""
    <ul class="nav nav-tabs">
    {li_items}
    </ul>
"""

st.markdown(tabs_html, unsafe_allow_html=True)
st.markdown("<br>", unsafe_allow_html=True)

if active_tab == "General information":
    st.title("Welcome to the automated Hand Hygiene report:")
    st.write("This report allows you to look at hand hygiene compliance for each ward at the Siem Reap Referral hospital, which is accessible by clicking on the tabs at the top of the report. The report for each ward is divided in 5 sections; each section is dedicated to one of the 5 moments in hand hygiene. A section is divided into 12 subplots representing each month of the year, which allows to track trends in compliance. The x-axis represents health professionals and the y-axis represents the number of opportunities audited. The bar charts are stacked in different colors to represent whether the health professionals complied to hand hygiene or not. For more information please contact Dr. Khim Gaetan via email (gaetan.khim@dmdp.org) or phone (012282050).")

elif active_tab == "ER":
    st.title("Hand hygiene compliance in the Siem Reap ER ward:")
    
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", ER_count_Jan, "| February: ", ER_count_Feb, "| March: ", ER_count_Mar, "| April: ", ER_count_Apr, "| May: ", ER_count_May, "| June: ", ER_count_Jun, "| July: ", ER_count_Jul, "| August: ", ER_count_Aug, "| September: ", ER_count_Sep, "| October: ", ER_count_Oct, "| November: ", ER_count_Nov, "| December: ", ER_count_Dec)
    
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots ER-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ER_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jan_BTP_count[ER_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Feb_BTP_count[ER_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Mar_BTP_count[ER_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action,  marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Apr_BTP_count[ER_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ER_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_May_BTP_count[ER_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ER_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jun_BTP_count[ER_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jul_BTP_count[ER_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Aug_BTP_count[ER_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Sep_BTP_count[ER_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Oct_BTP_count[ER_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Nov_BTP_count[ER_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Dec_BTP_count[ER_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")
    
#Subplots ER-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ER_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jan_BAT_count[ER_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Feb_BAT_count[ER_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Mar_BAT_count[ER_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Apr_BAT_count[ER_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ER_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_May_BAT_count[ER_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ER_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jun_BAT_count[ER_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jul_BAT_count[ER_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Aug_BAT_count[ER_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Sep_BAT_count[ER_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Oct_BAT_count[ER_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Nov_BAT_count[ER_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Dec_BAT_count[ER_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)
    
    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots ER-ATP
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ER_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jan_ATP_count[ER_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Feb_ATP_count[ER_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Mar_ATP_count[ER_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Apr_ATP_count[ER_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ER_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_May_ATP_count[ER_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ER_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jun_ATP_count[ER_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jul_ATP_count[ER_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Aug_ATP_count[ER_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Sep_ATP_count[ER_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Oct_ATP_count[ER_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Nov_ATP_count[ER_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Dec_ATP_count[ER_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)
    
    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot ER-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ER_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jan_ATBF_count[ER_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Feb_ATBF_count[ER_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Mar_ATBF_count[ER_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Apr_ATBF_count[ER_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ER_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_May_ATBF_count[ER_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ER_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jun_ATBF_count[ER_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jul_ATBF_count[ER_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Aug_ATBF_count[ER_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Sep_ATBF_count[ER_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Oct_ATBF_count[ER_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Nov_ATBF_count[ER_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Dec_ATBF_count[ER_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action,legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)
    
    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot ER-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ER_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jan_ATPS_count[ER_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Feb_ATPS_count[ER_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Mar_ATPS_count[ER_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Apr_ATPS_count[ER_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ER_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_May_ATPS_count[ER_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ER_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jun_ATPS_count[ER_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Jul_ATPS_count[ER_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Aug_ATPS_count[ER_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Sep_ATPS_count[ER_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Oct_ATPS_count[ER_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Nov_ATPS_count[ER_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ER_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ER_data_month_Dec_ATPS_count[ER_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)                                                    

    
elif active_tab == "ICU Medicine":
    st.title("Hand hygiene compliance in the Siem Reap ICU Medicine ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", ICU_med_count_Jan, "| February: ", ICU_med_count_Feb, "| March: ", ICU_med_count_Mar, "| April: ", ICU_med_count_Apr, "| May: ", ICU_med_count_May, "| June: ", ICU_med_count_Jun, "| July: ", ICU_med_count_Jul, "| August: ", ICU_med_count_Aug, "| September: ", ICU_med_count_Sep, "| October: ", ICU_med_count_Oct, "| November: ", ICU_med_count_Nov, "| December: ", ICU_med_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots ICU-med-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ICU_med_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jan_BTP_count[ICU_med_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Feb_BTP_count[ICU_med_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Mar_BTP_count[ICU_med_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Apr_BTP_count[ICU_med_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_med_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_May_BTP_count[ICU_med_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_med_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jun_BTP_count[ICU_med_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jul_BTP_count[ICU_med_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Aug_BTP_count[ICU_med_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Sep_BTP_count[ICU_med_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Oct_BTP_count[ICU_med_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Nov_BTP_count[ICU_med_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Dec_BTP_count[ICU_med_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)
    
    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots ICU-med-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ICU_med_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jan_BAT_count[ICU_med_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Feb_BAT_count[ICU_med_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Mar_BAT_count[ICU_med_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Apr_BAT_count[ICU_med_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_med_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_May_BAT_count[ICU_med_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_med_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jun_BAT_count[ICU_med_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jul_BAT_count[ICU_med_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Aug_BAT_count[ICU_med_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Sep_BAT_count[ICU_med_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Oct_BAT_count[ICU_med_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Nov_BAT_count[ICU_med_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Dec_BAT_count[ICU_med_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots ICU-med-ATP
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ICU_med_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jan_ATP_count[ICU_med_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Feb_ATP_count[ICU_med_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Mar_ATP_count[ICU_med_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Apr_ATP_count[ICU_med_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_med_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_May_ATP_count[ICU_med_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_med_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jun_ATP_count[ICU_med_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jul_ATP_count[ICU_med_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Aug_ATP_count[ICU_med_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Sep_ATP_count[ICU_med_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Oct_ATP_count[ICU_med_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Nov_ATP_count[ICU_med_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Dec_ATP_count[ICU_med_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot ICU-med-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ICU_med_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jan_ATBF_count[ICU_med_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Feb_ATBF_count[ICU_med_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Mar_ATBF_count[ICU_med_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Apr_ATBF_count[ICU_med_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_med_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_May_ATBF_count[ICU_med_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_med_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jun_ATBF_count[ICU_med_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jul_ATBF_count[ICU_med_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Aug_ATBF_count[ICU_med_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Sep_ATBF_count[ICU_med_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Oct_ATBF_count[ICU_med_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Nov_ATBF_count[ICU_med_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Dec_ATBF_count[ICU_med_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot ICU-med-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ICU_med_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jan_ATPS_count[ICU_med_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Feb_ATPS_count[ICU_med_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Mar_ATPS_count[ICU_med_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Apr_ATPS_count[ICU_med_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_med_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_May_ATPS_count[ICU_med_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_med_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jun_ATPS_count[ICU_med_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Jul_ATPS_count[ICU_med_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Aug_ATPS_count[ICU_med_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Sep_ATPS_count[ICU_med_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Oct_ATPS_count[ICU_med_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Nov_ATPS_count[ICU_med_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_med_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_med_data_month_Dec_ATPS_count[ICU_med_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)     
    
elif active_tab == "ICU Surgery":
    st.title("Hand hygiene compliance in the Siem Reap ICU Surgery ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", ICU_sur_count_Jan, "| February: ", ICU_sur_count_Feb, "| March: ", ICU_sur_count_Mar, "| April: ", ICU_sur_count_Apr, "| May: ", ICU_sur_count_May, "| June: ", ICU_sur_count_Jun, "| July: ", ICU_sur_count_Jul, "| August: ", ICU_sur_count_Aug, "| September: ", ICU_sur_count_Sep, "| October: ", ICU_sur_count_Oct, "| November: ", ICU_sur_count_Nov, "| December: ", ICU_sur_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots ICU-surgery-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ICU_sur_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jan_BTP_count[ICU_sur_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Feb_BTP_count[ICU_sur_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Mar_BTP_count[ICU_sur_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Apr_BTP_count[ICU_sur_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_sur_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_May_BTP_count[ICU_sur_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_sur_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jun_BTP_count[ICU_sur_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jul_BTP_count[ICU_sur_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Aug_BTP_count[ICU_sur_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Sep_BTP_count[ICU_sur_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Oct_BTP_count[ICU_sur_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Nov_BTP_count[ICU_sur_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Dec_BTP_count[ICU_sur_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots ICU-surgery-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ICU_sur_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jan_BAT_count[ICU_sur_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Feb_BAT_count[ICU_sur_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Mar_BAT_count[ICU_sur_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Apr_BAT_count[ICU_sur_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_sur_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_May_BAT_count[ICU_sur_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_sur_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jun_BAT_count[ICU_sur_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jul_BAT_count[ICU_sur_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Aug_BAT_count[ICU_sur_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Sep_BAT_count[ICU_sur_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Oct_BAT_count[ICU_sur_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Nov_BAT_count[ICU_sur_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Dec_BAT_count[ICU_sur_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots ICU-surgery-ATP
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ICU_sur_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jan_ATP_count[ICU_sur_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Feb_ATP_count[ICU_sur_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Mar_ATP_count[ICU_sur_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Apr_ATP_count[ICU_sur_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_sur_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_May_ATP_count[ICU_sur_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_sur_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jun_ATP_count[ICU_sur_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jul_ATP_count[ICU_sur_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Aug_ATP_count[ICU_sur_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Sep_ATP_count[ICU_sur_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Oct_ATP_count[ICU_sur_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Nov_ATP_count[ICU_sur_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Dec_ATP_count[ICU_sur_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot ICU-surgery-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ICU_sur_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jan_ATBF_count[ICU_sur_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Feb_ATBF_count[ICU_sur_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Mar_ATBF_count[ICU_sur_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Apr_ATBF_count[ICU_sur_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_sur_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_May_ATBF_count[ICU_sur_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_sur_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jun_ATBF_count[ICU_sur_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jul_ATBF_count[ICU_sur_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Aug_ATBF_count[ICU_sur_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Sep_ATBF_count[ICU_sur_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Oct_ATBF_count[ICU_sur_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Nov_ATBF_count[ICU_sur_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Dec_ATBF_count[ICU_sur_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot ICU-surgery-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ICU_sur_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jan_ATPS_count[ICU_sur_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Feb_ATPS_count[ICU_sur_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Mar_ATPS_count[ICU_sur_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Apr_ATPS_count[ICU_sur_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_sur_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_May_ATPS_count[ICU_sur_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ICU_sur_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jun_ATPS_count[ICU_sur_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Jul_ATPS_count[ICU_sur_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Aug_ATPS_count[ICU_sur_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Sep_ATPS_count[ICU_sur_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Oct_ATPS_count[ICU_sur_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Nov_ATPS_count[ICU_sur_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ICU_sur_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ICU_sur_data_month_Dec_ATPS_count[ICU_sur_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)     

elif active_tab == "Medicine A":
    st.title("Hand hygiene compliance in the Siem Reap Medicine A ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", Med_A_count_Jan, "| February: ", Med_A_count_Feb, "| March: ", Med_A_count_Mar, "| April: ", Med_A_count_Apr, "| May: ", Med_A_count_May, "| June: ", Med_A_count_Jun, "| July: ", Med_A_count_Jul, "| August: ", Med_A_count_Aug, "| September: ", Med_A_count_Sep, "| October: ", Med_A_count_Oct, "| November: ", Med_A_count_Nov, "| December: ", Med_A_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots Medicine A-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Med_A_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jan_BTP_count[Med_A_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Feb_BTP_count[Med_A_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Mar_BTP_count[Med_A_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Apr_BTP_count[Med_A_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_A_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_May_BTP_count[Med_A_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_A_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jun_BTP_count[Med_A_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jul_BTP_count[Med_A_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Aug_BTP_count[Med_A_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Sep_BTP_count[Med_A_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Oct_BTP_count[Med_A_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Nov_BTP_count[Med_A_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Dec_BTP_count[Med_A_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots Med_A-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Med_A_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jan_BAT_count[Med_A_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Feb_BAT_count[Med_A_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Mar_BAT_count[Med_A_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Apr_BAT_count[Med_A_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_A_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_May_BAT_count[Med_A_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_A_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jun_BAT_count[Med_A_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jul_BAT_count[Med_A_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Aug_BAT_count[Med_A_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Sep_BAT_count[Med_A_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Oct_BAT_count[Med_A_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Nov_BAT_count[Med_A_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Dec_BAT_count[Med_A_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots Med_A-ATP
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Med_A_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jan_ATP_count[Med_A_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Feb_ATP_count[Med_A_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Mar_ATP_count[Med_A_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Apr_ATP_count[Med_A_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_A_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_May_ATP_count[Med_A_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_A_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jun_ATP_count[Med_A_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jul_ATP_count[Med_A_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Aug_ATP_count[Med_A_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Sep_ATP_count[Med_A_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Oct_ATP_count[Med_A_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Nov_ATP_count[Med_A_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Dec_ATP_count[Med_A_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot Med_A-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Med_A_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jan_ATBF_count[Med_A_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Feb_ATBF_count[Med_A_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Mar_ATBF_count[Med_A_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Apr_ATBF_count[Med_A_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_A_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_May_ATBF_count[Med_A_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_A_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jun_ATBF_count[Med_A_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jul_ATBF_count[Med_A_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Aug_ATBF_count[Med_A_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Sep_ATBF_count[Med_A_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Oct_ATBF_count[Med_A_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Nov_ATBF_count[Med_A_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Dec_ATBF_count[Med_A_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot Med_A-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Med_A_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jan_ATPS_count[Med_A_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Feb_ATPS_count[Med_A_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Mar_ATPS_count[Med_A_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Apr_ATPS_count[Med_A_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_A_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_May_ATPS_count[Med_A_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_A_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jun_ATPS_count[Med_A_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Jul_ATPS_count[Med_A_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Aug_ATPS_count[Med_A_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Sep_ATPS_count[Med_A_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Oct_ATPS_count[Med_A_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Nov_ATPS_count[Med_A_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_A_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_A_data_month_Dec_ATPS_count[Med_A_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)     

elif active_tab == "Medicine B":
    st.title("Hand hygiene compliance in the Siem Reap Medicine B ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", Med_B_count_Jan, "| February: ", Med_B_count_Feb, "| March: ", Med_B_count_Mar, "| April: ", Med_B_count_Apr, "| May: ", Med_B_count_May, "| June: ", Med_B_count_Jun, "| July: ", Med_B_count_Jul, "| August: ", Med_B_count_Aug, "| September: ", Med_B_count_Sep, "| October: ", Med_B_count_Oct, "| November: ", Med_B_count_Nov, "| December: ", Med_B_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots Medicine B-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Med_B_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jan_BTP_count[Med_B_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Feb_BTP_count[Med_B_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Mar_BTP_count[Med_B_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Apr_BTP_count[Med_B_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_B_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_May_BTP_count[Med_B_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_B_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jun_BTP_count[Med_B_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jul_BTP_count[Med_B_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Aug_BTP_count[Med_B_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Sep_BTP_count[Med_B_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Oct_BTP_count[Med_B_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Nov_BTP_count[Med_B_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Dec_BTP_count[Med_B_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots Med_B-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Med_B_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jan_BAT_count[Med_B_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Feb_BAT_count[Med_B_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Mar_BAT_count[Med_B_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Apr_BAT_count[Med_B_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_B_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_May_BAT_count[Med_B_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_B_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jun_BAT_count[Med_B_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jul_BAT_count[Med_B_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Aug_BAT_count[Med_B_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Sep_BAT_count[Med_B_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Oct_BAT_count[Med_B_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Nov_BAT_count[Med_B_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Dec_BAT_count[Med_B_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots Med_B-ATP
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Med_B_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jan_ATP_count[Med_B_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Feb_ATP_count[Med_B_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Mar_ATP_count[Med_B_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Apr_ATP_count[Med_B_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_B_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_May_ATP_count[Med_B_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_B_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jun_ATP_count[Med_B_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jul_ATP_count[Med_B_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Aug_ATP_count[Med_B_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Sep_ATP_count[Med_B_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Oct_ATP_count[Med_B_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Nov_ATP_count[Med_B_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Dec_ATP_count[Med_B_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot Med_B-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Med_B_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jan_ATBF_count[Med_B_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Feb_ATBF_count[Med_B_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Mar_ATBF_count[Med_B_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Apr_ATBF_count[Med_B_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_B_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_May_ATBF_count[Med_B_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_B_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jun_ATBF_count[Med_B_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jul_ATBF_count[Med_B_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Aug_ATBF_count[Med_B_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Sep_ATBF_count[Med_B_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Oct_ATBF_count[Med_B_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Nov_ATBF_count[Med_B_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Dec_ATBF_count[Med_B_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot Med_A-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Med_B_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jan_ATPS_count[Med_B_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Feb_ATPS_count[Med_B_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Mar_ATPS_count[Med_B_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Apr_ATPS_count[Med_B_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_B_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_May_ATPS_count[Med_B_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Med_B_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jun_ATPS_count[Med_B_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Jul_ATPS_count[Med_B_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Aug_ATPS_count[Med_B_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Sep_ATPS_count[Med_B_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Oct_ATPS_count[Med_B_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Nov_ATPS_count[Med_B_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Med_B_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Med_B_data_month_Dec_ATPS_count[Med_B_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)     

elif active_tab == "Pneumology":
    st.title("Hand hygiene compliance in the Siem Reap Pneumology ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", Pneumology_count_Jan, "| February: ", Pneumology_count_Feb, "| March: ", Pneumology_count_Mar, "| April: ", Pneumology_count_Apr, "| May: ", Pneumology_count_May, "| June: ", Pneumology_count_Jun, "| July: ", Pneumology_count_Jul, "| August: ", Pneumology_count_Aug, "| September: ", Pneumology_count_Sep, "| October: ", Pneumology_count_Oct, "| November: ", Pneumology_count_Nov, "| December: ", Pneumology_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots Pneumology-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Pneumology_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jan_BTP_count[Pneumology_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Feb_BTP_count[Pneumology_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Mar_BTP_count[Pneumology_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Apr_BTP_count[Pneumology_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pneumology_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_May_BTP_count[Pneumology_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pneumology_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jun_BTP_count[Pneumology_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jul_BTP_count[Pneumology_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Aug_BTP_count[Pneumology_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Sep_BTP_count[Pneumology_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Oct_BTP_count[Pneumology_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Nov_BTP_count[Pneumology_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Dec_BTP_count[Pneumology_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots Pneumology-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Pneumology_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jan_BAT_count[Pneumology_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Feb_BAT_count[Pneumology_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Mar_BAT_count[Pneumology_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Apr_BAT_count[Pneumology_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pneumology_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_May_BAT_count[Pneumology_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pneumology_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jun_BAT_count[Pneumology_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jul_BAT_count[Pneumology_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Aug_BAT_count[Pneumology_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Sep_BAT_count[Pneumology_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Oct_BAT_count[Pneumology_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Nov_BAT_count[Pneumology_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Dec_BAT_count[Pneumology_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots Pneumology-ATP

    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Pneumology_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jan_ATP_count[Pneumology_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Feb_ATP_count[Pneumology_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Mar_ATP_count[Pneumology_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Apr_ATP_count[Pneumology_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pneumology_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_May_ATP_count[Pneumology_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pneumology_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jun_ATP_count[Pneumology_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jul_ATP_count[Pneumology_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Aug_ATP_count[Pneumology_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Sep_ATP_count[Pneumology_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Oct_ATP_count[Pneumology_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Nov_ATP_count[Pneumology_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Dec_ATP_count[Pneumology_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot Pneumology-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Pneumology_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jan_ATBF_count[Pneumology_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Feb_ATBF_count[Pneumology_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Mar_ATBF_count[Pneumology_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Apr_ATBF_count[Pneumology_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pneumology_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_May_ATBF_count[Pneumology_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pneumology_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jun_ATBF_count[Pneumology_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jul_ATBF_count[Pneumology_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Aug_ATBF_count[Pneumology_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Sep_ATBF_count[Pneumology_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Oct_ATBF_count[Pneumology_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Nov_ATBF_count[Pneumology_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Dec_ATBF_count[Pneumology_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot Pneumology-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Pneumology_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jan_ATPS_count[Pneumology_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Feb_ATPS_count[Pneumology_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Mar_ATPS_count[Pneumology_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Apr_ATPS_count[Pneumology_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pneumology_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_May_ATPS_count[Pneumology_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pneumology_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jun_ATPS_count[Pneumology_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Jul_ATPS_count[Pneumology_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Aug_ATPS_count[Pneumology_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Sep_ATPS_count[Pneumology_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Oct_ATPS_count[Pneumology_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Nov_ATPS_count[Pneumology_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pneumology_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pneumology_data_month_Dec_ATPS_count[Pneumology_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)     

elif active_tab == "Surgery A":
    st.title("Hand hygiene compliance in the Siem Reap Surgery A ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", Surgery_A_count_Jan, "| February: ", Surgery_A_count_Feb, "| March: ", Surgery_A_count_Mar, "| April: ", Surgery_A_count_Apr, "| May: ", Surgery_A_count_May, "| June: ", Surgery_A_count_Jun, "| July: ", Surgery_A_count_Jul, "| August: ", Surgery_A_count_Aug, "| September: ", Surgery_A_count_Sep, "| October: ", Surgery_A_count_Oct, "| November: ", Surgery_A_count_Nov, "| December: ", Surgery_A_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots Surgery A-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_A_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jan_BTP_count[Surgery_A_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Feb_BTP_count[Surgery_A_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Mar_BTP_count[Surgery_A_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Apr_BTP_count[Surgery_A_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_A_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_May_BTP_count[Surgery_A_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_A_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jun_BTP_count[Surgery_A_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jul_BTP_count[Surgery_A_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Aug_BTP_count[Surgery_A_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Sep_BTP_count[Surgery_A_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Oct_BTP_count[Surgery_A_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Nov_BTP_count[Surgery_A_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Dec_BTP_count[Surgery_A_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots Surgery A-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_A_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jan_BAT_count[Surgery_A_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Feb_BAT_count[Surgery_A_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Mar_BAT_count[Surgery_A_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Apr_BAT_count[Surgery_A_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_A_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_May_BAT_count[Surgery_A_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_A_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jun_BAT_count[Surgery_A_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jul_BAT_count[Surgery_A_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Aug_BAT_count[Surgery_A_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Sep_BAT_count[Surgery_A_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Oct_BAT_count[Surgery_A_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Nov_BAT_count[Surgery_A_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Dec_BAT_count[Surgery_A_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots Surgery A-ATP

    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_A_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jan_ATP_count[Surgery_A_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Feb_ATP_count[Surgery_A_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Mar_ATP_count[Surgery_A_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Apr_ATP_count[Surgery_A_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_A_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_May_ATP_count[Surgery_A_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_A_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jun_ATP_count[Surgery_A_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jul_ATP_count[Surgery_A_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Aug_ATP_count[Surgery_A_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Sep_ATP_count[Surgery_A_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Oct_ATP_count[Surgery_A_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Nov_ATP_count[Surgery_A_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Dec_ATP_count[Surgery_A_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot Surgery A-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_A_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jan_ATBF_count[Surgery_A_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Feb_ATBF_count[Surgery_A_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Mar_ATBF_count[Surgery_A_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Apr_ATBF_count[Surgery_A_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_A_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_May_ATBF_count[Surgery_A_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_A_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jun_ATBF_count[Surgery_A_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jul_ATBF_count[Surgery_A_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Aug_ATBF_count[Surgery_A_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Sep_ATBF_count[Surgery_A_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Oct_ATBF_count[Surgery_A_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Nov_ATBF_count[Surgery_A_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Dec_ATBF_count[Surgery_A_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot Surgery A-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_A_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jan_ATPS_count[Surgery_A_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Feb_ATPS_count[Surgery_A_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Mar_ATPS_count[Surgery_A_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Apr_ATPS_count[Surgery_A_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_A_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_May_ATPS_count[Surgery_A_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_A_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jun_ATPS_count[Surgery_A_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Jul_ATPS_count[Surgery_A_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Aug_ATPS_count[Surgery_A_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Sep_ATPS_count[Surgery_A_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Oct_ATPS_count[Surgery_A_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Nov_ATPS_count[Surgery_A_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_A_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_A_data_month_Dec_ATPS_count[Surgery_A_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)   

elif active_tab == "Surgery B":
    st.title("Hand hygiene compliance in the Siem Reap Surgery B ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", Surgery_B_count_Jan, "| February: ", Surgery_B_count_Feb, "| March: ", Surgery_B_count_Mar, "| April: ", Surgery_B_count_Apr, "| May: ", Surgery_B_count_May, "| June: ", Surgery_B_count_Jun, "| July: ", Surgery_B_count_Jul, "| August: ", Surgery_B_count_Aug, "| September: ", Surgery_B_count_Sep, "| October: ", Surgery_B_count_Oct, "| November: ", Surgery_B_count_Nov, "| December: ", Surgery_B_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots Surgery B-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_B_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jan_BTP_count[Surgery_B_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Feb_BTP_count[Surgery_B_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Mar_BTP_count[Surgery_B_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Apr_BTP_count[Surgery_B_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_B_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_May_BTP_count[Surgery_B_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_B_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jun_BTP_count[Surgery_B_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jul_BTP_count[Surgery_B_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Aug_BTP_count[Surgery_B_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Sep_BTP_count[Surgery_B_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Oct_BTP_count[Surgery_B_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Nov_BTP_count[Surgery_B_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Dec_BTP_count[Surgery_B_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots Surgery B-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_B_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jan_BAT_count[Surgery_B_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Feb_BAT_count[Surgery_B_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Mar_BAT_count[Surgery_B_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Apr_BAT_count[Surgery_B_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_B_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_May_BAT_count[Surgery_B_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_B_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jun_BAT_count[Surgery_B_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jul_BAT_count[Surgery_B_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Aug_BAT_count[Surgery_B_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Sep_BAT_count[Surgery_B_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Oct_BAT_count[Surgery_B_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Nov_BAT_count[Surgery_B_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Dec_BAT_count[Surgery_B_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots Surgery B-ATP

    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_B_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jan_ATP_count[Surgery_B_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Feb_ATP_count[Surgery_B_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Mar_ATP_count[Surgery_B_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Apr_ATP_count[Surgery_B_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_B_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_May_ATP_count[Surgery_B_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_B_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jun_ATP_count[Surgery_B_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jul_ATP_count[Surgery_B_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Aug_ATP_count[Surgery_B_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Sep_ATP_count[Surgery_B_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Oct_ATP_count[Surgery_B_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Nov_ATP_count[Surgery_B_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Dec_ATP_count[Surgery_B_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot Surgery B-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_B_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jan_ATBF_count[Surgery_B_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Feb_ATBF_count[Surgery_B_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Mar_ATBF_count[Surgery_B_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Apr_ATBF_count[Surgery_B_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_B_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_May_ATBF_count[Surgery_B_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_B_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jun_ATBF_count[Surgery_B_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jul_ATBF_count[Surgery_B_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Aug_ATBF_count[Surgery_B_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Sep_ATBF_count[Surgery_B_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Oct_ATBF_count[Surgery_B_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Nov_ATBF_count[Surgery_B_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Dec_ATBF_count[Surgery_B_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot Surgery B-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_B_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jan_ATPS_count[Surgery_B_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Feb_ATPS_count[Surgery_B_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Mar_ATPS_count[Surgery_B_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Apr_ATPS_count[Surgery_B_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_B_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_May_ATPS_count[Surgery_B_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_B_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jun_ATPS_count[Surgery_B_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Jul_ATPS_count[Surgery_B_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Aug_ATPS_count[Surgery_B_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Sep_ATPS_count[Surgery_B_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Oct_ATPS_count[Surgery_B_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Nov_ATPS_count[Surgery_B_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_B_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_B_data_month_Dec_ATPS_count[Surgery_B_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)   

elif active_tab == "Surgery C":
    st.title("Hand hygiene compliance in the Siem Reap Surgery C ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", Surgery_C_count_Jan, "| February: ", Surgery_C_count_Feb, "| March: ", Surgery_C_count_Mar, "| April: ", Surgery_C_count_Apr, "| May: ", Surgery_C_count_May, "| June: ", Surgery_C_count_Jun, "| July: ", Surgery_C_count_Jul, "| August: ", Surgery_C_count_Aug, "| September: ", Surgery_C_count_Sep, "| October: ", Surgery_C_count_Oct, "| November: ", Surgery_C_count_Nov, "| December: ", Surgery_C_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots Surgery C-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_C_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jan_BTP_count[Surgery_C_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Feb_BTP_count[Surgery_C_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Mar_BTP_count[Surgery_C_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Apr_BTP_count[Surgery_C_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_C_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_May_BTP_count[Surgery_C_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_C_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jun_BTP_count[Surgery_C_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jul_BTP_count[Surgery_C_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Aug_BTP_count[Surgery_C_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Sep_BTP_count[Surgery_C_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Oct_BTP_count[Surgery_C_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Nov_BTP_count[Surgery_C_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Dec_BTP_count[Surgery_C_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots Surgery C-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_C_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jan_BAT_count[Surgery_C_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Feb_BAT_count[Surgery_C_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Mar_BAT_count[Surgery_C_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Apr_BAT_count[Surgery_C_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_C_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_May_BAT_count[Surgery_C_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_C_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jun_BAT_count[Surgery_C_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jul_BAT_count[Surgery_C_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Aug_BAT_count[Surgery_C_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Sep_BAT_count[Surgery_C_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Oct_BAT_count[Surgery_C_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Nov_BAT_count[Surgery_C_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Dec_BAT_count[Surgery_C_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots Surgery C-ATP

    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_C_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jan_ATP_count[Surgery_C_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Feb_ATP_count[Surgery_C_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Mar_ATP_count[Surgery_C_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Apr_ATP_count[Surgery_C_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_C_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_May_ATP_count[Surgery_C_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_C_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jun_ATP_count[Surgery_C_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jul_ATP_count[Surgery_C_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Aug_ATP_count[Surgery_C_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Sep_ATP_count[Surgery_C_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Oct_ATP_count[Surgery_C_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Nov_ATP_count[Surgery_C_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Dec_ATP_count[Surgery_C_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot Surgery C-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_C_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jan_ATBF_count[Surgery_C_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Feb_ATBF_count[Surgery_C_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Mar_ATBF_count[Surgery_C_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Apr_ATBF_count[Surgery_C_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_C_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_May_ATBF_count[Surgery_C_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_C_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jun_ATBF_count[Surgery_C_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jul_ATBF_count[Surgery_C_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Aug_ATBF_count[Surgery_C_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Sep_ATBF_count[Surgery_C_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Oct_ATBF_count[Surgery_C_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Nov_ATBF_count[Surgery_C_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Dec_ATBF_count[Surgery_C_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot Surgery C-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Surgery_C_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jan_ATPS_count[Surgery_C_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Feb_ATPS_count[Surgery_C_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Mar_ATPS_count[Surgery_C_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Apr_ATPS_count[Surgery_C_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_C_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_May_ATPS_count[Surgery_C_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Surgery_C_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jun_ATPS_count[Surgery_C_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Jul_ATPS_count[Surgery_C_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Aug_ATPS_count[Surgery_C_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Sep_ATPS_count[Surgery_C_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Oct_ATPS_count[Surgery_C_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Nov_ATPS_count[Surgery_C_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Surgery_C_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Surgery_C_data_month_Dec_ATPS_count[Surgery_C_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)   

elif active_tab == "ENT":
    st.title("Hand hygiene compliance in the Siem Reap ENT ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", ENT_count_Jan, "| February: ", ENT_count_Feb, "| March: ", ENT_count_Mar, "| April: ", ENT_count_Apr, "| May: ", ENT_count_May, "| June: ", ENT_count_Jun, "| July: ", ENT_count_Jul, "| August: ", ENT_count_Aug, "| September: ", ENT_count_Sep, "| October: ", ENT_count_Oct, "| November: ", ENT_count_Nov, "| December: ", ENT_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots ENT-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ENT_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jan_BTP_count[ENT_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Feb_BTP_count[ENT_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Mar_BTP_count[ENT_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Apr_BTP_count[ENT_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ENT_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_May_BTP_count[ENT_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ENT_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jun_BTP_count[ENT_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jul_BTP_count[ENT_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Aug_BTP_count[ENT_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Sep_BTP_count[ENT_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Oct_BTP_count[ENT_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Nov_BTP_count[ENT_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Dec_BTP_count[ENT_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots ENT C-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ENT_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jan_BAT_count[ENT_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Feb_BAT_count[ENT_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Mar_BAT_count[ENT_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Apr_BAT_count[ENT_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ENT_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_May_BAT_count[ENT_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ENT_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jun_BAT_count[ENT_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jul_BAT_count[ENT_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Aug_BAT_count[ENT_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Sep_BAT_count[ENT_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Oct_BAT_count[ENT_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Nov_BAT_count[ENT_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Dec_BAT_count[ENT_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots ENT C-ATP

    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ENT_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jan_ATP_count[ENT_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Feb_ATP_count[ENT_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Mar_ATP_count[ENT_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Apr_ATP_count[ENT_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ENT_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_May_ATP_count[ENT_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ENT_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jun_ATP_count[ENT_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jul_ATP_count[ENT_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Aug_ATP_count[ENT_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Sep_ATP_count[ENT_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Oct_ATP_count[ENT_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Nov_ATP_count[ENT_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Dec_ATP_count[ENT_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot ENT-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ENT_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jan_ATBF_count[ENT_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Feb_ATBF_count[ENT_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Mar_ATBF_count[ENT_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Apr_ATBF_count[ENT_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ENT_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_May_ATBF_count[ENT_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ENT_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jun_ATBF_count[ENT_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jul_ATBF_count[ENT_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Aug_ATBF_count[ENT_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Sep_ATBF_count[ENT_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Oct_ATBF_count[ENT_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Nov_ATBF_count[ENT_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Dec_ATBF_count[ENT_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot ENT-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in ENT_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jan_ATPS_count[ENT_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Feb_ATPS_count[ENT_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Mar_ATPS_count[ENT_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Apr_ATPS_count[ENT_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ENT_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_May_ATPS_count[ENT_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in ENT_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jun_ATPS_count[ENT_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Jul_ATPS_count[ENT_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Aug_ATPS_count[ENT_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Sep_ATPS_count[ENT_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Oct_ATPS_count[ENT_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Nov_ATPS_count[ENT_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in ENT_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = ENT_data_month_Dec_ATPS_count[ENT_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)   

elif active_tab == "OB-GYN":
    st.title("Hand hygiene compliance in the Siem Reap OB-GYN ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", OB_GYN_count_Jan, "| February: ", OB_GYN_count_Feb, "| March: ", OB_GYN_count_Mar, "| April: ", OB_GYN_count_Apr, "| May: ", OB_GYN_count_May, "| June: ", OB_GYN_count_Jun, "| July: ", OB_GYN_count_Jul, "| August: ", OB_GYN_count_Aug, "| September: ", OB_GYN_count_Sep, "| October: ", OB_GYN_count_Oct, "| November: ", OB_GYN_count_Nov, "| December: ", OB_GYN_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots OBGYN-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in OB_GYN_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jan_BTP_count[OB_GYN_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Feb_BTP_count[OB_GYN_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Mar_BTP_count[OB_GYN_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Apr_BTP_count[OB_GYN_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in OB_GYN_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_May_BTP_count[OB_GYN_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in OB_GYN_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jun_BTP_count[OB_GYN_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jul_BTP_count[OB_GYN_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Aug_BTP_count[OB_GYN_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Sep_BTP_count[OB_GYN_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Oct_BTP_count[OB_GYN_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Nov_BTP_count[OB_GYN_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Dec_BTP_count[OB_GYN_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots OBGYN-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in OB_GYN_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jan_BAT_count[OB_GYN_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Feb_BAT_count[OB_GYN_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Mar_BAT_count[OB_GYN_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Apr_BAT_count[OB_GYN_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in OB_GYN_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_May_BAT_count[OB_GYN_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in OB_GYN_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jun_BAT_count[OB_GYN_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jul_BAT_count[OB_GYN_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Aug_BAT_count[OB_GYN_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Sep_BAT_count[OB_GYN_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Oct_BAT_count[OB_GYN_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Nov_BAT_count[OB_GYN_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Dec_BAT_count[OB_GYN_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots OBGYN-ATP

    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in OB_GYN_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jan_ATP_count[OB_GYN_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Feb_ATP_count[OB_GYN_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Mar_ATP_count[OB_GYN_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Apr_ATP_count[OB_GYN_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in OB_GYN_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_May_ATP_count[OB_GYN_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in OB_GYN_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jun_ATP_count[OB_GYN_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jul_ATP_count[OB_GYN_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Aug_ATP_count[OB_GYN_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Sep_ATP_count[OB_GYN_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Oct_ATP_count[OB_GYN_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Nov_ATP_count[OB_GYN_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Dec_ATP_count[OB_GYN_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot OBGYN-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in OB_GYN_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jan_ATBF_count[OB_GYN_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Feb_ATBF_count[OB_GYN_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Mar_ATBF_count[OB_GYN_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Apr_ATBF_count[OB_GYN_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in OB_GYN_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_May_ATBF_count[OB_GYN_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in OB_GYN_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jun_ATBF_count[OB_GYN_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jul_ATBF_count[OB_GYN_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Aug_ATBF_count[OB_GYN_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Sep_ATBF_count[OB_GYN_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Oct_ATBF_count[OB_GYN_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Nov_ATBF_count[OB_GYN_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Dec_ATBF_count[OB_GYN_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot OBGYN-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in OB_GYN_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jan_ATPS_count[OB_GYN_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Feb_ATPS_count[OB_GYN_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Mar_ATPS_count[OB_GYN_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Apr_ATPS_count[OB_GYN_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in OB_GYN_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_May_ATPS_count[OB_GYN_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in OB_GYN_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jun_ATPS_count[OB_GYN_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Jul_ATPS_count[OB_GYN_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Aug_ATPS_count[OB_GYN_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Sep_ATPS_count[OB_GYN_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Oct_ATPS_count[OB_GYN_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Nov_ATPS_count[OB_GYN_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in OB_GYN_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = OB_GYN_data_month_Dec_ATPS_count[OB_GYN_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)  

elif active_tab == "Pediatric ward":
    st.title("Hand hygiene compliance in the Siem Reap Pediatric ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", Pediatric_count_Jan, "| February: ", Pediatric_count_Feb, "| March: ", Pediatric_count_Mar, "| April: ", Pediatric_count_Apr, "| May: ", Pediatric_count_May, "| June: ", Pediatric_count_Jun, "| July: ", Pediatric_count_Jul, "| August: ", Pediatric_count_Aug, "| September: ", Pediatric_count_Sep, "| October: ", Pediatric_count_Oct, "| November: ", Pediatric_count_Nov, "| December: ", Pediatric_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots Pediatric-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Pediatric_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jan_BTP_count[Pediatric_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Feb_BTP_count[Pediatric_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Mar_BTP_count[Pediatric_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Apr_BTP_count[Pediatric_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pediatric_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_May_BTP_count[Pediatric_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pediatric_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jun_BTP_count[Pediatric_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jul_BTP_count[Pediatric_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Aug_BTP_count[Pediatric_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Sep_BTP_count[Pediatric_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Oct_BTP_count[Pediatric_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Nov_BTP_count[Pediatric_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Dec_BTP_count[Pediatric_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots Pediatric-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Pediatric_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jan_BAT_count[Pediatric_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Feb_BAT_count[Pediatric_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Mar_BAT_count[Pediatric_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Apr_BAT_count[Pediatric_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pediatric_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_May_BAT_count[Pediatric_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pediatric_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jun_BAT_count[Pediatric_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jul_BAT_count[Pediatric_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Aug_BAT_count[Pediatric_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Sep_BAT_count[Pediatric_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Oct_BAT_count[Pediatric_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Nov_BAT_count[Pediatric_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Dec_BAT_count[Pediatric_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots Pediatric-ATP

    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Pediatric_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jan_ATP_count[Pediatric_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Feb_ATP_count[Pediatric_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Mar_ATP_count[Pediatric_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Apr_ATP_count[Pediatric_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pediatric_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_May_ATP_count[Pediatric_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pediatric_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jun_ATP_count[Pediatric_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jul_ATP_count[Pediatric_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Aug_ATP_count[Pediatric_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Sep_ATP_count[Pediatric_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Oct_ATP_count[Pediatric_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Nov_ATP_count[Pediatric_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Dec_ATP_count[Pediatric_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot Pediatric-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Pediatric_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jan_ATBF_count[Pediatric_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Feb_ATBF_count[Pediatric_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Mar_ATBF_count[Pediatric_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Apr_ATBF_count[Pediatric_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pediatric_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_May_ATBF_count[Pediatric_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pediatric_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jun_ATBF_count[Pediatric_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jul_ATBF_count[Pediatric_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Aug_ATBF_count[Pediatric_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Sep_ATBF_count[Pediatric_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Oct_ATBF_count[Pediatric_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Nov_ATBF_count[Pediatric_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Dec_ATBF_count[Pediatric_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot Pediatric-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Pediatric_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jan_ATPS_count[Pediatric_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Feb_ATPS_count[Pediatric_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Mar_ATPS_count[Pediatric_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Apr_ATPS_count[Pediatric_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pediatric_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_May_ATPS_count[Pediatric_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Pediatric_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jun_ATPS_count[Pediatric_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Jul_ATPS_count[Pediatric_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Aug_ATPS_count[Pediatric_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Sep_ATPS_count[Pediatric_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Oct_ATPS_count[Pediatric_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Nov_ATPS_count[Pediatric_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Pediatric_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Pediatric_data_month_Dec_ATPS_count[Pediatric_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)  

elif active_tab == "Ophthalmology ward":
    st.title("Hand hygiene compliance in the Siem Reap Ophthalmology ward:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", Ophtalmology_count_Jan, "| February: ", Ophtalmology_count_Feb, "| March: ", Ophtalmology_count_Mar, "| April: ", Ophtalmology_count_Apr, "| May: ", Ophtalmology_count_May, "| June: ", Ophtalmology_count_Jun, "| July: ", Ophtalmology_count_Jul, "| August: ", Ophtalmology_count_Aug, "| September: ", Ophtalmology_count_Sep, "| October: ", Ophtalmology_count_Oct, "| November: ", Ophtalmology_count_Nov, "| December: ", Ophtalmology_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots Ophtalmology-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Ophtalmology_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jan_BTP_count[Ophtalmology_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Feb_BTP_count[Ophtalmology_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Mar_BTP_count[Ophtalmology_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Apr_BTP_count[Ophtalmology_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Ophtalmology_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_May_BTP_count[Ophtalmology_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Ophtalmology_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jun_BTP_count[Ophtalmology_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jul_BTP_count[Ophtalmology_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Aug_BTP_count[Ophtalmology_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Sep_BTP_count[Ophtalmology_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Oct_BTP_count[Ophtalmology_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Nov_BTP_count[Ophtalmology_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Dec_BTP_count[Ophtalmology_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots Ophtalmology-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Ophtalmology_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jan_BAT_count[Ophtalmology_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Feb_BAT_count[Ophtalmology_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Mar_BAT_count[Ophtalmology_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Apr_BAT_count[Ophtalmology_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Ophtalmology_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_May_BAT_count[Ophtalmology_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Ophtalmology_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jun_BAT_count[Ophtalmology_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jul_BAT_count[Ophtalmology_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Aug_BAT_count[Ophtalmology_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Sep_BAT_count[Ophtalmology_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Oct_BAT_count[Ophtalmology_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Nov_BAT_count[Ophtalmology_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Dec_BAT_count[Ophtalmology_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots Ophtalmology-ATP

    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Ophtalmology_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jan_ATP_count[Ophtalmology_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Feb_ATP_count[Ophtalmology_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Mar_ATP_count[Ophtalmology_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Apr_ATP_count[Ophtalmology_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Ophtalmology_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_May_ATP_count[Ophtalmology_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Ophtalmology_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jun_ATP_count[Ophtalmology_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jul_ATP_count[Ophtalmology_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Aug_ATP_count[Ophtalmology_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Sep_ATP_count[Ophtalmology_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Oct_ATP_count[Ophtalmology_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Nov_ATP_count[Ophtalmology_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Dec_ATP_count[Ophtalmology_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot Ophtalmology-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Ophtalmology_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jan_ATBF_count[Ophtalmology_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Feb_ATBF_count[Ophtalmology_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Mar_ATBF_count[Ophtalmology_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Apr_ATBF_count[Ophtalmology_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Ophtalmology_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_May_ATBF_count[Ophtalmology_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Ophtalmology_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jun_ATBF_count[Ophtalmology_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jul_ATBF_count[Ophtalmology_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Aug_ATBF_count[Ophtalmology_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Sep_ATBF_count[Ophtalmology_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Oct_ATBF_count[Ophtalmology_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Nov_ATBF_count[Ophtalmology_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Dec_ATBF_count[Ophtalmology_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot Ophtalmology-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Ophtalmology_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jan_ATPS_count[Ophtalmology_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Feb_ATPS_count[Ophtalmology_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Mar_ATPS_count[Ophtalmology_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Apr_ATPS_count[Ophtalmology_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Ophtalmology_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_May_ATPS_count[Ophtalmology_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Ophtalmology_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jun_ATPS_count[Ophtalmology_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Jul_ATPS_count[Ophtalmology_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Aug_ATPS_count[Ophtalmology_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Sep_ATPS_count[Ophtalmology_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Oct_ATPS_count[Ophtalmology_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Nov_ATPS_count[Ophtalmology_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Ophtalmology_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Ophtalmology_data_month_Dec_ATPS_count[Ophtalmology_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)  
    
elif active_tab == "All wards":
    st.title("Hand hygiene compliance in Siem Reap Referral hospital:")
    st.write("Total number of opportunities audited by month:")
    st.write("January: ", Total_data_count_Jan, "| February: ", Total_data_count_Feb, "| March: ", Total_data_count_Mar, "| April: ", Total_data_count_Apr, "| May: ", Total_data_count_May, "| June: ", Total_data_count_Jun, "| July: ", Total_data_count_Jul, "| August: ", Total_data_count_Aug, "| September: ", Total_data_count_Sep, "| October: ", Total_data_count_Oct, "| November: ", Total_data_count_Nov, "| December: ", Total_data_count_Dec)
    st.subheader("Breakdown of HH compliance, __*before touching a patient*__, by month:")
    
#Subplots Total-BTP
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Total_data_month_Jan_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jan_BTP_count[Total_data_month_Jan_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Feb_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Feb_BTP_count[Total_data_month_Feb_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Mar_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Mar_BTP_count[Total_data_month_Mar_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Apr_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Apr_BTP_count[Total_data_month_Apr_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Total_data_month_May_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_May_BTP_count[Total_data_month_May_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Total_data_month_Jun_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jun_BTP_count[Total_data_month_Jun_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Jul_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jul_BTP_count[Total_data_month_Jul_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Aug_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Aug_BTP_count[Total_data_month_Aug_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Sep_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Sep_BTP_count[Total_data_month_Sep_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Oct_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Oct_BTP_count[Total_data_month_Oct_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Nov_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Nov_BTP_count[Total_data_month_Nov_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Dec_BTP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Dec_BTP_count[Total_data_month_Dec_BTP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*before aseptic technique*__, by month:")

#Subplots Total-BAT
    
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Total_data_month_Jan_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jan_BAT_count[Total_data_month_Jan_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Feb_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Feb_BAT_count[Total_data_month_Feb_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Mar_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Mar_BAT_count[Total_data_month_Mar_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Apr_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Apr_BAT_count[Total_data_month_Apr_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Total_data_month_May_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_May_BAT_count[Total_data_month_May_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Total_data_month_Jun_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jun_BAT_count[Total_data_month_Jun_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Jul_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jul_BAT_count[Total_data_month_Jul_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Aug_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Aug_BAT_count[Total_data_month_Aug_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Sep_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Sep_BAT_count[Total_data_month_Sep_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Oct_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Oct_BAT_count[Total_data_month_Oct_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Nov_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Nov_BAT_count[Total_data_month_Nov_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Dec_BAT_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Dec_BAT_count[Total_data_month_Dec_BAT_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient*__, by month:")
    
#Subplots Total-ATP

    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Total_data_month_Jan_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jan_ATP_count[Total_data_month_Jan_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Feb_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Feb_ATP_count[Total_data_month_Feb_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Mar_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Mar_ATP_count[Total_data_month_Mar_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Apr_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Apr_ATP_count[Total_data_month_Apr_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Total_data_month_May_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_May_ATP_count[Total_data_month_May_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Total_data_month_Jun_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jun_ATP_count[Total_data_month_Jun_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Jul_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jul_ATP_count[Total_data_month_Jul_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Aug_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Aug_ATP_count[Total_data_month_Aug_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Sep_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Sep_ATP_count[Total_data_month_Sep_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Oct_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Oct_ATP_count[Total_data_month_Oct_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Nov_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Nov_ATP_count[Total_data_month_Nov_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Dec_ATP_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Dec_ATP_count[Total_data_month_Dec_ATP_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching body fluid*__, by month:")

#Subplot Total-ATBF
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Total_data_month_Jan_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jan_ATBF_count[Total_data_month_Jan_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Feb_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Feb_ATBF_count[Total_data_month_Feb_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Mar_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Mar_ATBF_count[Total_data_month_Mar_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Apr_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Apr_ATBF_count[Total_data_month_Apr_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Total_data_month_May_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_May_ATBF_count[Total_data_month_May_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Total_data_month_Jun_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jun_ATBF_count[Total_data_month_Jun_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Jul_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jul_ATBF_count[Total_data_month_Jul_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Aug_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Aug_ATBF_count[Total_data_month_Aug_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Sep_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Sep_ATBF_count[Total_data_month_Sep_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Oct_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Oct_ATBF_count[Total_data_month_Oct_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Nov_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Nov_ATBF_count[Total_data_month_Nov_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Dec_ATBF_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Dec_ATBF_count[Total_data_month_Dec_ATBF_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)

    st.subheader("Breakdown of HH compliance, __*after touching patient surrounding*__, by month:")

#Subplot Total-ATPS
    fig = make_subplots(rows =3, cols=4, start_cell="top-left", subplot_titles=("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"), vertical_spacing = 0.064, y_title= "Number of opportunities audited")
    
    for action in Total_data_month_Jan_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jan_ATPS_count[Total_data_month_Jan_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"],name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Feb_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Feb_ATPS_count[Total_data_month_Feb_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Mar_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Mar_ATPS_count[Total_data_month_Mar_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Apr_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Apr_ATPS_count[Total_data_month_Apr_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=1, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Total_data_month_May_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_May_ATPS_count[Total_data_month_May_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
        
    for action in Total_data_month_Jun_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jun_ATPS_count[Total_data_month_Jun_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Jul_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Jul_ATPS_count[Total_data_month_Jul_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Aug_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Aug_ATPS_count[Total_data_month_Aug_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=2, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Sep_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Sep_ATPS_count[Total_data_month_Sep_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=1).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Oct_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Oct_ATPS_count[Total_data_month_Oct_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=2).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Nov_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Nov_ATPS_count[Total_data_month_Nov_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=3).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    for action in Total_data_month_Dec_ATPS_count["HH action"].unique():
        colors = {"Missed" : "firebrick", "Hand_hygiene_correct" : "steelblue", "Hand_hygiene_incorrect" : "peachpuff"}
        new_df = Total_data_month_Dec_ATPS_count[Total_data_month_Dec_ATPS_count["HH action"]==action]
        fig.add_trace(go.Bar(x=new_df["Staff audited"], y=new_df["Moment audited"], name=action, legendgroup=action, marker_color=colors[action], text=new_df["Percentage"].apply(lambda x: '{0:1.0f}%'.format(x))), row=3, col=4).update_xaxes(categoryorder="total ascending").update_traces(textfont_size=10, textangle=0, textposition="outside", cliponaxis=False)
    
    fig.update_layout(height= 1000, width= 1500, barmode="stack")
    st.plotly_chart(fig)  